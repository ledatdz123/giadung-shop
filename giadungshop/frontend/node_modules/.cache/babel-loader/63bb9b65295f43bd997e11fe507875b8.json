{"ast":null,"code":"import { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, PRODUCT_FEATURED_REQUEST, PRODUCT_FEATURED_SUCCESS, PRODUCT_FEATURED_FAIL, PRODUCT_HOT_REQUEST, PRODUCT_HOT_SUCCESS, PRODUCT_HOT_FAIL, PRODUCT_LATEST_REQUEST, PRODUCT_LATEST_SUCCESS, PRODUCT_LATEST_FAIL, ADMIN_PRODUCTS_CHARTS_REQUEST, ADMIN_PRODUCTS_CHARTS_SUCCESS, ADMIN_PRODUCTS_CHARTS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_RESET, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from '../constants/productConstants';\nimport axios from 'axios';\nexport const getProducts = (keyword = '', currentPage = 1, category, brand) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    let link = `/api/products?keyword=${keyword}&page=${currentPage}`;\n\n    if (category && brand) {\n      const dataCate = await axios.get(`/api/brand/name/${brand}`);\n      const dataBrand = await axios.get(`/api/category/name/${category}`);\n      link = `/api/products?keyword=${keyword}&page=${currentPage}&brand=${dataCate.data.brand[0]._id}&category=${dataBrand.data.category[0]._id}`;\n    } else {\n      if (category) {\n        const {\n          data\n        } = await axios.get(`/api/category/name/${category}`);\n        link = `/api/products?keyword=${keyword}&page=${currentPage}&category=${data.category[0]._id}`;\n      } else if (brand) {\n        const {\n          data\n        } = await axios.get(`/api/brand/name/${brand}`);\n        link = `/api/products?keyword=${keyword}&page=${currentPage}&brand=${data.brand[0]._id}`;\n      }\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const getFeaturedProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_FEATURED_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/featured');\n    dispatch({\n      type: PRODUCT_FEATURED_SUCCESS,\n      payload: data.featuredProducts\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_FEATURED_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getHotProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_HOT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/hot');\n    dispatch({\n      type: PRODUCT_HOT_SUCCESS,\n      payload: data.hotProducts\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_HOT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getLatestProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LATEST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/latest');\n    dispatch({\n      type: PRODUCT_LATEST_SUCCESS,\n      payload: data.latestProducts\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LATEST_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getHotProductsByAdmin = (dateFrom, dateTo) => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_CHARTS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/admin/products/charts', {\n      dateFrom,\n      dateTo\n    }, config);\n    dispatch({\n      type: ADMIN_PRODUCTS_CHARTS_SUCCESS,\n      payload: data.hotProductsByAdmin\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_CHARTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductCollections = (currentPage = 1, collections, collection) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    let link = `/api/products?page=${currentPage}`;\n\n    if (collections === 'brand') {\n      const {\n        data\n      } = await axios.get(`/api/brand/name/${collection}`);\n      link = `/api/products?page=${currentPage}&brand=${data.brand[0]._id}`;\n    }\n\n    if (collections === 'category') {\n      const {\n        data\n      } = await axios.get(`/api/category/name/${collection}`);\n      console.log(data);\n      link = `/api/products?page=${currentPage}&category=${data.category[0]._id}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //ADMIN\n\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/admin/products`);\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // New product (Admin)\n\nexport const newProduct = (name, price, description, category, brand, images) => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/admin/product/new`, {\n      name,\n      price,\n      description,\n      category,\n      brand,\n      images\n    }, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete product (Admin)\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Product (ADMIN)\n\nexport const updateProduct = (id, name, price, stock, description, category, brand, images) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/admin/product/${id}`, {\n      id,\n      name,\n      price,\n      stock,\n      description,\n      category,\n      brand,\n      images\n    }, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get product reviews\n\nexport const getProductReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/reviews?id=${id}`);\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete product review\n\nexport const deleteReview = (id, productId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/reviews?id=${id}&productId=${productId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    console.log(error.response);\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/giadungshop/frontend/src/actions/productActions.js"],"names":["ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","PRODUCT_FEATURED_REQUEST","PRODUCT_FEATURED_SUCCESS","PRODUCT_FEATURED_FAIL","PRODUCT_HOT_REQUEST","PRODUCT_HOT_SUCCESS","PRODUCT_HOT_FAIL","PRODUCT_LATEST_REQUEST","PRODUCT_LATEST_SUCCESS","PRODUCT_LATEST_FAIL","ADMIN_PRODUCTS_CHARTS_REQUEST","ADMIN_PRODUCTS_CHARTS_SUCCESS","ADMIN_PRODUCTS_CHARTS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","CLEAR_ERRORS","axios","getProducts","keyword","currentPage","category","brand","dispatch","type","link","dataCate","get","dataBrand","data","_id","payload","error","response","getFeaturedProducts","featuredProducts","message","getHotProducts","hotProducts","getLatestProducts","latestProducts","getHotProductsByAdmin","dateFrom","dateTo","config","headers","post","hotProductsByAdmin","getProductCollections","collections","collection","console","log","getProductDetails","id","product","newReview","reviewData","put","success","getAdminProducts","products","newProduct","name","price","description","images","deleteProduct","delete","updateProduct","stock","getProductReviews","reviews","deleteReview","productId","clearErrors"],"mappings":"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","sourcesContent":["import {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    PRODUCT_FEATURED_REQUEST,\n    PRODUCT_FEATURED_SUCCESS,\n    PRODUCT_FEATURED_FAIL,\n    PRODUCT_HOT_REQUEST,\n    PRODUCT_HOT_SUCCESS,\n    PRODUCT_HOT_FAIL,\n    PRODUCT_LATEST_REQUEST,\n    PRODUCT_LATEST_SUCCESS,\n    PRODUCT_LATEST_FAIL,\n    ADMIN_PRODUCTS_CHARTS_REQUEST,\n    ADMIN_PRODUCTS_CHARTS_SUCCESS,\n    ADMIN_PRODUCTS_CHARTS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS,\n} from '../constants/productConstants'\n\nimport axios from 'axios'\n\nexport const getProducts = (keyword = '', currentPage = 1, category, brand) => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n        let link = `/api/products?keyword=${keyword}&page=${currentPage}`\n\n        if (category && brand) {\n            const dataCate = await axios.get(`/api/brand/name/${brand}`)\n            const dataBrand = await axios.get(`/api/category/name/${category}`)\n            link = `/api/products?keyword=${keyword}&page=${currentPage}&brand=${dataCate.data.brand[0]._id}&category=${dataBrand.data.category[0]._id}`\n\n        } else {\n            if (category) {\n                const { data } = await axios.get(`/api/category/name/${category}`)\n                link = `/api/products?keyword=${keyword}&page=${currentPage}&category=${data.category[0]._id}`\n            }\n            else if (brand) {\n                const { data } = await axios.get(`/api/brand/name/${brand}`)\n                link = `/api/products?keyword=${keyword}&page=${currentPage}&brand=${data.brand[0]._id}`\n            }\n        }\n        const { data } = await axios.get(link)\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response\n        })\n    }\n}\n\nexport const getFeaturedProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_FEATURED_REQUEST })\n        const { data } = await axios.get('/api/products/featured')\n        dispatch({\n            type: PRODUCT_FEATURED_SUCCESS,\n            payload: data.featuredProducts\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_FEATURED_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getHotProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_HOT_REQUEST })\n        const { data } = await axios.get('/api/products/hot')\n        dispatch({\n            type: PRODUCT_HOT_SUCCESS,\n            payload: data.hotProducts\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_HOT_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getLatestProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LATEST_REQUEST })\n        const { data } = await axios.get('/api/products/latest')\n        dispatch({\n            type: PRODUCT_LATEST_SUCCESS,\n            payload: data.latestProducts\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LATEST_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getHotProductsByAdmin = (dateFrom, dateTo) => async (dispatch) => {\n    try {\n        dispatch({ type: ADMIN_PRODUCTS_CHARTS_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/admin/products/charts', { dateFrom, dateTo }, config)\n        dispatch({\n            type: ADMIN_PRODUCTS_CHARTS_SUCCESS,\n            payload: data.hotProductsByAdmin\n        })\n    } catch (error) {\n        dispatch({\n            type: ADMIN_PRODUCTS_CHARTS_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getProductCollections = (currentPage = 1, collections, collection) => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n        let link = `/api/products?page=${currentPage}`\n        if (collections === 'brand') {\n            const { data } = await axios.get(`/api/brand/name/${collection}`)\n            link = `/api/products?page=${currentPage}&brand=${data.brand[0]._id}`\n        }\n        if (collections === 'category') {\n            const { data } = await axios.get(`/api/category/name/${collection}`)\n            console.log(data);\n\n            link = `/api/products?page=${currentPage}&category=${data.category[0]._id}`\n        }\n        const { data } = await axios.get(link)\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/product/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//ADMIN\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New product (Admin)\nexport const newProduct = (name, price, description, category, brand, images) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(`/api/admin/product/new`, { name, price, description, category, brand, images }, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, name, price, stock, description, category, brand, images) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/admin/product/${id}`, { id, name, price, stock, description, category, brand, images }, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n//Clear Error\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS,\n    })\n}"]},"metadata":{},"sourceType":"module"}