{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\CHUNGKHOANNN\\\\new\\\\giadungshop\\\\frontend\\\\src\\\\components\\\\user\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\nimport Banner from '../../assets/banner.png';\nimport { Link } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { forgotPassword, clearErrors, resetPassword } from '../../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    loading,\n    message\n  } = useSelector(state => state.forgotPassword);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('password', password);\n    formData.set('confirmPassword', confirmPassword);\n    dispatch(resetPassword(match.params.token, formData));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (message) {\n      alert.success(message);\n      history.push(\"/login\");\n    }\n  }, [dispatch, alert, error, message]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Forgot Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"account\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '25%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Forgot Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email_field\",\n                children: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password_field\",\n                className: \"form-control\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email_field\",\n                children: \"X\\xE1c nh\\u1EADn l\\u1EA1i m\\u1EADt kh\\u1EA9u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password_field\",\n                className: \"form-control\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"forgot_password_button\",\n              type: \"submit\",\n              className: \"btn btn-login\",\n              disabled: loading ? true : false,\n              children: \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPassword, \"iOWrU4UUzqOr61j31g6SyuFkf8E=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/new/giadungshop/frontend/src/components/user/ResetPassword.js"],"names":["React","Fragment","useState","useEffect","MetaData","Loader","Banner","Link","useAlert","useDispatch","useSelector","forgotPassword","clearErrors","resetPassword","ResetPassword","history","match","password","setPassword","confirmPassword","setConfirmPassword","alert","dispatch","error","loading","message","state","submitHandler","e","preventDefault","formData","FormData","set","params","token","success","push","marginTop","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layouts/MetaData'\r\nimport Loader from '../layouts/Loader'\r\nimport Banner from '../../assets/banner.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { forgotPassword, clearErrors, resetPassword } from '../../actions/userActions'\r\n\r\nconst ResetPassword = ({history, match}) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword]=useState('')\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword)\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message)\r\n            history.push(\"/login\")\r\n        }\r\n\r\n    }, [dispatch, alert, error, message])\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Forgot Password'} />\r\n            <section className=\"account\">\r\n                <div className=\"container\">\r\n                            {\r\n                                loading ? (\r\n                                    <div style={{ marginTop: '25%' }}>\r\n                                        <Loader />\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"account-form\">\r\n                                        <div className=\"form-header\">\r\n                                            <div className=\"login\">\r\n                                                <span>Forgot Password</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <form onSubmit={submitHandler}>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email_field\">Mật khẩu mới</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    id=\"password_field\"\r\n                                                    className=\"form-control\"\r\n                                                    value={password}\r\n                                                    onChange={(e) => setPassword(e.target.value)}\r\n                                                />\r\n\r\n                                                <label htmlFor=\"email_field\">Xác nhận lại mật khẩu</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    id=\"password_field\"\r\n                                                    className=\"form-control\"\r\n                                                    value={confirmPassword}\r\n                                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <button\r\n                                                id=\"forgot_password_button\"\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-login\"\r\n                                                disabled={loading ? true : false} >\r\n                                                Đổi mật khẩu\r\n                                            </button>\r\n                                        </form>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                    </div>\r\n            </section>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n"]},"metadata":{},"sourceType":"module"}