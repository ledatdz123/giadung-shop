{"ast":null,"code":"import { ADD_TO_RECEIPT, REMOVE_ITEM_RECEIPT, UPDATE_TO_RECEIPT, SAVE_SUPPLIER_INFO, CREATE_RECEIPT_REQUEST, CREATE_RECEIPT_SUCCESS, CREATE_RECEIPT_FAIL, ALL_RECEIPTS_REQUEST, ALL_RECEIPTS_SUCCESS, ALL_RECEIPTS_FAIL, RECEIPT_DETAILS_REQUEST, RECEIPT_DETAILS_SUCCESS, RECEIPT_DETAILS_FAIL } from '../constants/receiptConstants';\nimport axios from 'axios';\nexport const addItemToImportReceipt = (id, quantity, importPrice) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/product/${id}`);\n  dispatch({\n    type: ADD_TO_RECEIPT,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      image: data.product.images[0].url,\n      stock: data.product.stock,\n      price: data.product.price,\n      quantity: quantity,\n      importPrice: importPrice\n    }\n  });\n  localStorage.setItem('importReceiptItems', JSON.stringify(getState().importReceipt.importReceiptItems));\n};\nexport const updateItem = (id, quantity, importPrice) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/product/${id}`);\n  console.log(quantity);\n  dispatch({\n    type: UPDATE_TO_RECEIPT,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      image: data.product.images[0].url,\n      stock: data.product.stock,\n      price: data.product.price,\n      quantity: quantity,\n      importPrice: importPrice\n    }\n  });\n  localStorage.setItem('importReceiptItems', JSON.stringify(getState().importReceipt.importReceiptItems));\n};\nexport const removeItem = id => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_ITEM_RECEIPT,\n    payload: {\n      id: id\n    }\n  });\n  localStorage.setItem('importReceiptItems', JSON.stringify(getState().importReceipt.importReceiptItems));\n};\nexport const saveSupplierInfo = data => async dispatch => {\n  dispatch({\n    type: SAVE_SUPPLIER_INFO,\n    payload: data\n  });\n  localStorage.setItem('supplierInfo', JSON.stringify(data));\n};\nexport const createReceipt = receipt => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_RECEIPT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/admin/receipt/new', receipt, config);\n    dispatch({\n      type: CREATE_RECEIPT_SUCCESS,\n      payload: data\n    });\n    localStorage.removeItem('importReceiptItems');\n  } catch (error) {\n    dispatch({\n      type: CREATE_RECEIPT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get receipt details\n\nexport const getReceiptDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: RECEIPT_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/admin/receipt/${id}`, config);\n    dispatch({\n      type: RECEIPT_DETAILS_SUCCESS,\n      payload: data.receipt\n    });\n  } catch (error) {\n    dispatch({\n      type: RECEIPT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get all receipts - ADMIN\n\nexport const allReceipts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_RECEIPTS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/admin/receipts`, config);\n    dispatch({\n      type: ALL_RECEIPTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_RECEIPTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/giadungshop/frontend/src/actions/receiptAction.js"],"names":["ADD_TO_RECEIPT","REMOVE_ITEM_RECEIPT","UPDATE_TO_RECEIPT","SAVE_SUPPLIER_INFO","CREATE_RECEIPT_REQUEST","CREATE_RECEIPT_SUCCESS","CREATE_RECEIPT_FAIL","ALL_RECEIPTS_REQUEST","ALL_RECEIPTS_SUCCESS","ALL_RECEIPTS_FAIL","RECEIPT_DETAILS_REQUEST","RECEIPT_DETAILS_SUCCESS","RECEIPT_DETAILS_FAIL","axios","addItemToImportReceipt","id","quantity","importPrice","dispatch","getState","data","get","type","payload","product","_id","name","image","images","url","stock","price","localStorage","setItem","JSON","stringify","importReceipt","importReceiptItems","updateItem","console","log","removeItem","saveSupplierInfo","createReceipt","receipt","config","headers","post","error","response","message","getReceiptDetails","allReceipts"],"mappings":"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","sourcesContent":["import {\n    ADD_TO_RECEIPT, REMOVE_ITEM_RECEIPT, UPDATE_TO_RECEIPT, SAVE_SUPPLIER_INFO,\n    CREATE_RECEIPT_REQUEST, CREATE_RECEIPT_SUCCESS, CREATE_RECEIPT_FAIL,\n    ALL_RECEIPTS_REQUEST, ALL_RECEIPTS_SUCCESS, ALL_RECEIPTS_FAIL,\n    RECEIPT_DETAILS_REQUEST, RECEIPT_DETAILS_SUCCESS, RECEIPT_DETAILS_FAIL\n} from '../constants/receiptConstants'\nimport axios from 'axios'\n\nexport const addItemToImportReceipt = (id, quantity, importPrice) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/product/${id}`)\n\n    dispatch({\n        type: ADD_TO_RECEIPT,\n        payload: {\n            product: data.product._id,\n            name: data.product.name,\n            image: data.product.images[0].url,\n            stock: data.product.stock,\n            price: data.product.price,\n            quantity: quantity,\n            importPrice: importPrice\n        }\n    })\n\n    localStorage.setItem('importReceiptItems', JSON.stringify(getState().importReceipt.importReceiptItems))\n}\n\n\nexport const updateItem = (id, quantity, importPrice) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/product/${id}`)\n    console.log(quantity);\n    dispatch({\n        type: UPDATE_TO_RECEIPT,\n        payload: {\n            product: data.product._id,\n            name: data.product.name,\n            image: data.product.images[0].url,\n            stock: data.product.stock,\n            price: data.product.price,\n            quantity: quantity,\n            importPrice: importPrice\n        }\n    })\n\n    localStorage.setItem('importReceiptItems', JSON.stringify(getState().importReceipt.importReceiptItems))\n}\n\nexport const removeItem = (id) => async (dispatch, getState) => {\n\n    dispatch({\n        type: REMOVE_ITEM_RECEIPT,\n        payload: {\n            id: id\n        }\n    })\n    localStorage.setItem('importReceiptItems', JSON.stringify(getState().importReceipt.importReceiptItems))\n}\n\nexport const saveSupplierInfo = (data) => async (dispatch) => {\n\n    dispatch({\n        type: SAVE_SUPPLIER_INFO,\n        payload: data\n    })\n\n    localStorage.setItem('supplierInfo', JSON.stringify(data))\n\n}\n\nexport const createReceipt = (receipt) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: CREATE_RECEIPT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/admin/receipt/new', receipt, config)\n\n        dispatch({\n            type: CREATE_RECEIPT_SUCCESS,\n            payload: data\n        })\n        localStorage.removeItem('importReceiptItems')\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_RECEIPT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Get receipt details\nexport const getReceiptDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: RECEIPT_DETAILS_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.get(`/api/admin/receipt/${id}`, config)\n        dispatch({\n            type: RECEIPT_DETAILS_SUCCESS,\n            payload: data.receipt\n        })\n\n    } catch (error) {\n        dispatch({\n            type: RECEIPT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all receipts - ADMIN\nexport const allReceipts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_RECEIPTS_REQUEST });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.get(`/api/admin/receipts`, config)\n\n        dispatch({\n            type: ALL_RECEIPTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_RECEIPTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}