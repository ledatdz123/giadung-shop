{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\CHUNGKHOANNN\\\\new\\\\giadungshop\\\\frontend\\\\src\\\\components\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from './layouts/MetaData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from '../actions/productActions';\nimport Product from './product/Product';\nimport Loader from './layouts/Loader';\nimport { useAlert } from 'react-alert';\nimport Pagination from \"react-js-pagination\";\nimport { getBrands } from '../actions/brandActions';\nimport { getCategories } from '../actions/categoryActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Shop = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [category, setCategory] = useState('');\n  const [brand, setBrand] = useState('');\n  const [rating, setRating] = useState(0);\n  const {\n    brands,\n    loading: loadingBrand,\n    error: errorBrand\n  } = useSelector(state => state.brands);\n  const {\n    categories,\n    loading: loadingCategories,\n    error: errorCategories\n  } = useSelector(state => state.categories);\n  const {\n    loading,\n    products,\n    error,\n    productsCount,\n    resPerPage,\n    filteredProductsCount\n  } = useSelector(state => state.products);\n  const keyword = match.params.keyword;\n  useEffect(() => {\n    if (error) {\n      return alert.error(error);\n    }\n\n    dispatch(getProducts(keyword, currentPage, category, brand));\n\n    if (errorBrand) {\n      return alert.error(errorBrand);\n    }\n\n    dispatch(getBrands());\n\n    if (errorCategories) {\n      return alert.error(errorCategories);\n    }\n\n    dispatch(getCategories());\n  }, [dispatch, alert, error, keyword, currentPage, category, brand, errorBrand, errorCategories]);\n\n  function setCurrentPageNo(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  let count = productsCount;\n\n  if (filteredProductsCount <= productsCount && currentPage === 1) {\n    count = filteredProductsCount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Shop'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"shop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shop-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shop-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"All Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Total: \", filteredProductsCount, \" products\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3 filter\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [categories && categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    cursor: 'pointer',\n                    listStyleType: 'none'\n                  },\n                  onClick: () => setCategory(category.name),\n                  children: category.name\n                }, category._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    cursor: 'pointer',\n                    listStyleType: 'none'\n                  },\n                  onClick: () => setCategory(''),\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Brands\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [brands && brands.map(brand => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    cursor: 'pointer',\n                    listStyleType: 'none'\n                  },\n                  onClick: () => setBrand(brand.name),\n                  children: brand.name\n                }, brand._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    cursor: 'pointer',\n                    listStyleType: 'none'\n                  },\n                  onClick: () => setBrand(''),\n                  children: \"Clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-9\",\n              children: [brand && category ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Tags: \", brand, \", \", category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 65\n              }, this) : brand ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Tags: \", brand]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 59\n              }, this) : category ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Tags: \", category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 95\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: filteredProductsCount === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-9\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"empty\",\n                    children: \"Products is empty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: products && products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n                    product: product,\n                    col: 4,\n                    history: history\n                  }, product._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 65\n                  }, this))\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this), resPerPage <= count && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-pagination\",\n                children: /*#__PURE__*/_jsxDEV(Pagination, {\n                  activePage: currentPage,\n                  itemsCountPerPage: resPerPage,\n                  totalItemsCount: filteredProductsCount,\n                  onChange: setCurrentPageNo,\n                  nextPageText: 'Next',\n                  prevPageText: 'Prev',\n                  firstPageText: 'First',\n                  lastPageText: 'Last',\n                  itemClass: \"page-item\",\n                  linkClass: \"page-link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"6tJ+XoZpA2HBBaETUXqGkeYlzm0=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector, useSelector];\n});\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/new/giadungshop/frontend/src/components/Shop.js"],"names":["React","Fragment","useState","useEffect","MetaData","useDispatch","useSelector","getProducts","Product","Loader","useAlert","Pagination","getBrands","getCategories","Shop","match","history","dispatch","alert","currentPage","setCurrentPage","category","setCategory","brand","setBrand","rating","setRating","brands","loading","loadingBrand","error","errorBrand","state","categories","loadingCategories","errorCategories","products","productsCount","resPerPage","filteredProductsCount","keyword","params","setCurrentPageNo","pageNumber","count","map","cursor","listStyleType","name","_id","product"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from './layouts/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\nimport Product from './product/Product'\nimport Loader from './layouts/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from \"react-js-pagination\"\nimport { getBrands } from '../actions/brandActions'\nimport { getCategories } from '../actions/categoryActions'\n\nconst Shop = ({ match, history }) => {\n\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const [currentPage, setCurrentPage] = useState(1)\n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [rating, setRating] = useState(0)\n    const { brands, loading: loadingBrand, error: errorBrand } = useSelector(state => state.brands)\n    const { categories, loading: loadingCategories, error: errorCategories } = useSelector(state => state.categories)\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n        dispatch(getProducts(keyword, currentPage, category, brand))\n\n        if (errorBrand) {\n            return alert.error(errorBrand)\n        }\n        dispatch(getBrands())\n        if (errorCategories) {\n            return alert.error(errorCategories)\n        }\n        dispatch(getCategories())\n    }, [dispatch, alert, error, keyword, currentPage, category, brand, errorBrand, errorCategories])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount\n    if (filteredProductsCount <= productsCount && currentPage === 1) {\n        count = filteredProductsCount\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Shop'} />\n            {/* shop */}\n            <section className=\"shop\">\n                <div className=\"container\">\n                    <div className=\"shop-wrap\">\n                        <div className=\"shop-title\">\n                            <h2>Shop</h2>\n                            <p>All Products</p>\n                            <span>Total: {filteredProductsCount} products</span>\n                        </div>\n                        {/* <div className=\"sort\">\n                            <select >\n                                <option value=\"default\">Default</option>\n                                <option value=\"prices-asc\">Prices asc</option>\n                                <option value=\"prices-desc\">Prices desc</option>\n                                <option value=\"name-a-z\">Name A - Z</option>\n                                <option value=\"name-z-a\">Name Z - A</option>\n                            </select>\n\n                        </div> */}\n                    </div>\n\n                    <div className=\"row\">\n                        <Fragment>\n                            <div className=\"col-3 filter\">\n                                <h3>Categories</h3>\n                                <ul>\n                                    {categories && categories.map(category => (\n                                        <li\n                                            style={{\n                                                cursor: 'pointer',\n                                                listStyleType: 'none'\n                                            }}\n                                            key={category._id}\n                                            onClick={() => setCategory(category.name)}>\n                                            {category.name}\n                                        </li>\n                                    ))}\n                                    <li\n                                        style={{\n                                            cursor: 'pointer',\n                                            listStyleType: 'none'\n                                        }}\n                                        onClick={() => setCategory('')}>Clear</li>\n                                </ul>\n                                <hr className=\"my-5\" />\n                                <h3>Brands</h3>\n                                <ul>\n                                    {brands && brands.map(brand => (\n                                        <li\n                                            style={{\n                                                cursor: 'pointer',\n                                                listStyleType: 'none'\n                                            }}\n                                            key={brand._id}\n                                            onClick={() => setBrand(brand.name)}>\n                                            {brand.name}\n                                        </li>\n                                    ))}\n                                    <li\n                                        style={{\n                                            cursor: 'pointer',\n                                            listStyleType: 'none'\n                                        }}\n                                        onClick={() => setBrand('')}>Clear</li>\n                                </ul>\n                            </div>\n                        </Fragment>\n                        {\n                            loading ? <Loader /> : (\n                                <Fragment>\n                                    <div className=\"col-9\">\n\n                                        {\n                                            brand && category ? <h4>Tags: {brand}, {category}</h4>\n                                                : brand ? <h4>Tags: {brand}</h4> : category ? <h4>Tags: {category}</h4> : null\n                                        }\n                                        <div className=\"row\">\n                                            {\n                                                filteredProductsCount === 0 ? (\n                                                    <div className=\"col-9\">\n                                                        <h3 className=\"empty\">Products is empty</h3>\n                                                    </div>\n                                                ) : (\n                                                    <>\n                                                        {\n                                                            products && products.map(product => (\n                                                                <Product product={product} col={4} key={product._id} history={history} />\n                                                            ))\n                                                        }\n                                                    </>\n                                                )\n                                            }\n\n                                        </div>\n                                        {\n                                            resPerPage <= count && (\n\n                                                <div className=\"product-pagination\">\n                                                    <Pagination\n                                                        activePage={currentPage}\n                                                        itemsCountPerPage={resPerPage}\n                                                        totalItemsCount={filteredProductsCount}\n                                                        onChange={setCurrentPageNo}\n                                                        nextPageText={'Next'}\n                                                        prevPageText={'Prev'}\n                                                        firstPageText={'First'}\n                                                        lastPageText={'Last'}\n                                                        itemClass=\"page-item\"\n                                                        linkClass=\"page-link\"\n                                                    />\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n\n                                </Fragment>\n\n                            )\n                        }\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default Shop\n"]},"metadata":{},"sourceType":"module"}