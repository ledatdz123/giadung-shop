{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\CHUNGKHOANNN\\\\giadungshop\\\\frontend\\\\src\\\\components\\\\admin\\\\UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users && users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"icon icon-edit\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bxs-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: true,\n            className: \"icon icon-delete\",\n            onClick: () => deleteUserHandler(user._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bxs-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Admin - All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row admin-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list-header my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"All Users (Total: \", users.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n            data: setUsers(),\n            className: \"px-3\",\n            entriesOptions: [10, 20, 50],\n            entries: 10,\n            hover: true,\n            searchTop: true,\n            searchBottom: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersList, \"Y04wUDJmFcgGjJIIVQw3/P3HcoI=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/giadungshop/frontend/src/components/admin/UsersList.js"],"names":["React","Fragment","useEffect","Link","MDBDataTableV5","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allUsers","deleteUser","clearErrors","DELETE_USER_RESET","UsersList","history","alert","dispatch","loading","error","users","state","isDeleted","user","success","push","type","deleteUserHandler","id","setUsers","data","columns","label","field","sort","rows","forEach","_id","name","email","role","actions","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted successfully');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users && users.forEach(user => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n\n                actions:\n                    <Fragment>\n                        <Link to={`/admin/user/${user._id}`} className=\"icon icon-edit\">\n                            <i className=\"bx bxs-pencil\" />\n                        </Link>\n                        <a href className=\"icon icon-delete\" onClick={() => deleteUserHandler(user._id)}>\n                            <i className='bx bxs-trash-alt' ></i>\n                        </a>\n                    </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Admin - All Users'} />\n            <div className=\"row admin-users\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"users-list-header my-4\">\n                            <h3>All Users (Total: {users.length})</h3>\n                        </div>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTableV5\n                                data={setUsers()}\n                                className=\"px-3\"\n                                entriesOptions={[10, 20, 50]}\n                                entries={10}\n                                hover\n                                searchTop\n                                searchBottom={false}\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}