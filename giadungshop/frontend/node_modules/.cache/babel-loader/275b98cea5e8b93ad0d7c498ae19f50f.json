{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\CHUNGKHOANNN\\\\new\\\\giadungshop\\\\frontend\\\\src\\\\components\\\\admin\\\\UpdateBrand.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from '../layouts/MetaData';\nimport Sidebar from './Sidebar';\nimport axios from 'axios';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBrandDetailsById, updateBrand, clearErrors } from '../../actions/brandActions';\nimport { UPDATE_BRAND_RESET, BRAND_DETAILS_RESET } from '../../constants/brandConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateBrand = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    brand\n  } = useSelector(state => state.brandDetails);\n  const {\n    loading,\n    error: updateError,\n    isUpdated\n  } = useSelector(state => state.brand);\n  const brandId = match.params.id;\n  useEffect(() => {\n    if (!brand || brand._id !== brandId) {\n      dispatch(getBrandDetailsById(brandId));\n    } else {\n      setName(brand.name);\n      setDescription(brand.description);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('Brand updated successfully');\n      history.push('/admin/brands');\n      dispatch({\n        type: UPDATE_BRAND_RESET\n      });\n      dispatch({\n        type: BRAND_DETAILS_RESET\n      });\n    }\n  }, [dispatch, alert, error, isUpdated, history, updateError, brand, brandId]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (name === '') {\n      alert.error('Please enter a name!');\n      return;\n    }\n\n    if (description === '') {\n      alert.error('Please enter a description!');\n      return;\n    }\n\n    dispatch(updateBrand(brandId, name, description));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Update Product'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row admin-products\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5 col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Update Brand #\", brandId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"\",\n              onSubmit: submitHandler,\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name_field\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"name_field\",\n                  className: \"form-control\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description_field\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  id: \"description_field\",\n                  rows: \"6\",\n                  value: description,\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"update_button\",\n                type: \"submit\",\n                className: \"btn btn-update btn-block\",\n                children: \"UPDATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateBrand, \"Fg2MsZepRVF96dwMF4rKWjG2RM8=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateBrand;\nexport default UpdateBrand;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateBrand\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/new/giadungshop/frontend/src/components/admin/UpdateBrand.js"],"names":["React","Fragment","useState","useEffect","MetaData","Sidebar","axios","useAlert","useDispatch","useSelector","getBrandDetailsById","updateBrand","clearErrors","UPDATE_BRAND_RESET","BRAND_DETAILS_RESET","UpdateBrand","match","history","name","setName","description","setDescription","alert","dispatch","error","brand","state","brandDetails","loading","updateError","isUpdated","brandId","params","id","_id","success","push","type","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\nimport axios from 'axios'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBrandDetailsById, updateBrand, clearErrors } from '../../actions/brandActions'\nimport { UPDATE_BRAND_RESET, BRAND_DETAILS_RESET } from '../../constants/brandConstants'\n\nconst UpdateBrand = ({ match, history }) => {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, brand } = useSelector(state => state.brandDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.brand)\n\n    const brandId = match.params.id\n\n    useEffect(() => {\n        if (!brand || brand._id !== brandId) {\n            dispatch(getBrandDetailsById(brandId))\n        } else {\n            setName(brand.name)\n            setDescription(brand.description)\n        }\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError)\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('Brand updated successfully')\n            history.push('/admin/brands')\n            dispatch({ type: UPDATE_BRAND_RESET })\n            dispatch({ type: BRAND_DETAILS_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, brand, brandId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n\n        dispatch(updateBrand(brandId, name, description))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-5 col-md-5\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>Update Brand #{brandId}</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <button\n                                    id=\"update_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    UPDATE\n                                </button>\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateBrand\n"]},"metadata":{},"sourceType":"module"}