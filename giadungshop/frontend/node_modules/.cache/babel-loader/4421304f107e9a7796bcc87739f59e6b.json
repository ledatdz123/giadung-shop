{"ast":null,"code":"import { ADD_TO_RECEIPT, REMOVE_ITEM_RECEIPT, UPDATE_TO_RECEIPT, RECEIPT_RESET, SAVE_SUPPLIER_INFO, CREATE_RECEIPT_REQUEST, CREATE_RECEIPT_SUCCESS, CREATE_RECEIPT_FAIL, ALL_RECEIPTS_REQUEST, ALL_RECEIPTS_SUCCESS, ALL_RECEIPTS_FAIL, RECEIPT_DETAILS_REQUEST, RECEIPT_DETAILS_SUCCESS, RECEIPT_DETAILS_FAIL, CLEAR_ERRORS } from '../constants/receiptConstants';\nexport const importReceiptReducer = (state = {\n  importReceiptItems: [],\n  supplierInfo: {}\n}, action) => {\n  switch (action.type) {\n    case ADD_TO_RECEIPT:\n      const item = action.payload;\n      const isItemExist = state.importReceiptItems ? state.importReceiptItems.find(i => i.product === item.product) : null;\n\n      if (isItemExist) {\n        return { ...state,\n          message: 'Product already exists!',\n          importReceiptItems: state.importReceiptItems\n        };\n      } else {\n        return { ...state,\n          importReceiptItems: [...state.importReceiptItems, item]\n        };\n      }\n\n    case REMOVE_ITEM_RECEIPT:\n      return { ...state,\n        importReceiptItems: state.importReceiptItems.filter(i => i.product !== action.payload.id)\n      };\n\n    case UPDATE_TO_RECEIPT:\n      const updateItem = action.payload;\n      const isUpdateItemExist = state.importReceiptItems.find(i => i.product === updateItem.product);\n\n      if (isUpdateItemExist) {\n        return { ...state,\n          importReceiptItems: state.importReceiptItems.map(i => i.product === isUpdateItemExist.product ? updateItem : i)\n        };\n      } else {\n        return { ...state,\n          importReceiptItems: [...state.importReceiptItems, updateItem]\n        };\n      }\n\n    case SAVE_SUPPLIER_INFO:\n      return { ...state,\n        supplierInfo: action.payload\n      };\n    // case RECEIPT_IMPORT:\n    //     return {\n    //         ...state,\n    //         importReceiptItems: action.payload,\n    //     }\n\n    case RECEIPT_RESET:\n      return {\n        importReceiptItems: [],\n        supplierInfo: {}\n      };\n\n    default:\n      return state;\n  }\n};\nexport const newReceiptReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_RECEIPT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case CREATE_RECEIPT_SUCCESS:\n      return {\n        loading: false,\n        receipt: action.payload\n      };\n\n    case CREATE_RECEIPT_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const receiptDetailsReducer = (state = {\n  receipt: {}\n}, action) => {\n  switch (action.type) {\n    case RECEIPT_DETAILS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case RECEIPT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        receipt: action.payload\n      };\n\n    case RECEIPT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const allReceiptsReducer = (state = {\n  receipts: []\n}, action) => {\n  switch (action.type) {\n    case ALL_RECEIPTS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case ALL_RECEIPTS_SUCCESS:\n      return {\n        loading: false,\n        receipts: action.payload.receipts\n      };\n\n    case ALL_RECEIPTS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/giadungshop/frontend/src/reducers/receiptReducers.js"],"names":["ADD_TO_RECEIPT","REMOVE_ITEM_RECEIPT","UPDATE_TO_RECEIPT","RECEIPT_RESET","SAVE_SUPPLIER_INFO","CREATE_RECEIPT_REQUEST","CREATE_RECEIPT_SUCCESS","CREATE_RECEIPT_FAIL","ALL_RECEIPTS_REQUEST","ALL_RECEIPTS_SUCCESS","ALL_RECEIPTS_FAIL","RECEIPT_DETAILS_REQUEST","RECEIPT_DETAILS_SUCCESS","RECEIPT_DETAILS_FAIL","CLEAR_ERRORS","importReceiptReducer","state","importReceiptItems","supplierInfo","action","type","item","payload","isItemExist","find","i","product","message","filter","id","updateItem","isUpdateItemExist","map","newReceiptReducer","loading","receipt","error","receiptDetailsReducer","allReceiptsReducer","receipts"],"mappings":"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","sourcesContent":["import {\n    ADD_TO_RECEIPT, REMOVE_ITEM_RECEIPT, UPDATE_TO_RECEIPT, RECEIPT_RESET, SAVE_SUPPLIER_INFO,\n    CREATE_RECEIPT_REQUEST, CREATE_RECEIPT_SUCCESS, CREATE_RECEIPT_FAIL,\n    ALL_RECEIPTS_REQUEST, ALL_RECEIPTS_SUCCESS, ALL_RECEIPTS_FAIL,\n    RECEIPT_DETAILS_REQUEST, RECEIPT_DETAILS_SUCCESS, RECEIPT_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/receiptConstants'\n\n\nexport const importReceiptReducer = (state = { importReceiptItems: [], supplierInfo: {} }, action) => {\n    switch (action.type) {\n\n        case ADD_TO_RECEIPT:\n            const item = action.payload\n            const isItemExist = state.importReceiptItems ? state.importReceiptItems.find(i => i.product === item.product) : null\n            if (isItemExist) {\n                return {\n                    ...state,\n                    message: 'Product already exists!',\n                    importReceiptItems: state.importReceiptItems\n                }\n            } else {\n                return {\n                    ...state,\n                    importReceiptItems: [...state.importReceiptItems, item]\n                }\n\n            }\n\n        case REMOVE_ITEM_RECEIPT:\n            return {\n                ...state,\n                importReceiptItems: state.importReceiptItems.filter(i => i.product !== action.payload.id)\n            }\n\n        case UPDATE_TO_RECEIPT:\n            const updateItem = action.payload;\n            const isUpdateItemExist = state.importReceiptItems.find(i => i.product === updateItem.product)\n            if (isUpdateItemExist) {\n\n                return {\n                    ...state,\n                    importReceiptItems: state.importReceiptItems.map(i => i.product === isUpdateItemExist.product ? updateItem : i)\n                }\n            } else {\n                return {\n                    ...state,\n                    importReceiptItems: [...state.importReceiptItems, updateItem]\n                }\n            }\n\n        case SAVE_SUPPLIER_INFO:\n            return {\n                ...state,\n                supplierInfo: action.payload\n            }\n        // case RECEIPT_IMPORT:\n        //     return {\n        //         ...state,\n        //         importReceiptItems: action.payload,\n        //     }\n        case RECEIPT_RESET:\n            return {\n                importReceiptItems: [],\n                supplierInfo: {}\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const newReceiptReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_RECEIPT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_RECEIPT_SUCCESS:\n            return {\n                loading: false,\n                receipt: action.payload\n            }\n\n        case CREATE_RECEIPT_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const receiptDetailsReducer = (state = { receipt: {} }, action) => {\n    switch (action.type) {\n\n        case RECEIPT_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case RECEIPT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                receipt: action.payload\n            }\n\n        case RECEIPT_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const allReceiptsReducer = (state = { receipts: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_RECEIPTS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_RECEIPTS_SUCCESS:\n            return {\n                loading: false,\n                receipts: action.payload.receipts\n            }\n\n        case ALL_RECEIPTS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}