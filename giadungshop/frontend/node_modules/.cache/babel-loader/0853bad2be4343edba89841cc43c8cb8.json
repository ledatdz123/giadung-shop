{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\CHUNGKHOANNN\\\\giadungshop\\\\frontend\\\\src\\\\components\\\\user\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Loader from '../layouts/Loader';\nimport MetaData from '../layouts/MetaData';\nimport MenuProfile from './MenuProfile';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  history\n}) => {\n  _s();\n\n  const {\n    userLogin\n  } = useSelector(state => state.auth);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (userLogin) {\n      setName(userLogin.name);\n      setEmail(userLogin.email);\n      setAvatarPreview(userLogin.avatar.url);\n      setAvatar(userLogin.avatar);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n      history.push('/profile');\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, userLogin, alert, error, history, isUpdated]);\n\n  const onChangeAvatar = async e => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      return alert.error('File not exist!');\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n      return alert.error('File format is incorrect!');\n    }\n\n    if (file.size > 1024 * 1024 * 5) {\n      return alert.error('File too large!');\n    }\n\n    let formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/upload', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    setAvatar(res.data);\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProfile(name, email, avatar));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaData, {\n        title: 'My Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: /*#__PURE__*/_jsxDEV(MenuProfile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Joined On \", String(userLogin.createdAt).substring(0, 10)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: submitHandler,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email_field\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      required: true,\n                      type: \"name\",\n                      id: \"name_field\",\n                      className: \"form-control\",\n                      name: \"name\",\n                      value: name,\n                      onChange: e => setName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email_field\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      required: true,\n                      type: \"email\",\n                      id: \"email_field\",\n                      className: \"form-control\",\n                      name: \"email\",\n                      value: email,\n                      onChange: e => setEmail(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-update btn-block\",\n                    disabled: loading ? true : false,\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group user-avatar\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"avatar_upload\",\n                children: \"Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"avatar-profile\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"rounded-circle img-fluid\",\n                  src: avatarPreview,\n                  alt: userLogin.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"avatar\",\n                  className: \"custom-file-input\",\n                  id: \"customFile\",\n                  accept: \"images/*\",\n                  onChange: onChangeAvatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Max size: 5MB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Type:.JPEG, .PNG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"choose-avatar\",\n                htmlFor: \"customFile\",\n                children: \"Choose Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"0ZHsyex9oTkQd4NfWidCN70sGuE=\", false, function () {\n  return [useSelector, useAlert, useDispatch, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/CHUNGKHOANNN/giadungshop/frontend/src/components/user/Profile.js"],"names":["React","Fragment","useState","useEffect","Loader","MetaData","MenuProfile","useAlert","useDispatch","useSelector","updateProfile","loadUser","clearErrors","UPDATE_PROFILE_RESET","axios","Profile","history","userLogin","state","auth","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","alert","dispatch","error","isUpdated","loading","user","url","success","push","type","onChangeAvatar","e","file","target","files","size","formData","FormData","append","res","post","headers","data","reader","FileReader","onload","readyState","result","readAsDataURL","submitHandler","preventDefault","String","createdAt","substring","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport Loader from '../layouts/Loader'\nimport MetaData from '../layouts/MetaData'\nimport MenuProfile from './MenuProfile'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\nimport axios from 'axios'\n\nconst Profile = ({ history }) => {\n\n    const { userLogin } = useSelector(state => state.auth)\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (userLogin) {\n            setName(userLogin.name)\n            setEmail(userLogin.email)\n            setAvatarPreview(userLogin.avatar.url)\n            setAvatar(userLogin.avatar)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser())\n\n            history.push('/profile')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, userLogin, alert, error, history, isUpdated])\n\n\n\n    const onChangeAvatar = async e => {\n\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setAvatar(res.data)\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(updateProfile(name, email, avatar))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n\n                    <div className=\"container\">\n                        <div class=\"row\">\n                            <div className=\"col-2\">\n                                <MenuProfile />\n                            </div>\n                            <div className=\"col-6\">\n                                <div className=\"profile\">\n                                    <div className=\"profile-header\">\n                                        <h3>Profile</h3>\n                                        <span>Joined On {String(userLogin.createdAt).substring(0, 10)}</span>\n                                    </div>\n                                    <div className=\"user-info\">\n                                        <form onSubmit={submitHandler}>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email_field\">Name</label>\n                                                <input\n                                                    required\n                                                    type=\"name\"\n                                                    id=\"name_field\"\n                                                    className=\"form-control\"\n                                                    name='name'\n                                                    value={name}\n                                                    onChange={(e) => setName(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email_field\">Email</label>\n                                                <input\n                                                    required\n                                                    type=\"email\"\n                                                    id=\"email_field\"\n                                                    className=\"form-control\"\n                                                    name='email'\n                                                    value={email}\n                                                    onChange={(e) => setEmail(e.target.value)}\n                                                />\n                                            </div>\n                                            <button type=\"submit\" className=\"btn btn-update btn-block\" disabled={loading ? true : false} >Update</button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-4\">\n                                <div className='form-group user-avatar'>\n                                    <label htmlFor='avatar_upload'>Avatar</label>\n                                    <figure className='avatar-profile'>\n                                        <img className=\"rounded-circle img-fluid\" src={avatarPreview} alt={userLogin.name} />\n                                        <input\n                                            type='file'\n                                            name='avatar'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            accept='images/*'\n                                            onChange={onChangeAvatar}\n                                        />\n                                    </figure>\n                                    <p>Max size: 5MB</p>\n                                    <p>Type:.JPEG, .PNG</p>\n                                    <label className='choose-avatar' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}