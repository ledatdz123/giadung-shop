[{"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\store.js":"2","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\App.js":"3","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\userReducers.js":"4","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\orderReducers.js":"7","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\brandReducers.js":"8","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\categoryReducers.js":"9","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\receiptReducers.js":"10","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Home.js":"11","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Shop.js":"12","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Gallery.js":"13","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\route\\ProtectedRoute.js":"14","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Contact.js":"15","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Header.js":"16","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\PageNotFound.js":"17","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\Login.js":"18","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Footer.js":"19","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\Register.js":"20","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\Profile.js":"21","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\Collections.js":"22","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\ForgotPassword.js":"23","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\ProductDetails.js":"24","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\UpdatePassword.js":"25","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\Cart.js":"26","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\ConfirmOrder.js":"27","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\Shipping.js":"28","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\Payment.js":"29","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\orders\\MyListOrders.js":"30","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\orders\\OrderDetails.js":"31","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\OrderSuccess.js":"32","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateUser.js":"33","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\Dashboard.js":"34","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UsersList.js":"35","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\NewProduct.js":"36","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ProductsList.js":"37","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateProduct.js":"38","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ProductReviews.js":"39","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\OrdersList.js":"40","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ProcessOrder.js":"41","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\NewBrand.js":"42","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\BrandsList.js":"43","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateBrand.js":"44","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\CategoriesList.js":"45","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ReceiptDetails.js":"46","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateCategory.js":"47","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\NewCategory.js":"48","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ReceiptList.js":"49","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ConfirmReceipt.js":"50","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ImportReceiptItems.js":"51","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\Product.js":"52","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Loader.js":"53","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\MetaData.js":"54","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Services.js":"55","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Clients.js":"56","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\Sidebar.js":"57","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\productConstants.js":"58","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\userConstants.js":"59","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\cartConstants.js":"60","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\orderConstants.js":"61","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\brandConstants.js":"62","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\categoryConstants.js":"63","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\receiptConstants.js":"64","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\brandActions.js":"65","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\productActions.js":"66","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\categoryActions.js":"67","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\receiptAction.js":"68","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\orderActions.js":"69","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\userActions.js":"70","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\CheckoutSteps.js":"71","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\MenuProfile.js":"72","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\cartActions.js":"73","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\review\\ListReviews.js":"74","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Search.js":"75","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\ResetPassword.js":"76","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\index.js":"77","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\store.js":"78","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\App.js":"79","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\cartReducers.js":"80","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\productReducers.js":"81","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\orderReducers.js":"82","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\userReducers.js":"83","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\categoryReducers.js":"84","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\brandReducers.js":"85","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\receiptReducers.js":"86","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Gallery.js":"87","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\route\\ProtectedRoute.js":"88","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Contact.js":"89","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Home.js":"90","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Shop.js":"91","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Header.js":"92","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\Collections.js":"93","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\Login.js":"94","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Footer.js":"95","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\ProductDetails.js":"96","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\UpdatePassword.js":"97","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\Register.js":"98","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\ForgotPassword.js":"99","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\ResetPassword.js":"100","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\Profile.js":"101","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\Cart.js":"102","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\Shipping.js":"103","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\PageNotFound.js":"104","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\Payment.js":"105","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\ConfirmOrder.js":"106","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\OrderSuccess.js":"107","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\NewProduct.js":"108","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\Dashboard.js":"109","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UsersList.js":"110","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ProductsList.js":"111","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateUser.js":"112","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ProductReviews.js":"113","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateProduct.js":"114","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\OrdersList.js":"115","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateCategory.js":"116","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\BrandsList.js":"117","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\CategoriesList.js":"118","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ProcessOrder.js":"119","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\NewBrand.js":"120","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateBrand.js":"121","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\NewCategory.js":"122","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ReceiptList.js":"123","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ReceiptDetails.js":"124","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ConfirmReceipt.js":"125","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\orders\\OrderDetails.js":"126","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ImportReceiptItems.js":"127","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\orders\\MyListOrders.js":"128","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\Product.js":"129","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Loader.js":"130","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\MetaData.js":"131","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\MenuProfile.js":"132","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\Sidebar.js":"133","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\cartConstants.js":"134","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\productConstants.js":"135","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\orderConstants.js":"136","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\receiptConstants.js":"137","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\userConstants.js":"138","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\brandConstants.js":"139","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\categoryConstants.js":"140","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\productActions.js":"141","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\orderActions.js":"142","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\receiptAction.js":"143","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\categoryActions.js":"144","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\brandActions.js":"145","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\userActions.js":"146","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\cartActions.js":"147","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\CheckoutSteps.js":"148","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\review\\ListReviews.js":"149","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Search.js":"150","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Clients.js":"151","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Services.js":"152"},{"size":642,"mtime":1633349585000,"results":"153","hashOfConfig":"154"},{"size":3778,"mtime":1633349585000,"results":"155","hashOfConfig":"154"},{"size":6297,"mtime":1658740746252,"results":"156","hashOfConfig":"154"},{"size":6408,"mtime":1633349585000,"results":"157","hashOfConfig":"154"},{"size":10280,"mtime":1633349585000,"results":"158","hashOfConfig":"154"},{"size":2734,"mtime":1633349585000,"results":"159","hashOfConfig":"154"},{"size":4450,"mtime":1633349585000,"results":"160","hashOfConfig":"154"},{"size":4051,"mtime":1633349585000,"results":"161","hashOfConfig":"154"},{"size":4224,"mtime":1633349585000,"results":"162","hashOfConfig":"154"},{"size":4421,"mtime":1633349585000,"results":"163","hashOfConfig":"154"},{"size":10959,"mtime":1659065706701,"results":"164","hashOfConfig":"154"},{"size":8634,"mtime":1633349585000,"results":"165","hashOfConfig":"154"},{"size":2938,"mtime":1633349585000,"results":"166","hashOfConfig":"154"},{"size":938,"mtime":1633349585000,"results":"167","hashOfConfig":"154"},{"size":4116,"mtime":1633349585000,"results":"168","hashOfConfig":"154"},{"size":15950,"mtime":1657267309528,"results":"169","hashOfConfig":"154"},{"size":631,"mtime":1633349585000,"results":"170","hashOfConfig":"154"},{"size":3750,"mtime":1659066105005,"results":"171","hashOfConfig":"154"},{"size":2494,"mtime":1657330022633,"results":"172","hashOfConfig":"154"},{"size":7698,"mtime":1659066180767,"results":"173","hashOfConfig":"154"},{"size":6898,"mtime":1633349585000,"results":"174","hashOfConfig":"154"},{"size":15381,"mtime":1658807630810,"results":"175","hashOfConfig":"154"},{"size":3373,"mtime":1658739975005,"results":"176","hashOfConfig":"154"},{"size":17525,"mtime":1633349585000,"results":"177","hashOfConfig":"154"},{"size":3642,"mtime":1633349585000,"results":"178","hashOfConfig":"154"},{"size":10753,"mtime":1659070236996,"results":"179","hashOfConfig":"154"},{"size":4675,"mtime":1633349585000,"results":"180","hashOfConfig":"154"},{"size":4527,"mtime":1633349585000,"results":"181","hashOfConfig":"154"},{"size":4960,"mtime":1633349585000,"results":"182","hashOfConfig":"154"},{"size":4812,"mtime":1633349585000,"results":"183","hashOfConfig":"154"},{"size":10450,"mtime":1633349585000,"results":"184","hashOfConfig":"154"},{"size":922,"mtime":1633349585000,"results":"185","hashOfConfig":"154"},{"size":4759,"mtime":1633349585000,"results":"186","hashOfConfig":"154"},{"size":17026,"mtime":1657067848037,"results":"187","hashOfConfig":"154"},{"size":3833,"mtime":1659067954172,"results":"188","hashOfConfig":"154"},{"size":14646,"mtime":1633349585000,"results":"189","hashOfConfig":"154"},{"size":5698,"mtime":1659067370802,"results":"190","hashOfConfig":"154"},{"size":17208,"mtime":1633349585000,"results":"191","hashOfConfig":"154"},{"size":5237,"mtime":1633349585000,"results":"192","hashOfConfig":"154"},{"size":4587,"mtime":1633349585000,"results":"193","hashOfConfig":"154"},{"size":8434,"mtime":1633349585000,"results":"194","hashOfConfig":"154"},{"size":3378,"mtime":1633349585000,"results":"195","hashOfConfig":"154"},{"size":4215,"mtime":1659069498469,"results":"196","hashOfConfig":"154"},{"size":4011,"mtime":1633349585000,"results":"197","hashOfConfig":"154"},{"size":4315,"mtime":1659069035710,"results":"198","hashOfConfig":"154"},{"size":3546,"mtime":1633349585000,"results":"199","hashOfConfig":"154"},{"size":4099,"mtime":1633349585000,"results":"200","hashOfConfig":"154"},{"size":3412,"mtime":1633349585000,"results":"201","hashOfConfig":"154"},{"size":3339,"mtime":1633349585000,"results":"202","hashOfConfig":"154"},{"size":4765,"mtime":1633349585000,"results":"203","hashOfConfig":"154"},{"size":13470,"mtime":1633349585000,"results":"204","hashOfConfig":"154"},{"size":2104,"mtime":1633349585000,"results":"205","hashOfConfig":"154"},{"size":134,"mtime":1633349585000,"results":"206","hashOfConfig":"154"},{"size":234,"mtime":1657238349470,"results":"207","hashOfConfig":"154"},{"size":4024,"mtime":1633349585000,"results":"208","hashOfConfig":"154"},{"size":2780,"mtime":1633349585000,"results":"209","hashOfConfig":"154"},{"size":1578,"mtime":1659066902782,"results":"210","hashOfConfig":"154"},{"size":2948,"mtime":1633349585000,"results":"211","hashOfConfig":"154"},{"size":2453,"mtime":1658739370847,"results":"212","hashOfConfig":"154"},{"size":273,"mtime":1633349585000,"results":"213","hashOfConfig":"154"},{"size":1332,"mtime":1633349585000,"results":"214","hashOfConfig":"154"},{"size":1285,"mtime":1633349585000,"results":"215","hashOfConfig":"154"},{"size":1423,"mtime":1633349585000,"results":"216","hashOfConfig":"154"},{"size":893,"mtime":1633349585000,"results":"217","hashOfConfig":"154"},{"size":3725,"mtime":1633349585000,"results":"218","hashOfConfig":"154"},{"size":9948,"mtime":1657071398135,"results":"219","hashOfConfig":"154"},{"size":3891,"mtime":1633349585000,"results":"220","hashOfConfig":"154"},{"size":3969,"mtime":1633349585000,"results":"221","hashOfConfig":"154"},{"size":5250,"mtime":1633349585000,"results":"222","hashOfConfig":"154"},{"size":9579,"mtime":1658739407129,"results":"223","hashOfConfig":"154"},{"size":1808,"mtime":1633349585000,"results":"224","hashOfConfig":"154"},{"size":648,"mtime":1633349585000,"results":"225","hashOfConfig":"154"},{"size":1745,"mtime":1633349585000,"results":"226","hashOfConfig":"154"},{"size":630,"mtime":1633349585000,"results":"227","hashOfConfig":"154"},{"size":712,"mtime":1633349585000,"results":"228","hashOfConfig":"154"},{"size":4332,"mtime":1658742671038,"results":"229","hashOfConfig":"154"},{"size":642,"mtime":1633349585000,"results":"230","hashOfConfig":"231"},{"size":3778,"mtime":1633349585000,"results":"232","hashOfConfig":"231"},{"size":6297,"mtime":1661350451488,"results":"233","hashOfConfig":"231"},{"size":2734,"mtime":1633349585000,"results":"234","hashOfConfig":"231"},{"size":10280,"mtime":1633349585000,"results":"235","hashOfConfig":"231"},{"size":4450,"mtime":1633349585000,"results":"236","hashOfConfig":"231"},{"size":6408,"mtime":1633349585000,"results":"237","hashOfConfig":"231"},{"size":4224,"mtime":1633349585000,"results":"238","hashOfConfig":"231"},{"size":4051,"mtime":1633349585000,"results":"239","hashOfConfig":"231"},{"size":4421,"mtime":1633349585000,"results":"240","hashOfConfig":"231"},{"size":10125,"mtime":1662266534944,"results":"241","hashOfConfig":"231"},{"size":938,"mtime":1633349585000,"results":"242","hashOfConfig":"231"},{"size":4116,"mtime":1633349585000,"results":"243","hashOfConfig":"231"},{"size":9657,"mtime":1661651169761,"results":"244","hashOfConfig":"231"},{"size":8681,"mtime":1660441927884,"results":"245","hashOfConfig":"231"},{"size":11567,"mtime":1661650342530,"results":"246","hashOfConfig":"231"},{"size":15381,"mtime":1658807630810,"results":"247","hashOfConfig":"231"},{"size":3750,"mtime":1662259359104,"results":"248","hashOfConfig":"231"},{"size":2494,"mtime":1657330022633,"results":"249","hashOfConfig":"231"},{"size":17525,"mtime":1661652545320,"results":"250","hashOfConfig":"231"},{"size":3657,"mtime":1660467941733,"results":"251","hashOfConfig":"231"},{"size":7698,"mtime":1659066180767,"results":"252","hashOfConfig":"231"},{"size":3373,"mtime":1658739975005,"results":"253","hashOfConfig":"231"},{"size":4332,"mtime":1658742671038,"results":"254","hashOfConfig":"231"},{"size":6934,"mtime":1660445931114,"results":"255","hashOfConfig":"231"},{"size":10601,"mtime":1661262506605,"results":"256","hashOfConfig":"231"},{"size":4560,"mtime":1660445070003,"results":"257","hashOfConfig":"231"},{"size":631,"mtime":1633349585000,"results":"258","hashOfConfig":"231"},{"size":4960,"mtime":1633349585000,"results":"259","hashOfConfig":"231"},{"size":4700,"mtime":1660444824898,"results":"260","hashOfConfig":"231"},{"size":922,"mtime":1633349585000,"results":"261","hashOfConfig":"231"},{"size":14697,"mtime":1661046200070,"results":"262","hashOfConfig":"231"},{"size":16627,"mtime":1662261643286,"results":"263","hashOfConfig":"231"},{"size":3833,"mtime":1659067954172,"results":"264","hashOfConfig":"231"},{"size":5698,"mtime":1659067370802,"results":"265","hashOfConfig":"231"},{"size":4759,"mtime":1633349585000,"results":"266","hashOfConfig":"231"},{"size":5237,"mtime":1633349585000,"results":"267","hashOfConfig":"231"},{"size":17208,"mtime":1633349585000,"results":"268","hashOfConfig":"231"},{"size":4587,"mtime":1633349585000,"results":"269","hashOfConfig":"231"},{"size":4099,"mtime":1633349585000,"results":"270","hashOfConfig":"231"},{"size":4215,"mtime":1659069498469,"results":"271","hashOfConfig":"231"},{"size":4315,"mtime":1659069035710,"results":"272","hashOfConfig":"231"},{"size":8434,"mtime":1633349585000,"results":"273","hashOfConfig":"231"},{"size":3378,"mtime":1633349585000,"results":"274","hashOfConfig":"231"},{"size":4011,"mtime":1633349585000,"results":"275","hashOfConfig":"231"},{"size":3412,"mtime":1633349585000,"results":"276","hashOfConfig":"231"},{"size":3339,"mtime":1633349585000,"results":"277","hashOfConfig":"231"},{"size":3546,"mtime":1633349585000,"results":"278","hashOfConfig":"231"},{"size":4803,"mtime":1660450073727,"results":"279","hashOfConfig":"231"},{"size":10512,"mtime":1660445652790,"results":"280","hashOfConfig":"231"},{"size":13510,"mtime":1660450083395,"results":"281","hashOfConfig":"231"},{"size":4834,"mtime":1660441470254,"results":"282","hashOfConfig":"231"},{"size":2113,"mtime":1662258155941,"results":"283","hashOfConfig":"231"},{"size":134,"mtime":1633349585000,"results":"284","hashOfConfig":"231"},{"size":234,"mtime":1657238349470,"results":"285","hashOfConfig":"231"},{"size":648,"mtime":1633349585000,"results":"286","hashOfConfig":"231"},{"size":1578,"mtime":1659066902782,"results":"287","hashOfConfig":"231"},{"size":273,"mtime":1633349585000,"results":"288","hashOfConfig":"231"},{"size":2948,"mtime":1633349585000,"results":"289","hashOfConfig":"231"},{"size":1332,"mtime":1633349585000,"results":"290","hashOfConfig":"231"},{"size":893,"mtime":1633349585000,"results":"291","hashOfConfig":"231"},{"size":2453,"mtime":1658739370847,"results":"292","hashOfConfig":"231"},{"size":1285,"mtime":1633349585000,"results":"293","hashOfConfig":"231"},{"size":1423,"mtime":1633349585000,"results":"294","hashOfConfig":"231"},{"size":9948,"mtime":1657071398135,"results":"295","hashOfConfig":"231"},{"size":5250,"mtime":1633349585000,"results":"296","hashOfConfig":"231"},{"size":3969,"mtime":1633349585000,"results":"297","hashOfConfig":"231"},{"size":3891,"mtime":1633349585000,"results":"298","hashOfConfig":"231"},{"size":3725,"mtime":1633349585000,"results":"299","hashOfConfig":"231"},{"size":9579,"mtime":1658739407129,"results":"300","hashOfConfig":"231"},{"size":1744,"mtime":1662258110870,"results":"301","hashOfConfig":"231"},{"size":1808,"mtime":1633349585000,"results":"302","hashOfConfig":"231"},{"size":630,"mtime":1633349585000,"results":"303","hashOfConfig":"231"},{"size":712,"mtime":1633349585000,"results":"304","hashOfConfig":"231"},{"size":2780,"mtime":1633349585000,"results":"305","hashOfConfig":"231"},{"size":4024,"mtime":1633349585000,"results":"306","hashOfConfig":"231"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},"z7mhmw",{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"309"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"309"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"309"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"309"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"309"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"309"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"309"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"309"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"309"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"309"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"309"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"309"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"309"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"309"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"309"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"309"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"309"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"309"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"309"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"309"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"309"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"309"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"309"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"309"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"309"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"309"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"309"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"309"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"309"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"309"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"309"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},"108d551",{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"493"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"493"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"493"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"493"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"493"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"493"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"493"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"493"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"493"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"493"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"493"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"493"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"493"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"493"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"493"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"493"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"493"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"493"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"493"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"493"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"493"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"493"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"493"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"493"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"493"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"493"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"493"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"493"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"493"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"493"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"493"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"493"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"493"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"493"},"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\index.js",[],["656","657"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\store.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\cartReducers.js",["658"],"import { ADD_TO_CART, REMOVE_ITEM_CART, UPDATE_TO_CART, SAVE_SHIPPING_INFO, CART_RESET, CART_IMPORT } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\n    switch (action.type) {\n\n        case ADD_TO_CART:\n            const item = action.payload\n            const isItemExist = state.cartItems ? state.cartItems.find(i => i.product === item.product && i.size === item.size) : null\n            console.log(isItemExist);\n            if (isItemExist) {\n                state.cartItems.map(i => {\n                    if (i.product === isItemExist.product && i.size === isItemExist.size) {\n\n                        i.quantity = i.quantity + item.quantity\n\n                    }\n                })\n\n                return {\n                    ...state,\n                    cartItems: state.cartItems\n                }\n            } else {\n                console.log(state.cartItems);\n                if (state.cartItems) {\n                    console.log('ac');\n                    return {\n                        ...state,\n                        cartItems: [...state.cartItems, item]\n                    }\n                } else {\n                    return {\n                        ...state,\n                        cartItems: [item]\n                    }\n                }\n            }\n\n        case REMOVE_ITEM_CART:\n            let isItemRemove = state.cartItems.find(i => i.product === action.payload.id && i.size === action.payload.size)\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(i => i !== isItemRemove)\n            }\n\n        case UPDATE_TO_CART:\n            const updateItem = action.payload;\n            const isUpdateItemExist = state.cartItems.find(i => i.product === updateItem.product && i.size === updateItem.size)\n            if (isUpdateItemExist) {\n\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(i => i.product === isUpdateItemExist.product && i.size === isUpdateItemExist.size ? updateItem : i)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, updateItem]\n                }\n            }\n\n        case SAVE_SHIPPING_INFO:\n            return {\n                ...state,\n                shippingInfo: action.payload\n            }\n        case CART_IMPORT:\n            return {\n                ...state,\n                cartItems: action.payload,\n            }\n        case CART_RESET:\n            return {\n                cartItems: [],\n                shippingInfo: {}\n            }\n        default:\n            return state\n    }\n}","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\orderReducers.js",["659","660","661"],"import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    CANCEL_ORDER_REQUEST,\n    CANCEL_ORDER_SUCCESS,\n    CANCEL_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case ALL_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case UPDATE_ORDER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_ORDER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\brandReducers.js",["662","663","664"],"import {\n    ALL_BRANDS_REQUEST,\n    ALL_BRANDS_SUCCESS,\n    ALL_BRANDS_FAIL,\n\n    BRAND_DETAILS_REQUEST,\n    BRAND_DETAILS_SUCCESS,\n    BRAND_DETAILS_FAIL,\n    BRAND_DETAILS_RESET,\n\n    NEW_BRAND_REQUEST,\n    NEW_BRAND_SUCCESS,\n    NEW_BRAND_RESET,\n    NEW_BRAND_FAIL,\n\n    DELETE_BRAND_REQUEST,\n    DELETE_BRAND_SUCCESS,\n    DELETE_BRAND_RESET,\n    DELETE_BRAND_FAIL,\n\n    UPDATE_BRAND_REQUEST,\n    UPDATE_BRAND_SUCCESS,\n    UPDATE_BRAND_RESET,\n    UPDATE_BRAND_FAIL,\n\n    GET_BRAND_BY_ID_REQUEST,\n    GET_BRAND_BY_ID_SUCCESS,\n    GET_BRAND_BY_ID_FAIL,\n\n    CLEAR_ERRORS\n} from '../constants/brandConstants'\n\nexport const brandsReducer = (state = { brands: [] }, action) => {\n    switch (action.type) {\n        case ALL_BRANDS_REQUEST:\n            return {\n                loading: true,\n                brands: []\n            }\n        case ALL_BRANDS_SUCCESS:\n            return {\n                loading: false,\n                brands: action.payload.brands,\n            }\n\n        case ALL_BRANDS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state\n    }\n}\n\nexport const brandDetailsReducer = (state = { brand: {} }, action) => {\n    switch (action.type) {\n        case BRAND_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case BRAND_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                brand: action.payload\n            }\n        case BRAND_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case BRAND_DETAILS_RESET:\n            return {\n                loading: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state\n    }\n}\n//Admin\nexport const newBrandReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case NEW_BRAND_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_BRAND_SUCCESS:\n            return {\n                loading: false,\n                success: action.payload.success,\n                brand: action.payload.brand\n            }\n\n        case NEW_BRAND_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_BRAND_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const brandReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_BRAND_REQUEST:\n        case UPDATE_BRAND_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_BRAND_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_BRAND_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n\n        case DELETE_BRAND_FAIL:\n        case UPDATE_BRAND_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_BRAND_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_BRAND_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\categoryReducers.js",["665","666","667"],"import {\n    ALL_CATEGORIES_REQUEST,\n    ALL_CATEGORIES_SUCCESS,\n    ALL_CATEGORIES_FAIL,\n\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_DETAILS_RESET,\n\n    NEW_CATEGORY_REQUEST,\n    NEW_CATEGORY_SUCCESS,\n    NEW_CATEGORY_RESET,\n    NEW_CATEGORY_FAIL,\n\n    DELETE_CATEGORY_REQUEST,\n    DELETE_CATEGORY_SUCCESS,\n    DELETE_CATEGORY_RESET,\n    DELETE_CATEGORY_FAIL,\n\n    UPDATE_CATEGORY_REQUEST,\n    UPDATE_CATEGORY_SUCCESS,\n    UPDATE_CATEGORY_RESET,\n    UPDATE_CATEGORY_FAIL,\n\n    GET_CATEGORY_BY_ID_REQUEST,\n    GET_CATEGORY_BY_ID_SUCCESS,\n    GET_CATEGORY_BY_ID_FAIL,\n\n    CLEAR_ERRORS\n} from '../constants/categoryConstants'\n\nexport const categoriesReducer = (state = { categories: [] }, action) => {\n    switch (action.type) {\n        case ALL_CATEGORIES_REQUEST:\n            return {\n                loading: true,\n                categories: []\n            }\n        case ALL_CATEGORIES_SUCCESS:\n            return {\n                loading: false,\n                categories: action.payload.categories,\n            }\n\n        case ALL_CATEGORIES_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state\n    }\n}\n\nexport const categoryDetailsReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n        case CATEGORY_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case CATEGORY_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                category: action.payload\n            }\n        case CATEGORY_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case CATEGORY_DETAILS_RESET:\n            return {\n                loading: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state\n    }\n}\n//Admin\nexport const newCategoryReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case NEW_CATEGORY_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_CATEGORY_SUCCESS:\n            return {\n                loading: false,\n                success: action.payload.success,\n                category: action.payload.category\n            }\n\n        case NEW_CATEGORY_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_CATEGORY_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const categoryReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case DELETE_CATEGORY_REQUEST:\n        case UPDATE_CATEGORY_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_CATEGORY_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n\n        case DELETE_CATEGORY_FAIL:\n        case UPDATE_CATEGORY_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_CATEGORY_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_CATEGORY_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\reducers\\receiptReducers.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Home.js",["668","669","670","671"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Shop.js",["672","673","674","675"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from './layouts/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\nimport Product from './product/Product'\nimport Loader from './layouts/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from \"react-js-pagination\"\nimport { getBrands } from '../actions/brandActions'\nimport { getCategories } from '../actions/categoryActions'\n\nconst Shop = ({ match, history }) => {\n\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const [currentPage, setCurrentPage] = useState(1)\n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [rating, setRating] = useState(0)\n    const { brands, loading: loadingBrand, error: errorBrand } = useSelector(state => state.brands)\n    const { categories, loading: loadingCategories, error: errorCategories } = useSelector(state => state.categories)\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n        dispatch(getProducts(keyword, currentPage, category, brand))\n\n        if (errorBrand) {\n            return alert.error(errorBrand)\n        }\n        dispatch(getBrands())\n        if (errorCategories) {\n            return alert.error(errorCategories)\n        }\n        dispatch(getCategories())\n    }, [dispatch, alert, error, keyword, currentPage, category, brand, errorBrand, errorCategories])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount\n    if (filteredProductsCount <= productsCount && currentPage === 1) {\n        count = filteredProductsCount\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Shop'} />\n            {/* shop */}\n            <section className=\"shop\">\n                <div className=\"container\">\n                    <div className=\"shop-wrap\">\n                        <div className=\"shop-title\">\n                            <h2>Shop</h2>\n                            <p>All Products</p>\n                            <span>Total: {filteredProductsCount} products</span>\n                        </div>\n                        {/* <div className=\"sort\">\n                            <select >\n                                <option value=\"default\">Default</option>\n                                <option value=\"prices-asc\">Prices asc</option>\n                                <option value=\"prices-desc\">Prices desc</option>\n                                <option value=\"name-a-z\">Name A - Z</option>\n                                <option value=\"name-z-a\">Name Z - A</option>\n                            </select>\n\n                        </div> */}\n                    </div>\n\n                    <div className=\"row\">\n                        <Fragment>\n                            <div className=\"col-3 filter\">\n                                <h3>Categories</h3>\n                                <ul>\n                                    {categories && categories.map(category => (\n                                        <li\n                                            style={{\n                                                cursor: 'pointer',\n                                                listStyleType: 'none'\n                                            }}\n                                            key={category._id}\n                                            onClick={() => setCategory(category.name)}>\n                                            {category.name}\n                                        </li>\n                                    ))}\n                                    <li\n                                        style={{\n                                            cursor: 'pointer',\n                                            listStyleType: 'none'\n                                        }}\n                                        onClick={() => setCategory('')}>Clear</li>\n                                </ul>\n                                <hr className=\"my-5\" />\n                                <h3>Brands</h3>\n                                <ul>\n                                    {brands && brands.map(brand => (\n                                        <li\n                                            style={{\n                                                cursor: 'pointer',\n                                                listStyleType: 'none'\n                                            }}\n                                            key={brand._id}\n                                            onClick={() => setBrand(brand.name)}>\n                                            {brand.name}\n                                        </li>\n                                    ))}\n                                    <li\n                                        style={{\n                                            cursor: 'pointer',\n                                            listStyleType: 'none'\n                                        }}\n                                        onClick={() => setBrand('')}>Clear</li>\n                                </ul>\n                            </div>\n                        </Fragment>\n                        {\n                            loading ? <Loader /> : (\n                                <Fragment>\n                                    <div className=\"col-9\">\n\n                                        {\n                                            brand && category ? <h4>Tags: {brand}, {category}</h4>\n                                                : brand ? <h4>Tags: {brand}</h4> : category ? <h4>Tags: {category}</h4> : null\n                                        }\n                                        <div className=\"row\">\n                                            {\n                                                filteredProductsCount === 0 ? (\n                                                    <div className=\"col-9\">\n                                                        <h3 className=\"empty\">Products is empty</h3>\n                                                    </div>\n                                                ) : (\n                                                    <>\n                                                        {\n                                                            products && products.map(product => (\n                                                                <Product product={product} col={4} key={product._id} history={history} />\n                                                            ))\n                                                        }\n                                                    </>\n                                                )\n                                            }\n\n                                        </div>\n                                        {\n                                            resPerPage <= count && (\n\n                                                <div className=\"product-pagination\">\n                                                    <Pagination\n                                                        activePage={currentPage}\n                                                        itemsCountPerPage={resPerPage}\n                                                        totalItemsCount={filteredProductsCount}\n                                                        onChange={setCurrentPageNo}\n                                                        nextPageText={'Next'}\n                                                        prevPageText={'Prev'}\n                                                        firstPageText={'First'}\n                                                        lastPageText={'Last'}\n                                                        itemClass=\"page-item\"\n                                                        linkClass=\"page-link\"\n                                                    />\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n\n                                </Fragment>\n\n                            )\n                        }\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default Shop\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Gallery.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\Contact.js",["676","677"],"import React from 'react'\n\nconst Contact = () => {\n    return (\n        <section className=\"contact\">\n            <div className=\"container\">\n                <h2 className=\"title\">Contact</h2>\n                <p>Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem. Sit sint consectetur velit. Quisquam quos quisquam cupiditate. Et nemo qui impedit suscipit alias ea. Quia fugiat sit in iste officiis commodi quidem hic quas.</p>\n                <div>\n                    <iframe style={{ border: 0, width: '100%', height: 270 }} src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d12097.433213460943!2d-74.0062269!3d40.7101282!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xb89d1fe6bc499443!2sDowntown+Conference+Center!5e0!3m2!1smk!2sbg!4v1539943755621\" frameBorder={0} allowFullScreen />\n                </div>\n                <div className=\"row mt-5\">\n                    <div className=\"col-lg-4\">\n                        <div className=\"info\">\n                            <div className=\"address\">\n                                <i class='bx bxs-map'></i>\n                                <h4>Location:</h4>\n                                <p>A108 Adam Street, New York, NY 535022</p>\n                            </div>\n                            <div className=\"email\">\n                                <i class='bx bx-mail-send'></i>\n                                <h4>Email:</h4>\n                                <p>info@example.com</p>\n                            </div>\n                            <div className=\"phone\">\n                                <i class='bx bxs-phone' ></i>\n                                <h4>Call:</h4>\n                                <p>+1 5589 55488 55s</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8 mt-5 mt-lg-0\">\n                        <form action=\"forms/contact.php\" method=\"post\" role=\"form\" className=\"php-email-form\">\n                            <div className=\"form-row\">\n                                <div className=\"col-md-6 form-group\">\n                                    <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\" placeholder=\"Your Name\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 4 chars\" />\n                                    <div className=\"validate\" />\n                                </div>\n                                <div className=\"col-md-6 form-group\">\n                                    <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Your Email\" data-rule=\"email\" data-msg=\"Please enter a valid email\" />\n                                    <div className=\"validate\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" name=\"subject\" id=\"subject\" placeholder=\"Subject\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 8 chars of subject\" />\n                                <div className=\"validate\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea className=\"form-control\" name=\"message\" rows={5} data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Message\" defaultValue={\"\"} />\n                                <div className=\"validate\" />\n                            </div>\n                            <div className=\"mb-3\">\n                                <div className=\"loading\">Loading</div>\n                                <div className=\"error-message\" />\n                                <div className=\"sent-message\">Your message has been sent. Thank you!</div>\n                            </div>\n                            <div className=\"text-center\"><button type=\"submit\">Send Message</button></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n    )\n}\n\nexport default Contact\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Header.js",["678","679","680"],"import React, { Fragment, useEffect } from 'react'\nimport Search from './Search'\nimport { Route, Link, withRouter } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../../actions/userActions'\nimport { CART_RESET } from '../../constants/cartConstants'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport './Header.css'\nconst Header = ({ location }) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const { userLogin } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    console.log(userLogin)\n    const logoutHandler = () => {\n        dispatch(logout())\n        dispatch({ type: CART_RESET })\n        alert.success('Logged out successfully.')\n    }\n\n    useEffect(() => {\n\n        dispatch(getBrands())\n        dispatch(getCategories())\n\n    }, [dispatch, alert])\n\n    return location.pathname.split('/')[1] === 'admin' ? (\n        <>\n            <header id=\"admin-header\" className=\"bg-white shadow\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-2\">\n                        <Link to='/admin/dashboard' className=\"sidebar-brand d-flex align-items-center justify-content-center\">\n                            <div className=\"sidebar-brand-icon rotate-n-15\">\n                                <i className=\"fas fa-laugh-wink\" />\n                            </div>\n                            <div className=\"sidebar-brand-text mx-3\">\n                                <span>GiaDungViet</span>\n                                <sup>admin</sup>\n                            </div>\n                        </Link>\n                    </div>\n                    <div className=\"col-12 col-md-10\">\n                        <nav className=\"navbar navbar-expand\">\n\n\n                            {/* Topbar Navbar */}\n                            <ul className=\"navbar-nav ml-auto\">\n\n                                {/* Nav Item - User Information */}\n                                <li className=\"nav-item dropdown no-arrow\">\n                                    <span className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">{userLogin && userLogin.name}</span>\n                                        <img className=\"img-profile rounded-circle\" src={userLogin.avatar && userLogin.avatar.url}\n                                            alt={userLogin && userLogin.name} />\n                                    </span>\n                                    {/* Dropdown - User Information */}\n                                    <div className=\"dropdown-menu shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                                        <Link className=\"dropdown-item\" to='/'>\n                                            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Store\n                                        </Link>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Settings\n                                        </a>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Activity Log\n                                        </a>\n                                        <div className=\"dropdown-divider\" />\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                                            <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Logout\n                                        </a>\n                                    </div>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n\n            </header>\n\n        </>\n    ) : (\n\n        <Fragment>\n\n            <header>\n                {/* mobile menu */}\n                <div className=\"mobile-menu bg-gray\">\n                    <Link to=\"/\" className=\"mb-logo\">GiaDungShop</Link>\n                    <span className=\"mb-menu-toggle\" id=\"mb-menu-toggle\">\n                        <i className=\"bx bx-menu\" />\n                    </span>\n                </div>\n                {/* end mobile menu */}\n                {/* main header */}\n                <div className=\"header-wrapper\" id=\"header-wrapper\">\n                    <span className=\"mb-menu-toggle mb-menu-close\" id=\"mb-menu-close\">\n                        <i className=\"bx bx-x\" />\n                    </span>\n                    {/* top header */}\n                    <div className=\"Header__topbar space__beetween\">\n                        {/* Topbar Left */}\n                        <div className=\"logo pxy__10\">\n                            <img\n                                src='/images/giadungviet-logo.png'\n                                alt=\"\"\n                                className=\"logo\"\n                                style={{\n                                    width: \"200px\",\n                                    height: \"100px\",\n                                    objectFit: \"contain\",\n                                    cursor: \"pointer\",\n                                }}\n                            />\n                            <span\n                                style={{\n                                    fontSize: \"50px\",\n\n                                }}\n                            >GiaDungVIET</span>\n                        </div>\n                        {/* Topbar Middle */}\n\n                        <div\n                            className=\"searchBoxHome\"\n                            style={{\n                                width: \"65%\",\n                                position: \"relative\",\n                            }}\n                        >\n                            <div\n                                className=\"inputBox\"\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    height: \"75px\",\n                                    width: \"100%\",\n                                    background: \"rgb(206, 30, 30)\",\n                                    overflow: \"hidden\",\n                                }}\n                            >\n                                <span\n                                    style={{\n                                        color: \"#fff\",\n                                        fontSize: \"30px\"\n                                    }}\n                                >\n                                    Chào mừng bạn đến với website của chúng tôi. Hãy\n                                    tìm kiếm và mua những sản phẩm bạn thích. Xin cám ơn...\n                                </span>\n                            </div>\n                        </div>\n\n                        <div\n                            className=\"flex align__items__center\"\n                            style={{\n                                margin: \"0px 10px\",\n                            }}\n                        >\n                            <div>\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width=\"25\"\n                                    height=\"25\"\n                                    fill=\"currentColor\"\n                                    class=\"bi bi-envelope\"\n                                    viewBox=\"0 0 16 16\"\n                                    style={{\n                                        color: \"#53C08E\",\n                                    }}\n                                >\n                                    <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2Zm13 2.383-4.708 2.825L15 11.105V5.383Zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741ZM1 11.105l4.708-2.897L1 5.383v5.722Z\" />\n                                </svg>\n                            </div>\n                            <span\n                                style={{\n                                    fontFamily: \"sans-serif\",\n                                    fontSize: \"1rem\",\n                                }}\n                            >\n                                <strong style={{\n                                    padding: \"0px 5px\"\n                                }}>Email:</strong>{userLogin && userLogin.email}\n                            </span>\n                        </div>\n                    </div>\n                    {/* end top header */}\n                    {/* mid header */}\n                    <div className=\"bg-white\">\n                        <div className=\"mid-header container\" style={{paddingLeft: \"250px\"}}>\n\n                            <Route render={({ history }) => <Search history={history} />} />\n\n                            <ul className=\"user-menu\">\n                                <li className=\"dropdown\">\n\n                                    {\n                                        userLogin ? (\n                                            <>\n                                                <Link to=\"/profile\">\n                                                    <figure className=\"avatar\">\n                                                        <img\n                                                            src={userLogin.avatar && userLogin.avatar.url}\n                                                            alt={userLogin && userLogin.name}\n                                                            className=\"rounded-circle\"\n                                                        />\n                                                    </figure>\n                                                    <span>{userLogin && userLogin.name}</span>\n                                                </Link>\n                                                <ul className=\"dropdown-content\">\n                                                    {userLogin && userLogin.role === 'admin' && (\n                                                        <li><Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                                                    )}\n                                                    <li><Link to=\"/profile\">Profile</Link></li>\n                                                    <li><Link to=\"/profile/orders\">Order</Link></li>\n                                                    <li><Link to=\"/\" onClick={logoutHandler}>Logout</Link></li>\n                                                </ul>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <Link to=\"#\"><i className=\"bx bx-user-circle\" /></Link>\n                                                <ul className=\"dropdown-content\">\n                                                    <li><Link to='/login'>Login</Link></li>\n                                                    <li><Link to=\"/register\">Register</Link></li>\n                                                </ul>\n                                            </>\n                                        )\n                                    }\n\n                                </li>\n                                <li className=\"header-cart\">\n                                    <Link to=\"/cart\">\n                                        <i className=\"bx bx-cart\" />\n                                        {\n                                            cartItems ? <span>{cartItems.length}</span> : <span>0</span>\n                                        }\n\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    {/* end mid header */}\n                    {/* bottom header */}\n                    <div className=\"bg-gray\">\n                        <div className=\"bottom-header container\">\n                            <ul className=\"main-menu\">\n                                <li><Link to=\"/\">Trang chủ</Link></li>\n                                {/* mega menu */}\n                                <li><Link to=\"/\">Sản phẩm</Link></li>\n                                <li className=\"mega-dropdown\">\n                                    <Link to=\"/shop\">Mua hàng<i className=\"bx bxs-chevron-down\" /></Link>\n                                    <div className=\"mega-content\">\n                                        <div className=\"row\">\n                                            <div className=\"col-5\">\n                                                <div className=\"box\">\n                                                    <h3>Loại sản phẩm</h3>\n                                                    <ul>\n                                                        {\n                                                            categories && categories.map(category => (\n                                                                <li><Link to={`/collections/category/${category.name}`}>{category.name}</Link></li>\n                                                            ))\n                                                        }\n\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-5\">\n                                                <div className=\"box\">\n                                                    <h3>Nhãn hiệu</h3>\n                                                    <ul>\n                                                        {\n                                                            brands && brands.map(brand => (\n                                                                <li><Link to={`/collections/brand/${brand.name}`}>{brand.name}</Link></li>\n                                                            ))\n                                                        }\n                                                    </ul>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </li>\n                                {/* end mega menu */}\n                                <li><Link to=\"/gallery\">Chính sách</Link></li>\n                                <li><Link to=\"/contact\">Liên hệ</Link></li>\n                                <li><Link to=\"/about\">About</Link></li>\n                            </ul>\n                        </div>\n                    </div>\n                    {/* end bottom header */}\n                </div>\n                {/* end main header */}\n            </header >\n        </Fragment >\n\n    )\n}\n\nexport default withRouter(Header)\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\PageNotFound.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\Login.js",["681"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\Register.js",["682"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\Collections.js",["683","684","685"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layouts/MetaData'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductCollections } from '../../actions/productActions'\nimport Product from './Product'\nimport Loader from '../layouts/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from \"react-js-pagination\"\n\nconst Collections = ({ match }) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const [currentPage, setCurrentPage] = useState(1)\n    const [rating, setRating] = useState(0)\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n    const collections = match.params.collections\n    const collection = match.params.collection\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n        dispatch(getProductCollections(currentPage, collections, collection))\n    }, [dispatch, alert, error, currentPage, collections, collection])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount\n    if (filteredProductsCount <= productsCount && currentPage === 1) {\n        count = filteredProductsCount\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Shop'} />\n            {/* shop */}\n            <section className=\"shop\">\n                <div className=\"container\">\n                    <div className=\"shop-title\">\n                        <h2>Collections</h2>\n                        <p>{collection} Collections</p>\n                        <span>Total: {filteredProductsCount} products</span>\n                    </div>\n                    {\n                        loading ? <Loader /> : (\n                            <>\n                                <div className=\"row\">\n                                    <Fragment>\n                                        <div className=\"col-3\">\n                                            <div className=\"banner\">\n                                                {\n                                                    collection && collection === 'Panasonic' ? (\n                                                        <>\n                                                            <img src=\"/images/logo-panasonic.jpg\" className=\"img-banner\" alt=\"\" />\n                                                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                        </>\n                                                    ) : (\n                                                        <>\n                                                            {\n                                                                collection && collection === 'Sony' ? (\n                                                                    <>\n                                                                        <img src=\"/images/logo-sony.png\" className=\"img-banner\" alt=\"\" />\n                                                                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                            Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                                    </>\n                                                                ) : (\n                                                                    <>\n                                                                        {\n                                                                            collection && collection === 'Hitachi' ? (\n                                                                                <>\n                                                                                    <img src=\"/images/logo-sony.png\" className=\"img-banner\" alt=\"\" />\n                                                                                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                                        Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                                                </>\n                                                                            ) : (\n                                                                                <>\n                                                                                {\n                                                                                    collection && collection === 'Toshiba' ? (\n                                                                                        <>\n                                                                                            <img src=\"/images/logo-sony.png\" className=\"img-banner\" alt=\"\" />\n                                                                                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                                                Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                                                        </>\n                                                                                    ) : (\n                                                                                        <>\n                                                                                        {\n                                                                                             collection && collection === 'Samsung' ? (\n                                                                                                <>\n                                                                                                    <img src=\"/images/logo-sony.png\" className=\"img-banner\" alt=\"\" />\n                                                                                                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                                                        Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                                                                </>\n                                                                                            ) : (\n                                                                                                <>\n                                                                                                {\n                                                                                                    collection && collection === 'Sunhouse' ? (\n                                                                                                        <>\n                                                                                                            <img src=\"/images/banner-puma2.jpg\" className=\"img-banner\" alt=\"\" />\n                                                                                                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                                                                Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                                                                        </>\n                                                                                                    ) : (\n                                                                                                        <>\n                                                                                                            <img src=\"/images/banner1.jpg\" className=\"img-banner\" alt=\"\" />\n                                                                                                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis odit, amet quod sed sequi aperiam blanditiis tempore id quae, impedit suscipit facilis quo, molestias velit recusandae voluptatum qui magnam porro.\n                                                                                                                Reiciendis culpa eveniet, maxime fuga repellat distinctio neque est accusantium iure a, ducimus odit qui eligendi nostrum quisquam voluptatum vitae unde sequi hic commodi ratione cum eius pariatur explicabo! Obcaecati.</p>\n                                                                                                        </>\n                                                                                                    )\n                                                                                                }\n                                                                                                </>\n                                                                                            )\n                                                                                        }\n                                                                                        </>\n                                                                                    )\n                                                                                }\n                                                                                </>\n                                                                            )\n                                                                        }\n                                                                    </>\n\n                                                                )\n                                                            }\n                                                        </>\n                                                    )\n                                                }\n\n                                            </div>\n                                        </div>\n                                    </Fragment>\n\n                                    <Fragment>\n                                        <div className=\"col-9\">\n                                            <div className=\"row\">\n                                                {\n                                                    filteredProductsCount === 0 ? (\n                                                        <div className=\"col-9\">\n                                                            <h3 className=\"empty\">Products is empty</h3>\n                                                        </div>\n                                                    ) : (\n                                                        <>\n                                                            {\n                                                                products && products.map(product => (\n                                                                    <Product product={product} col={4} key={product._id} />\n                                                                ))\n                                                            }\n                                                        </>\n                                                    )\n                                                }\n\n                                            </div>\n                                            {\n                                                resPerPage <= count && (\n\n                                                    <div className=\"product-pagination\">\n                                                        <Pagination\n                                                            activePage={currentPage}\n                                                            itemsCountPerPage={resPerPage}\n                                                            totalItemsCount={filteredProductsCount}\n                                                            onChange={setCurrentPageNo}\n                                                            nextPageText={'Next'}\n                                                            prevPageText={'Prev'}\n                                                            firstPageText={'First'}\n                                                            lastPageText={'Last'}\n                                                            itemClass=\"page-item\"\n                                                            linkClass=\"page-link\"\n                                                        />\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                    </Fragment>\n                                </div>\n\n                            </>\n                        )\n                    }\n                </div>\n            </section>\n        </Fragment >\n    )\n}\n\nexport default Collections\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\ForgotPassword.js",["686","687"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Banner from '../../assets/banner.png'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n            <section className=\"account\">\n                <div className=\"container\">\n                            {\n                                loading ? (\n                                    <div style={{ marginTop: '25%' }}>\n                                        <Loader />\n                                    </div>\n                                ) : (\n                                    <div className=\"account-form\">\n                                        <div className=\"form-header\">\n                                            <div className=\"login\">\n                                                <span>Forgot Password</span>\n                                            </div>\n                                        </div>\n                                        <form onSubmit={submitHandler}>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email_field\">Enter Email</label>\n                                                <input\n                                                    type=\"email\"\n                                                    id=\"email_field\"\n                                                    className=\"form-control\"\n                                                    value={email}\n                                                    onChange={(e) => setEmail(e.target.value)}\n                                                />\n                                            </div>\n\n                                            <button\n                                                id=\"forgot_password_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-login\"\n                                                disabled={loading ? true : false} >\n                                                Send Email\n                                            </button>\n                                        </form>\n                                    </div>\n                                )\n                            }\n                    </div>\n            </section>\n        </Fragment >\n    )\n}\n\nexport default ForgotPassword\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\UpdatePassword.js",["688"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport MenuProfile from './MenuProfile'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\nimport { logout } from '../../actions/userActions'\nimport { CART_RESET } from '../../constants/cartConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/profile')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updatePassword(oldPassword, password))\n        dispatch(logout())\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"container\">\n                <div class=\"row\">\n                    <div className=\"col-2\">\n                        <MenuProfile />\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"profile\">\n                            <div className=\"profile-header\">\n                                <h3>Change Password</h3>\n                            </div>\n                            <div className=\"user-info\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label for=\"old_password_field\">Old Password</label>\n                                        <input\n                                            type=\"password\"\n                                            id=\"old_password_field\"\n                                            className=\"form-control\"\n                                            value={oldPassword}\n                                            onChange={(e) => setOldPassword(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label for=\"new_password_field\">New Password</label>\n                                        <input\n                                            type=\"password\"\n                                            id=\"new_password_field\"\n                                            className=\"form-control\"\n                                            value={password}\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn btn-update btn-block\" disabled={loading ? true : false} >Update Password</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\Cart.js",["689"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\Payment.js",["690"],"import React, { Fragment, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createOrder, clearErrors } from '../../actions/orderActions'\nimport swal from 'sweetalert'\nimport NumberFormat from 'react-number-format'\nimport { CART_RESET } from '../../constants/cartConstants'\n\nconst Payment = ({ history }) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { userLogin } = useSelector(state => state.auth)\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    const { error } = useSelector(state => state.newOrder)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    const order = {\n        orderItems: cartItems,\n        shippingInfo\n    }\n\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'))\n\n    if (orderInfo) {\n        order.itemsPrice = orderInfo.itemsPrice\n        order.shippingPrice = orderInfo.shippingPrice\n        order.taxPrice = orderInfo.taxPrice\n        order.totalPrice = orderInfo.totalPrice\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n\n        document.querySelector('#pay_btn').disabled = true\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    try {\n                        order.paymentInfo = {\n                            name: 'Ship COD',\n                            status: 'no'\n                        }\n                        dispatch(createOrder(order))\n                        swal(\"Poof! Your imaginary file has been deleted!\", {\n                            icon: \"success\",\n                        })\n                        dispatch({ type: CART_RESET })\n                        history.push('/')\n\n                    } catch (error) {\n                        document.querySelector('#pay_btn').disabled = false\n                        alert.error(error.response.data.message)\n                    }\n                } else {\n                    history.push('/cart')\n                }\n            })\n\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Payment'} />\n\n            <div className=\"container\">\n                <CheckoutSteps shipping confirmOrder payment />\n                <div className=\"payment-method\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Select Payment Method</h1>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"Ship COD\" id=\"ship_cod\" defaultChecked />\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\n                                Ship COD\n                            </label>\n                        </div>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"Momo\" id=\"momo\" disabled />\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDisabled\">\n                                Thanh toán bằng Momo (Chưa ra mắt)\n                            </label>\n                        </div>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"Shopee Pay\" id=\"shopee_pay\" disabled />\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDisabled\">\n                                Thanh toán bằng Shopee Pay (Chưa ra mắt)\n                            </label>\n                        </div>\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"Zalo Pay\" id=\"zalo_pay\" disabled />\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDisabled\">\n                                Thanh toán bằng Zalo Pay (Chưa ra mắt)\n                            </label>\n                        </div>\n                        <button\n                            id=\"pay_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\">\n                            Pay - <NumberFormat value={`${orderInfo && orderInfo.totalPrice}`} displayType={'text'} thousandSeparator={true} prefix={'đ '} />\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Payment\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\orders\\MyListOrders.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\orders\\OrderDetails.js",["691","692"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport MenuProfile from '../user/MenuProfile'\nimport NumberFormat from 'react-number-format'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateStatusOrder, undoStockProduct, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\nimport swal from 'sweetalert'\n\nconst OrderDetails = ({ match }) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n    const { userLogin } = useSelector(state => state.auth)\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus, paidAt, deliveredAt, receivedAt, createdAt } = order\n    const { error: errorUpdateOrder, isUpdated } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id))\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n    }, [dispatch, alert, isUpdated, error, match.params.id])\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}`\n    const isCancel = orderStatus && orderStatus === 'Processing' ? true : false\n    const isReceive = orderStatus && orderStatus === 'Delivering' ? true : false\n    const time = createdAt && String(createdAt).substring(0, 10)\n    const cancelOrder = () => {\n\n        for (let i = 0; i < orderItems.length; i++) {\n            let productId = orderItems[i].product\n            let stock = orderItems[i].quantity\n            dispatch(undoStockProduct(productId, stock))\n        }\n\n        let status = {\n            orderStatus: 'Cancelled'\n        }\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(updateStatusOrder(match.params.id, status))\n                    swal(\"Poof! Your order has been canceled!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Haha Nope!\")\n                }\n            })\n    }\n\n    const receivedOrder = () => {\n        let status = {\n            orderStatus: 'Received'\n        }\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(updateStatusOrder(match.params.id, status))\n                    swal(\"Poof! Your imaginary file has been deleted!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Your imaginary file is safe!\")\n                }\n            })\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Order Details'} />\n            <div className=\"container\">\n                <div class=\"row\">\n                    <div className=\"col-2\">\n                        <MenuProfile />\n                    </div>\n                    <div className=\"col-10\">\n                        {\n                            loading ? (\n                                <>\n                                    <div style={{ paddingTop: '100px' }}></div>\n                                    <Loader />\n                                    <div style={{ paddingTop: '100px' }}></div>\n                                </>\n                            ) : (\n\n                                <Fragment>\n                                    <div className=\"my-orders\">\n                                        <div className=\"row\">\n                                            <div className=\"col-8\">\n                                                <h4 className=\"mb-4\">Order #{order._id}</h4>\n\n                                                <p><b>Name: </b> {userLogin && userLogin.name}</p>\n                                                <p><b>Phone: </b> {shippingInfo && shippingInfo.phone}</p>\n                                                <p><b>Address: </b>{shippingDetails}</p>\n                                                <p><b>Amount:</b> <NumberFormat value={totalPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></p>\n                                                <p><b>Time:</b> {time}</p>\n\n                                                <h5 className=\"my-4\">Order Items:</h5>\n\n                                                <hr />\n                                                <div className=\"cart-item my-1\">\n                                                    {orderItems && orderItems.map(item => (\n                                                        <div key={item.product} className=\"row my-5\">\n                                                            <div className=\"col-4 col-lg-2\">\n                                                                <img src={item.image} alt={item.name} height=\"50\" width=\"50\" />\n                                                            </div>\n\n                                                            <div className=\"col-5 col-lg-5\">\n                                                                <Link to={`/product/${item.product}`}>\n                                                                    <p>{item.name}</p>\n                                                                </Link>\n                                                                <p>Size: {item.size}</p>\n                                                            </div>\n\n\n                                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                                <p><NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></p>\n                                                            </div>\n\n                                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                                <p>{item.quantity} Piece(s)</p>\n                                                            </div>\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <div id=\"order_summary\">\n                                                    <p>Payment Method:\n                                                        <span className=\"order-summary-values\">{paymentInfo && paymentInfo.name}</span>\n                                                    </p>\n                                                    <p>Delivered at:\n                                                        <span className={deliveredAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}>{deliveredAt ? `${String(deliveredAt).substring(0, 10)}` : \"Not Delivery\"}</span>\n                                                    </p>\n                                                    <p>Paid at:\n                                                        <span className={paidAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}><span>{paidAt ? `${String(paidAt).substring(0, 10)}` : \"Not Paid\"}</span></span>\n                                                    </p>\n                                                    <p>Received at:\n                                                        <span className={receivedAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}>{receivedAt ? `${String(receivedAt).substring(0, 10)}` : \"Not Received\"}</span>\n                                                    </p>\n                                                    <p>Order Status:\n                                                        <span\n                                                            className={\n                                                                order.orderStatus && String(order.orderStatus).includes('Delivering') ? \"blueColor order-summary-values\"\n                                                                    : order.orderStatus && String(order.orderStatus).includes('Received') ? \"greenColor order-summary-values\"\n                                                                        : order.orderStatus && String(order.orderStatus).includes('Cancelled') ? \"redColor order-summary-values\"\n                                                                            : \"yellowColor order-summary-values\"\n                                                            }>\n                                                            {orderStatus}\n                                                        </span>\n                                                    </p>\n                                                    <hr />\n                                                    <button className=\"btn btn-block btn-order-cancel\" onClick={cancelOrder} hidden={isCancel ? false : true}>Cancel Order</button>\n                                                    <button className=\"btn btn-block btn-order-receive\" onClick={receivedOrder} hidden={isReceive ? false : true}>Received Order</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default OrderDetails\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\Dashboard.js",["693"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport NumberFormat from 'react-number-format'\nimport Sidebar from './Sidebar'\nimport { Bar } from \"react-chartjs-2\"\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getAdminProducts, getHotProductsByAdmin } from '../../actions/productActions'\nimport { allOrders } from '../../actions/orderActions'\nimport { allUsers } from '../../actions/userActions'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport { allReceipts } from '../../actions/receiptAction'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n    const [dateFrom, setDateFrom] = useState('01-01-2021')\n    const [dateTo, setDateTo] = useState('09-09-2021')\n    const { products } = useSelector(state => state.products)\n    const { hotProductsByAdmin } = useSelector(state => state.hotProductsByAdmin)\n    const { users } = useSelector(state => state.allUsers)\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    const { receipts } = useSelector(state => state.allReceipts)\n    const { importReceiptItems } = useSelector(state => state.importReceipt)\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(getHotProductsByAdmin(dateFrom, dateTo))\n        dispatch(allOrders())\n        dispatch(allUsers())\n        dispatch(getBrands())\n        dispatch(getCategories())\n        dispatch(allReceipts())\n    }, [dispatch])\n    const names = hotProductsByAdmin && hotProductsByAdmin.map(product => product.name.slice(0, 20));\n    const solds = hotProductsByAdmin && hotProductsByAdmin.map(product => product.sold);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(getHotProductsByAdmin(dateFrom, dateTo))\n    }\n    return (\n        <Fragment>\n            <div className=\"row admin-dashboard\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\" style={{ paddingBottom: '40px' }}>\n                    <h4 className=\"my-4\">Dashboard</h4>\n\n                    {loading ? <Loader /> : (\n                        <Fragment>\n                            <MetaData title={'Admin Dashboard'} />\n\n                            <div className=\"row pr-4\">\n\n                                <Link to='/admin/products' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                                        Products</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{products && products.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-calendar fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='#' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-success shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                                                        Total Amount</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><NumberFormat value={totalAmount && totalAmount} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/users' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-warning shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                                                        Users</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{users && users.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-users fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/orders' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-info shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Orders</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{orders && orders.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-clipboard-list fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/brands' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-orange shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Brands</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{brands && brands.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-band-aid fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/categories' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-purple shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Categories</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{categories && categories.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-bacteria fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/receipts' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-purple shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Receipts</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{receipts && receipts.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-bacteria fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/receipts/import' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-purple shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Import Receipt ItemsPrice</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{importReceiptItems && importReceiptItems.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    <i className=\"fas fa-bacteria fa-2x text-gray-300\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <h4 className=\"my-4\">Top 10 Best-Selling Products</h4>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div class=\"row my-4\">\n                                        <div className=\"col-2\">\n                                            <label htmlFor=\"name_field\">Date From</label>\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                value={dateFrom}\n                                                onChange={(e) => setDateFrom(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label htmlFor=\"name_field\">Date From</label>\n\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                value={dateTo}\n                                                onChange={(e) => setDateTo(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <button\n                                                style={{ margin: '0' }}\n                                                id=\"create_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-update\"\n                                                onClick={submitHandler}>\n                                                Submit\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <Bar\n                                data={{\n                                    labels: names,\n                                    datasets: [\n                                        {\n                                            label: \"Sold\",\n                                            backgroundColor: [\n                                                \"#3e95cd\",\n                                                \"#8e5ea2\",\n                                                \"#3cba9f\",\n                                                \"#e8c3b9\",\n                                                \"#c45850\",\n                                                \"#FFCC99\",\n                                                \"#99CCCC\",\n                                                \"#FF99CC\",\n                                                \"#FF6600\",\n                                                \"#993399\",\n                                            ],\n                                            data: solds\n                                        }\n                                    ]\n                                }}\n                                options={{\n                                    legend: { display: false },\n                                    title: {\n                                        display: true,\n                                        text: \"Predicted world population (millions) in 2050\"\n                                    }\n                                }}\n                            />\n\n                        </Fragment>\n                    )}\n\n                </div>\n            </div>\n\n        </Fragment >\n    )\n}\n\nexport default Dashboard\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\NewProduct.js",["694"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\nimport axios from 'axios'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [images, setImages] = useState([])\n    const [image1, setImage1] = useState('')\n    const [image2, setImage2] = useState('')\n    const [image3, setImage3] = useState('')\n    const [image4, setImage4] = useState('')\n    const [imagesPreview1, setImagesPreview1] = useState('/images/no-image.png')\n    const [imagesPreview2, setImagesPreview2] = useState('/images/no-image.png')\n    const [imagesPreview3, setImagesPreview3] = useState('/images/no-image.png')\n    const [imagesPreview4, setImagesPreview4] = useState('/images/no-image.png')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, success } = useSelector(state => state.newProduct)\n\n    useEffect(() => {\n        dispatch(getBrands())\n        dispatch(getCategories())\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully')\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n        if (price === '') {\n            alert.error('Please enter the price greater than 0!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n        if (images.length === 0) {\n            alert.error('Please add images!')\n            return\n        }\n\n        dispatch(newProduct(name, price, description, category, brand, images))\n    }\n\n    const onChange1 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage1(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview1(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange2 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage2(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview2(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange3 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage3(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview3(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange4 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage4(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview4(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const deleteImage1 = async () => {\n        setImagesPreview1('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image1))\n        setImage1('')\n\n    }\n    const deleteImage2 = async () => {\n        setImagesPreview2('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image2))\n        setImage2('')\n    }\n    const deleteImage3 = async () => {\n        setImagesPreview3('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image3))\n        setImage3('')\n    }\n    const deleteImage4 = async () => {\n        setImagesPreview4('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image4))\n        setImage4('')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-5 col-md-5\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>New Product</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"category_field\">Category</label>\n                                            <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                                {categories.map(category => (\n                                                    <option key={category._id} value={category._id} >{category.name}</option>\n                                                ))}\n\n                                            </select>\n                                            {category === '' && setCategory(categories[0]._id)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"brand_field\">Brand</label>\n                                            <select className=\"form-control\" id=\"brand_field\" value={brand} onChange={(e) => setBrand(e.target.value)}>\n                                                {brands.map(brand => (\n                                                    <option key={brand._id} value={brand._id} >{brand.name}</option>\n                                                ))}\n\n                                            </select>\n                                            {brand === '' && setBrand(brands[0]._id)}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button\n                                    id=\"create_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n\n                    </Fragment>\n                </div>\n                <div className=\"col-5 col-md-5\">\n                    <div className=\"new-img\">\n                        <div className=\"row\">\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview1} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange1}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage1}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview2} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange2}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage2}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview3} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange3}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage3}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview4} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange4}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage4}>X</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n\n        </Fragment >\n    )\n}\n\nexport default NewProduct\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateProduct.js",["695","696","697"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\nimport axios from 'axios'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport { UPDATE_PRODUCT_RESET, PRODUCT_DETAILS_RESET } from '../../constants/productConstants'\n\nconst UpdateProduct = ({ match, history }) => {\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [stock, setStock] = useState(0)\n    const [images, setImages] = useState([])\n\n    const [oldImages, setOldImages] = useState([])\n    const [image1, setImage1] = useState('')\n    const [image2, setImage2] = useState('')\n    const [image3, setImage3] = useState('')\n    const [image4, setImage4] = useState('')\n    const [imagesPreview1, setImagesPreview1] = useState('/images/no-image.png')\n    const [imagesPreview2, setImagesPreview2] = useState('/images/no-image.png')\n    const [imagesPreview3, setImagesPreview3] = useState('/images/no-image.png')\n    const [imagesPreview4, setImagesPreview4] = useState('/images/no-image.png')\n\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product)\n\n    const productId = match.params.id\n\n    useEffect(() => {\n        if (!product || product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        } else {\n            setName(product.name)\n            setPrice(product.price)\n            setDescription(product.description)\n            setCategory(product.category)\n            setBrand(product.brand)\n            setStock(product.stock)\n            setOldImages(product.images)\n            setImages(product.images)\n            setImage1(product.images[0] ? product.images[0].public_id : '')\n            setImage2(product.images[1] ? product.images[1].public_id : '')\n            setImage3(product.images[2] ? product.images[2].public_id : '')\n            setImage4(product.images[3] ? product.images[3].public_id : '')\n        }\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError)\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Product updated successfully')\n            history.push('/admin/products')\n            dispatch({ type: UPDATE_PRODUCT_RESET })\n            dispatch({ type: PRODUCT_DETAILS_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n        if (price === '' || price === '0') {\n            alert.error('Please enter the price greater than 0!')\n            return\n        }\n        if (stock === '' || stock === '0') {\n            alert.error('Please enter the stock greater than 0!')\n            return\n        }\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n        if (images.length === 0) {\n            alert.error('Please add images!')\n            return\n        }\n        images.forEach(function (v) { delete v._id })\n        dispatch(updateProduct(product._id, name, price, stock, description, category, brand, images))\n    }\n\n    const onChange1 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage1(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview1(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange2 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage2(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview2(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange3 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage3(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview3(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange4 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage4(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview4(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const deleteImage = (index) => e => {\n        let newImages = [...oldImages]\n        newImages[index] = ''\n        setOldImages(newImages)\n        if (index === 0) {\n            setImages(images.filter(item => item.public_id !== image1))\n            setImage1('')\n        }\n        else if (index === 1) {\n            setImages(images.filter(item => item.public_id !== image2))\n            setImage2('')\n        }\n        else if (index === 2) {\n            setImages(images.filter(item => item.public_id !== image3))\n            setImage3('')\n        }\n        else if (index === 3) {\n            setImages(images.filter(item => item.public_id !== image4))\n            setImage4('')\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-5 col-md-5\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>Update Product #{productId}</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"price_field\">Price</label>\n                                            <input\n                                                type=\"number\"\n                                                id=\"price_field\"\n                                                className=\"form-control\"\n                                                value={price}\n                                                onChange={(e) => setPrice(e.target.value)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"stock_field\">Stock</label>\n                                            <input\n                                                type=\"number\"\n                                                id=\"stock_field\"\n                                                className=\"form-control\"\n                                                value={stock}\n                                                onChange={(e) => setStock(e.target.value)}\n                                                disabled\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"category_field\">Category</label>\n                                            <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                                {categories.map(category => (\n                                                    <option key={category._id} value={category._id} >{category.name}</option>\n                                                ))}\n\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"brand_field\">Brand</label>\n                                            <select className=\"form-control\" id=\"brand_field\" value={brand} onChange={(e) => setBrand(e.target.value)}>\n                                                {brands.map(brand => (\n                                                    <option key={brand._id} value={brand._id} >{brand.name}</option>\n                                                ))}\n\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button\n                                    id=\"update_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    UPDATE\n                                </button>\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n\n                <div className=\"col-5 col-md-5\">\n                    <div className=\"new-img\">\n                        <div className=\"row\">\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={oldImages && oldImages[0] ? oldImages[0].url : imagesPreview1} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange1}\n                                />\n                                <span className=\"delete-img\" id=\"delete1\" onClick={deleteImage(0)}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={oldImages && oldImages[1] ? oldImages[1].url : imagesPreview2} alt=\"\" />\n\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange2}\n                                />\n                                <span className=\"delete-img\" id=\"delete2\" onClick={deleteImage(1)}>X</span>\n\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={oldImages && oldImages[2] ? oldImages[2].url : imagesPreview3} alt=\"\" />\n\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange3}\n                                />\n                                <span className=\"delete-img\" id=\"delete3\" onClick={deleteImage(2)}>X</span>\n\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={oldImages && oldImages[3] ? oldImages[3].url : imagesPreview4} alt=\"\" />\n\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange4}\n                                />\n                                <span className=\"delete-img\" id=\"delete4\" onClick={deleteImage(3)}>X</span>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ProductReviews.js",["698"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTableV5 } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <a href className=\"icon icon-delete\" onClick={() => deleteReviewHandler(review._id)} style={{ paddingLeft: '18px' }}>\n                        <i className='bx bxs-trash-alt' ></i>\n                    </a>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row admin-reviews\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-save btn-block py-2\"\n                                    >\n                                        SEARCH\n                                    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTableV5\n                                data={setReviews()}\n                                className=\"px-3\"\n                                entriesOptions={[10, 20, 50]}\n                                entries={10}\n                                hover\n                                searchTop\n                                searchBottom={false}\n                            />\n                        ) : (\n                            <p className=\"mt-5 text-center\">No Reviews.</p>\n                        )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\OrdersList.js",["699"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\nimport NumberFormat from 'react-number-format'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst OrdersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { isDeleted } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted successfully');\n            history.push('/admin/orders');\n            dispatch({ type: DELETE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Created At',\n                    field: 'createdAt',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Total Prices',\n                    field: 'totalPrices',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        orders && orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                createdAt: String(order.createdAt).substring(0, 10),\n                amount: order.orderItems.length,\n                totalPrices: <NumberFormat value={order.totalPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} />,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivering')\n                    ? <p style={{ color: 'blue' }}>{order.orderStatus}</p>\n                    : order.orderStatus && String(order.orderStatus).includes('Cancelled')\n                        ? <p style={{ color: 'red' }}>{order.orderStatus}</p>\n                        : order.orderStatus && String(order.orderStatus).includes('Received')\n                            ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                            : <p style={{ color: 'orange' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/admin/order/${order._id}`} className=\"btn-order-details\" style={{ paddingLeft: '16px' }}>\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Orders'} />\n            <div className=\"row admin-orders\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"users-list-header my-4\">\n                            <h3>All Orders (Total: {orders && orders.length})</h3>\n                        </div>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTableV5\n                                data={setOrders()}\n                                className=\"px-3\"\n                                entriesOptions={[10, 20, 50]}\n                                entries={10}\n                                hover\n                                searchTop\n                                searchBottom={false}\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ProcessOrder.js",["700","701"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\nimport swal from 'sweetalert'\nimport NumberFormat from 'react-number-format'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateOrderByAdmin, updateStatusOrder, undoStockProduct, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\n\nconst ProcessOrder = ({ match }) => {\n\n    const [status, setStatus] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus, paidAt, deliveredAt, receivedAt } = order\n    const { error, isUpdated } = useSelector(state => state.order)\n\n    const orderId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}`\n    const isDelivery = orderStatus && orderStatus === 'Processing' ? true : false\n    const isCancel = orderStatus && orderStatus === 'Processing' ? true : false\n\n    const updateOrderHandler = () => {\n        let status = {\n            orderStatus: 'Delivering'\n        }\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(updateOrderByAdmin(orderId, status))\n                    swal(\"Poof! Your imaginary file has been deleted!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Your imaginary file is safe!\")\n                }\n            })\n    }\n\n    const cancelOrder = () => {\n        for (let i = 0; i < orderItems.length; i++) {\n            let productId = orderItems[i].product\n            let stock = orderItems[i].quantity\n            dispatch(undoStockProduct(productId, stock))\n        }\n\n        let status = {\n            orderStatus: 'Cancelled'\n        }\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(updateStatusOrder(match.params.id, status))\n                    swal(\"Poof! Your imaginary file has been deleted!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Your imaginary file is safe!\")\n                }\n            })\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={`Process Order # ${order && order._id}`} />\n            <div className=\"row admin-orders\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-6\">\n                    <Fragment>\n                        {loading ? <Loader /> : (\n                            <div className=\"order-details\">\n                                <div className=\"my-4\">\n                                    <h3>Order #{order._id}</h3>\n                                </div>\n                                <h4 className=\"mb-4\">Shipping Info</h4>\n                                <p><b>Name:</b> {user && user.name}</p>\n                                <p><b>Phone:</b> {shippingInfo && shippingInfo.phone}</p>\n                                <p className=\"mb-4\"><b>Address:</b> {shippingDetails}</p>\n                                <p><b>Amount: <NumberFormat value={totalPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></b></p>\n\n                                <hr />\n                                <h4 className=\"my-4\">Order Items:</h4>\n                                <div className=\"cart-item my-1\">\n                                    {orderItems && orderItems.map(item => (\n                                        <div key={item.product} className=\"row my-5\">\n                                            <div className=\"col-4 col-lg-2\">\n                                                <img src={item.image} alt={item.name} height=\"50\" width=\"50\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-5\">\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <p><NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p>{item.quantity} Piece(s)</p>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                                <hr />\n                            </div>\n\n\n                        )}\n                    </Fragment>\n                </div>\n                <div className=\"col-12 col-md-3 my-4\">\n                    <div id=\"order_summary\">\n                        <p>Payment Method:\n                            <span className=\"order-summary-values\">{paymentInfo && paymentInfo.name}</span>\n                        </p>\n                        <p>Delivered at:\n                            <span className={deliveredAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}>{deliveredAt ? `${String(deliveredAt).substring(0, 10)}` : \"Not Delivery\"}</span>\n                        </p>\n                        <p>Paid at:\n                            <span className={paidAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}><span>{paidAt ? `${String(paidAt).substring(0, 10)}` : \"Not Paid\"}</span></span>\n                        </p>\n                        <p>Received at:\n                            <span className={receivedAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}>{receivedAt ? `${String(receivedAt).substring(0, 10)}` : \"Not Received\"}</span>\n                        </p>\n                        <p>Order Status:\n                            <span\n                                className={\n                                    order.orderStatus && String(order.orderStatus).includes('Delivering') ? \"blueColor order-summary-values\"\n                                        : order.orderStatus && String(order.orderStatus).includes('Received') ? \"greenColor order-summary-values\"\n                                            : order.orderStatus && String(order.orderStatus).includes('Cancelled') ? \"redColor order-summary-values\"\n                                                : \"yellowColor order-summary-values\"\n                                }>\n                                {orderStatus}\n                            </span>\n                        </p>\n                        <hr />\n\n                        <button className=\"btn btn-block btn-order-cancel\" onClick={cancelOrder} hidden={isCancel ? false : true}>Cancel Order</button>\n                        <button className=\"btn btn-block btn-order-receive\" onClick={updateOrderHandler} hidden={isDelivery ? false : true}>Delivery Order</button>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\NewBrand.js",["702"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newBrand, clearErrors } from '../../actions/brandActions'\nimport { NEW_BRAND_RESET } from '../../constants/brandConstants'\n\nconst NewBrand = ({ history }) => {\n\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, success } = useSelector(state => state.newBrand)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/brands');\n            alert.success('Brand created successfully')\n            dispatch({ type: NEW_BRAND_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n\n        dispatch(newBrand(name, description))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-8\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>New Brand</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n\n                                <button\n                                    id=\"create_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n\n                    </Fragment>\n                </div>\n            </div >\n\n        </Fragment >\n    )\n}\n\nexport default NewBrand\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\BrandsList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateBrand.js",["703","704"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\nimport axios from 'axios'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBrandDetailsById, updateBrand, clearErrors } from '../../actions/brandActions'\nimport { UPDATE_BRAND_RESET, BRAND_DETAILS_RESET } from '../../constants/brandConstants'\n\nconst UpdateBrand = ({ match, history }) => {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, brand } = useSelector(state => state.brandDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.brand)\n\n    const brandId = match.params.id\n\n    useEffect(() => {\n        if (!brand || brand._id !== brandId) {\n            dispatch(getBrandDetailsById(brandId))\n        } else {\n            setName(brand.name)\n            setDescription(brand.description)\n        }\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError)\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('Brand updated successfully')\n            history.push('/admin/brands')\n            dispatch({ type: UPDATE_BRAND_RESET })\n            dispatch({ type: BRAND_DETAILS_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, brand, brandId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n\n        dispatch(updateBrand(brandId, name, description))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-5 col-md-5\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>Update Brand #{brandId}</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <button\n                                    id=\"update_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    UPDATE\n                                </button>\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateBrand\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\CategoriesList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ReceiptDetails.js",["705","706","707","708","709","710"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\nimport swal from 'sweetalert'\nimport NumberFormat from 'react-number-format'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getReceiptDetails } from '../../actions/receiptAction'\n\nconst ReceiptDetails = ({ match }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, receipt = {} } = useSelector(state => state.receiptDetails)\n    const { supplier, totalImportPrice, user, receiptItems, createdAt } = receipt\n    const receiptId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getReceiptDetails(match.params.id))\n\n    }, [dispatch, alert, match.params.id])\n    return (\n        <Fragment>\n            <MetaData title={`Receipt # ${receiptId}`} />\n            <div className=\"row admin-orders\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-8\" style={{ paddingTop: '60px' }}>\n                    <Fragment>\n\n\n\n                        <h4 className=\"mb-3\" >Supplier Info</h4>\n                        <p><b>Name: </b> {supplier && supplier.name}</p>\n                        <p><b>Phone: </b> {supplier && supplier.phone}</p>\n                        <p><b>Address: </b> {supplier && supplier.address}</p>\n                        <p><b>Country: </b> {supplier && supplier.country}</p>\n                        <p><b>Total Import Price: <NumberFormat value={totalImportPrice && totalImportPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></b></p>\n\n\n                        <hr />\n                        <h4 className=\"mt-4\">Receipt Import Items: </h4>\n\n                        {receiptItems && receiptItems.map(item => (\n                            <Fragment>\n                                <hr />\n                                <div className=\"cart-item\" key={item.product}>\n                                    <div className=\"row\">\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"80\" width=\"80\" />\n                                        </div>\n\n                                        <div className=\"col-6 col-lg-6\">\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            <p><NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></p>\n                                        </div>\n\n\n                                        <div className=\"col-2 col-lg-4 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} x <NumberFormat value={item.importPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} /> = <b><NumberFormat value={(item.quantity * item.importPrice)} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></b></p>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <hr />\n                            </Fragment>\n                        ))}\n\n\n                    </Fragment>\n\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ReceiptDetails\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\UpdateCategory.js",["711","712"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\nimport axios from 'axios'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCategoryDetailsById, updateCategory, clearErrors } from '../../actions/categoryActions'\nimport { UPDATE_CATEGORY_RESET, CATEGORY_DETAILS_RESET } from '../../constants/categoryConstants'\n\nconst UpdateCategory = ({ match, history }) => {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, category } = useSelector(state => state.categoryDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.category)\n\n    const categoryId = match.params.id\n\n    useEffect(() => {\n        if (!category || category._id !== categoryId) {\n            dispatch(getCategoryDetailsById(categoryId))\n        } else {\n            setName(category.name)\n            setDescription(category.description)\n        }\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError)\n            dispatch(clearErrors())\n        }\n\n        if (isUpdated) {\n            alert.success('Category updated successfully')\n            history.push('/admin/categories')\n            dispatch({ type: UPDATE_CATEGORY_RESET })\n            dispatch({ type: CATEGORY_DETAILS_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, category, categoryId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n\n        dispatch(updateCategory(categoryId, name, description))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-5 col-md-5\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>Update Category #{categoryId}</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <button\n                                    id=\"update_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    UPDATE\n                                </button>\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateCategory\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\NewCategory.js",["713"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newCategory, clearErrors } from '../../actions/categoryActions'\nimport { NEW_CATEGORY_RESET } from '../../constants/categoryConstants'\n\nconst NewCategory = ({ history }) => {\n\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, success } = useSelector(state => state.newCategory)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/categories');\n            alert.success('Brand created successfully')\n            dispatch({ type: NEW_CATEGORY_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n\n        dispatch(newCategory(name, description))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-8\">\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>New Category</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n\n                                <button\n                                    id=\"create_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n\n                    </Fragment>\n                </div>\n            </div >\n\n        </Fragment >\n    )\n}\n\nexport default NewCategory\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ReceiptList.js",["714"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\nimport NumberFormat from 'react-number-format'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allReceipts } from '../../actions/receiptAction'\n\nconst ReceiptList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, receipts } = useSelector(state => state.allReceipts);\n\n    useEffect(() => {\n        dispatch(allReceipts())\n    }, [dispatch, alert])\n\n\n    const setReceipts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Receipt ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Created At',\n                    field: 'createdAt',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Total Import Price',\n                    field: 'totalImportPrice',\n                    sort: 'asc'\n                },\n\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        receipts && receipts.forEach(receipt => {\n            data.rows.push({\n                id: receipt._id,\n                createdAt: String(receipt.createdAt).substring(0, 10),\n                user: receipt.user,\n                totalImportPrice: <NumberFormat value={receipt.totalImportPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} />,\n\n                actions:\n                    <Link to={`/admin/receipt/${receipt._id}`} className=\"btn-order-details\" style={{ paddingLeft: '16px' }}>\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Receipts'} />\n            <div className=\"row admin-orders\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"users-list-header my-4\">\n                            <h3>All Receipts (Total: {receipts && receipts.length})</h3>\n                        </div>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTableV5\n                                data={setReceipts()}\n                                className=\"px-3\"\n                                entriesOptions={[10, 20, 50]}\n                                entries={10}\n                                hover\n                                searchTop\n                                searchBottom={false}\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ReceiptList\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ConfirmReceipt.js",["715"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport swal from 'sweetalert'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { createReceipt } from '../../actions/receiptAction'\nimport { RECEIPT_RESET } from '../../constants/receiptConstants'\n\nconst ConfirmReceipt = ({ history }) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { importReceiptItems, supplierInfo } = useSelector(state => state.importReceipt)\n\n    const totalImportPrice = importReceiptItems.reduce((acc, item) => acc + item.importPrice * item.quantity, 0)\n\n    const receipt = {\n        receiptItems: importReceiptItems,\n        totalImportPrice,\n        supplierInfo\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    try {\n\n                        dispatch(createReceipt(receipt))\n                        swal(\"Poof! Your imaginary file has been deleted!\", {\n                            icon: \"success\",\n                        })\n                        dispatch({ type: RECEIPT_RESET })\n                        history.push('/admin/receipts')\n\n                    } catch (error) {\n                        alert.error(error.response.data.message)\n                    }\n                } else {\n                    history.push('/admin/receipts/import')\n                }\n            })\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Confirm Order'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n\n                        <div class=\"row\" style={{ paddingTop: '60px' }}>\n                            <div className=\"col-8\">\n\n                                <h4 className=\"mb-3\" >Shipping Info</h4>\n                                <p><b>Name: </b> {supplierInfo.name}</p>\n                                <p><b>Phone: </b> {supplierInfo.phone}</p>\n                                <p><b>Address: </b> {supplierInfo.address}</p>\n                                <p><b>Country: </b> {supplierInfo.country}</p>\n                            </div>\n                            <div className=\"col-4\">\n                                <div id=\"order_summary\">\n                                    <h4>Order Summary</h4>\n                                    <hr />\n                                    <p>Subtotal:  <span className=\"order-summary-values\">${totalImportPrice}</span></p>\n\n                                    <button id=\"checkout_btn\" className=\"btn btn-block btn-order-summary\" onClick={submitHandler}>Payment</button>\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                        <hr />\n                        <h4 className=\"mt-4\">Receipt Import Items: </h4>\n\n                        {importReceiptItems.map(item => (\n                            <Fragment>\n                                <hr />\n                                <div className=\"cart-item\" key={item.product}>\n                                    <div className=\"row\">\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"80\" width=\"80\" />\n                                        </div>\n\n                                        <div className=\"col-6 col-lg-6\">\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            <p>Price: {item.price}</p>\n                                        </div>\n\n\n                                        <div className=\"col-2 col-lg-4 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} x ${item.importPrice} = <b>${(item.quantity * item.importPrice)}</b></p>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <hr />\n                            </Fragment>\n                        ))}\n\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default ConfirmReceipt\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\ImportReceiptItems.js",["716","717","718","719"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\nimport swal from 'sweetalert'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateItem, removeItem, saveSupplierInfo } from '../../actions/receiptAction'\n\nconst ImportReceiptItems = ({ history }) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n    const { importReceiptItems, supplierInfo } = useSelector(state => state.importReceipt)\n\n    const [name, setName] = useState(supplierInfo.name)\n    const [address, setAddress] = useState(supplierInfo.address)\n    const [country, setCountry] = useState(supplierInfo.country)\n    const [phone, setPhone] = useState(supplierInfo.phone)\n\n    const increaseQty = (id, quantity, importPrice) => {\n        const newQty = quantity + 1;\n        dispatch(updateItem(id, newQty, importPrice))\n    }\n\n    const decreaseQty = (id, quantity, importPrice) => {\n        const newQty = quantity - 1;\n        if (newQty <= 0) return\n        dispatch(updateItem(id, newQty, importPrice))\n    }\n\n    const removeItemHandler = (id) => {\n        console.log(id);\n        dispatch(removeItem(id))\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveSupplierInfo({ name, address, phone, country }))\n        history.push('/admin/receipts/confirm')\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Admin - All Import Receipt Items'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"users-list-header my-4\">\n                            <h3>All Import Receipt Items (Total: {importReceiptItems && importReceiptItems.length})</h3>\n                        </div>\n\n                        {\n                            importReceiptItems ? (\n                                <>\n                                    {\n                                        importReceiptItems.length === 0 ? null : (\n                                            <Fragment>\n                                                <div className=\"container cart\">\n\n                                                    <div class=\"row\">\n                                                        <div className=\"col-9\">\n                                                            <table>\n                                                                <tbody>\n                                                                    <tr className=\"table-header\">\n                                                                        <th><b>Product</b></th>\n                                                                        <th><b>Stock</b></th>\n                                                                        <th style={{ paddingLeft: \"20px\" }}><b>Quantity</b></th>\n                                                                        <th><b>Import Price</b></th>\n                                                                        <th></th>\n                                                                    </tr>\n                                                                    {\n                                                                        importReceiptItems.map(item => (\n                                                                            <tr key={item.product}>\n                                                                                <td>\n                                                                                    <div className=\"cart-info\">\n                                                                                        <Link to={`/product/${item.product}`}>\n                                                                                            <img src={item.image} alt=\"\" />\n                                                                                        </Link>\n                                                                                        <div style={{ maxWidth: \"240px\" }}>\n                                                                                            <Link to={`/product/${item.product}`}>\n                                                                                                <p className=\"cart-item-name\"><b>{item.name}</b></p>\n                                                                                            </Link>\n                                                                                            <p>Price: ${item.price}</p>\n                                                                                            <span onClick={() => removeItemHandler(item.product)} >Remove</span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </td>\n                                                                                <td>\n                                                                                    {item.stock}\n                                                                                </td>\n\n                                                                                <td style={{ textAlign: \"center\" }}>\n                                                                                    <div className=\"product-quantity-wrapper\">\n                                                                                        <span className=\"product-quantity-btn\" onClick={() => decreaseQty(item.product, item.quantity, item.importPrice)}>\n                                                                                            <i className=\"bx bx-minus\"></i>\n                                                                                        </span>\n                                                                                        <input type=\"number\" className=\"product-quantity\" value={item.quantity} readOnly />\n                                                                                        <span className=\"product-quantity-btn\" onClick={() => increaseQty(item.product, item.quantity, item.importPrice)}>\n                                                                                            <i className=\"bx bx-plus\"></i>\n                                                                                        </span>\n\n                                                                                    </div>\n                                                                                </td>\n                                                                                <td>\n                                                                                    <input\n                                                                                        type=\"number\"\n                                                                                        id=\"price_field\"\n                                                                                        className=\"form-control\"\n                                                                                        style={{ width: '25%' }}\n                                                                                        value={item.importPrice}\n                                                                                        onChange={(e) => dispatch(updateItem(item.product, item.quantity, e.target.value))}\n                                                                                    />\n                                                                                </td>\n                                                                            </tr>\n                                                                        ))\n                                                                    }\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                        <div className=\"col-3\">\n                                                            <h4>Supplier</h4>\n                                                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Name</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={name}\n                                                                        onChange={(e) => setName(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Address</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={address}\n                                                                        onChange={(e) => setAddress(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Phone</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={phone}\n                                                                        onChange={(e) => setPhone(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Country</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={country}\n                                                                        onChange={(e) => setCountry(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <button\n                                                                    id=\"shipping_btn\"\n                                                                    type=\"submit\"\n                                                                    className=\"btn btn-block py-3\">\n                                                                    Make an entry ticket\n                                                                </button>\n                                                            </form>\n\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n\n                                            </Fragment>\n                                        )\n                                    }\n                                </>\n                            ) : null\n                        }\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ImportReceiptItems\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\Product.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Loader.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\MetaData.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Services.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Clients.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\brandConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\constants\\receiptConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\brandActions.js",["720","721","722","723","724","725"],"import {\n    ALL_BRANDS_REQUEST,\n    ALL_BRANDS_SUCCESS,\n    ALL_BRANDS_FAIL,\n\n    BRAND_DETAILS_REQUEST,\n    BRAND_DETAILS_SUCCESS,\n    BRAND_DETAILS_FAIL,\n\n    NEW_BRAND_REQUEST,\n    NEW_BRAND_SUCCESS,\n    NEW_BRAND_RESET,\n    NEW_BRAND_FAIL,\n\n    DELETE_BRAND_REQUEST,\n    DELETE_BRAND_SUCCESS,\n    DELETE_BRAND_RESET,\n    DELETE_BRAND_FAIL,\n\n    UPDATE_BRAND_REQUEST,\n    UPDATE_BRAND_SUCCESS,\n    UPDATE_BRAND_RESET,\n    UPDATE_BRAND_FAIL,\n\n    GET_BRAND_BY_ID_REQUEST,\n    GET_BRAND_BY_ID_SUCCESS,\n    GET_BRAND_BY_ID_FAIL,\n\n    CLEAR_ERRORS\n} from '../constants/brandConstants'\n\nimport axios from 'axios'\n\nexport const getBrands = () => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_BRANDS_REQUEST })\n\n        const { data } = await axios.get(`/api/brands`)\n        dispatch({\n            type: ALL_BRANDS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_BRANDS_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\n\nexport const getBrandDetailsById = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: BRAND_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/brand/${id}`)\n        dispatch({\n            type: BRAND_DETAILS_SUCCESS,\n            payload: data.brand\n        })\n\n    } catch (error) {\n        dispatch({\n            type: BRAND_DETAILS_FAIL,\n            payload: error.response\n        })\n    }\n}\n\nexport const getBrandDetailsByName = (name) => async (dispatch) => {\n    try {\n\n        dispatch({ type: BRAND_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/brand/name/${name}`)\n        dispatch({\n            type: BRAND_DETAILS_SUCCESS,\n            payload: data.brand\n        })\n\n    } catch (error) {\n        dispatch({\n            type: BRAND_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New brand (Admin)\nexport const newBrand = (name, description) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_BRAND_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(`/api/admin/brand/new`, { name, description }, config)\n\n        dispatch({\n            type: NEW_BRAND_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_BRAND_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Delete brand (Admin)\nexport const deleteBrand = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_BRAND_REQUEST })\n\n        const { data } = await axios.delete(`/api/admin/brand/${id}`)\n\n        dispatch({\n            type: DELETE_BRAND_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_BRAND_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update brand (ADMIN)\nexport const updateBrand = (id, name, description) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_BRAND_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/admin/brand/${id}`, { name, description }, config)\n\n        dispatch({\n            type: UPDATE_BRAND_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_BRAND_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\productActions.js",["726"],"import {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    PRODUCT_FEATURED_REQUEST,\n    PRODUCT_FEATURED_SUCCESS,\n    PRODUCT_FEATURED_FAIL,\n    PRODUCT_HOT_REQUEST,\n    PRODUCT_HOT_SUCCESS,\n    PRODUCT_HOT_FAIL,\n    PRODUCT_LATEST_REQUEST,\n    PRODUCT_LATEST_SUCCESS,\n    PRODUCT_LATEST_FAIL,\n    ADMIN_PRODUCTS_CHARTS_REQUEST,\n    ADMIN_PRODUCTS_CHARTS_SUCCESS,\n    ADMIN_PRODUCTS_CHARTS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS,\n} from '../constants/productConstants'\n\nimport axios from 'axios'\n\nexport const getProducts = (keyword = '', currentPage = 1, category, brand) => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n        let link = `/api/products?keyword=${keyword}&page=${currentPage}`\n\n        if (category && brand) {\n            const dataCate = await axios.get(`/api/brand/name/${brand}`)\n            const dataBrand = await axios.get(`/api/category/name/${category}`)\n            link = `/api/products?keyword=${keyword}&page=${currentPage}&brand=${dataCate.data.brand[0]._id}&category=${dataBrand.data.category[0]._id}`\n\n        } else {\n            if (category) {\n                const { data } = await axios.get(`/api/category/name/${category}`)\n                link = `/api/products?keyword=${keyword}&page=${currentPage}&category=${data.category[0]._id}`\n            }\n            else if (brand) {\n                const { data } = await axios.get(`/api/brand/name/${brand}`)\n                link = `/api/products?keyword=${keyword}&page=${currentPage}&brand=${data.brand[0]._id}`\n            }\n        }\n        const { data } = await axios.get(link)\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response\n        })\n    }\n}\n\nexport const getFeaturedProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_FEATURED_REQUEST })\n        const { data } = await axios.get('/api/products/featured')\n        dispatch({\n            type: PRODUCT_FEATURED_SUCCESS,\n            payload: data.featuredProducts\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_FEATURED_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getHotProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_HOT_REQUEST })\n        const { data } = await axios.get('/api/products/hot')\n        dispatch({\n            type: PRODUCT_HOT_SUCCESS,\n            payload: data.hotProducts\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_HOT_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getLatestProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LATEST_REQUEST })\n        const { data } = await axios.get('/api/products/latest')\n        dispatch({\n            type: PRODUCT_LATEST_SUCCESS,\n            payload: data.latestProducts\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LATEST_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getHotProductsByAdmin = (dateFrom, dateTo) => async (dispatch) => {\n    try {\n        dispatch({ type: ADMIN_PRODUCTS_CHARTS_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/admin/products/charts', { dateFrom, dateTo }, config)\n        dispatch({\n            type: ADMIN_PRODUCTS_CHARTS_SUCCESS,\n            payload: data.hotProductsByAdmin\n        })\n    } catch (error) {\n        dispatch({\n            type: ADMIN_PRODUCTS_CHARTS_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\nexport const getProductCollections = (currentPage = 1, collections, collection) => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n        let link = `/api/products?page=${currentPage}`\n        if (collections === 'brand') {\n            const { data } = await axios.get(`/api/brand/name/${collection}`)\n            link = `/api/products?page=${currentPage}&brand=${data.brand[0]._id}`\n        }\n        if (collections === 'category') {\n            const { data } = await axios.get(`/api/category/name/${collection}`)\n            console.log(data);\n\n            link = `/api/products?page=${currentPage}&category=${data.category[0]._id}`\n        }\n        const { data } = await axios.get(link)\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message,\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/product/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//ADMIN\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New product (Admin)\nexport const newProduct = (name, price, description, category, brand, images) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(`/api/admin/product/new`, { name, price, description, category, brand, images }, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, name, price, stock, description, category, brand, images) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/admin/product/${id}`, { id, name, price, stock, description, category, brand, images }, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n//Clear Error\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS,\n    })\n}","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\categoryActions.js",["727","728","729","730","731","732"],"import {\n    ALL_CATEGORIES_REQUEST,\n    ALL_CATEGORIES_SUCCESS,\n    ALL_CATEGORIES_FAIL,\n\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n\n    NEW_CATEGORY_REQUEST,\n    NEW_CATEGORY_SUCCESS,\n    NEW_CATEGORY_RESET,\n    NEW_CATEGORY_FAIL,\n\n    DELETE_CATEGORY_REQUEST,\n    DELETE_CATEGORY_SUCCESS,\n    DELETE_CATEGORY_RESET,\n    DELETE_CATEGORY_FAIL,\n\n    UPDATE_CATEGORY_REQUEST,\n    UPDATE_CATEGORY_SUCCESS,\n    UPDATE_CATEGORY_RESET,\n    UPDATE_CATEGORY_FAIL,\n\n    GET_CATEGORY_BY_ID_REQUEST,\n    GET_CATEGORY_BY_ID_SUCCESS,\n    GET_CATEGORY_BY_ID_FAIL,\n\n    CLEAR_ERRORS\n} from '../constants/categoryConstants'\n\nimport axios from 'axios'\n\nexport const getCategories = () => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_CATEGORIES_REQUEST })\n\n        const { data } = await axios.get(`/api/categories`)\n        dispatch({\n            type: ALL_CATEGORIES_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ALL_CATEGORIES_FAIL,\n            payload: error.response,\n        })\n    }\n}\n\nexport const getCategoryDetailsById = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: CATEGORY_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/category/${id}`)\n        dispatch({\n            type: CATEGORY_DETAILS_SUCCESS,\n            payload: data.category\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DETAILS_FAIL,\n            payload: error.response\n        })\n    }\n}\n\nexport const getCategoryDetailsByName = (name) => async (dispatch) => {\n    try {\n\n        dispatch({ type: CATEGORY_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/category/name/${name}`)\n        dispatch({\n            type: CATEGORY_DETAILS_SUCCESS,\n            payload: data.category\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New category (Admin)\nexport const newCategory = (name, description) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_CATEGORY_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post(`/api/admin/category/new`, { name, description }, config)\n\n        dispatch({\n            type: NEW_CATEGORY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_CATEGORY_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Delete category (Admin)\nexport const deleteCategory = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_CATEGORY_REQUEST })\n\n        const { data } = await axios.delete(`/api/admin/category/${id}`)\n\n        dispatch({\n            type: DELETE_CATEGORY_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_CATEGORY_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update category (ADMIN)\nexport const updateCategory = (id, name, description) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_CATEGORY_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/admin/category/${id}`, { name, description }, config)\n\n        dispatch({\n            type: UPDATE_CATEGORY_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_CATEGORY_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\receiptAction.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\userActions.js",["733","734","735"],"import axios from 'axios'\nimport {\n    LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL,\n    REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL,\n    UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL,\n    FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST, NEW_PASSWORD_SUCCESS, NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST, ALL_USERS_SUCCESS, ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST, DELETE_USER_SUCCESS, DELETE_USER_FAIL,\n    LOGOUT_SUCCESS, LOGOUT_FAIL,\n    CLEAR_ERRORS,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAIL\n} from '../constants/userConstants'\nimport { CART_IMPORT } from '../constants/cartConstants'\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOGIN_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n        dispatch({\n            type: CART_IMPORT,\n            payload: JSON.parse(localStorage.getItem(data.user._id))\n        })\n        localStorage.setItem('userLogin', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Register user\nexport const register = (name, email, password, avatar) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/register', { name, email, password, avatar }, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('/api/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Update profile\nexport const updateProfile = (name, email, avatar) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/me/update', { name, email, avatar }, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Update password\nexport const updatePassword = (oldPassword, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/password/update', { oldPassword, password }, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Forgot password\n// export const forgotPassword = (email) => async (dispatch) => {\n//     try {\n//       dispatch({ type: FORGOT_PASSWORD_REQUEST });\n  \n//       const config = { headers: { \"Content-Type\": \"application/json\" } };\n  \n//       const { data } = await axios.post(`/api/v2/password/forgot`, email, config);\n  \n//       dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: data.message });\n//     } catch (error) {\n//       dispatch({\n//         type: FORGOT_PASSWORD_FAIL,\n//         payload: error.response.data.message,\n//       });\n//     }\n//   };\n  \n\n// Reset password\n// export const resetPassword = (token, passwords) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: NEW_PASSWORD_REQUEST })\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             }\n//         }\n\n//         const { data } = await axios.put(`/api/password/reset/${token}`, passwords, config)\n\n//         dispatch({\n//             type: NEW_PASSWORD_SUCCESS,\n//             payload: data.success\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: NEW_PASSWORD_FAIL,\n//             payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n//         })\n//     }\n// }\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n      dispatch({ type: FORGOT_PASSWORD_REQUEST });\n  \n      const config = { headers: { \"Content-Type\": \"application/json\" } };\n  \n      const { data } = await axios.post(`/api/password/forgot`, email, config);\n  \n      dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: data.message });\n    } catch (error) {\n      dispatch({\n        type: FORGOT_PASSWORD_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  \n  // Reset Password\n  export const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n      dispatch({ type: RESET_PASSWORD_REQUEST });\n  \n      const config = { headers: { \"Content-Type\": \"application/json\" } };\n  \n      const { data } = await axios.put(\n        `/api/password/reset/${token}`,\n        passwords,\n        config\n      );\n  \n      dispatch({ type: RESET_PASSWORD_SUCCESS, payload: data.success });\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get('/api/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n        localStorage.removeItem('userLogin')\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Get all users\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('/api/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Update user - ADMIN\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Get user details - ADMIN\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n\n        const { data } = await axios.get(`/api/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n// Delete user - ADMIN\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`/api/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\MenuProfile.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\product\\review\\ListReviews.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\layouts\\Search.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\giadungshop\\frontend\\src\\components\\user\\ResetPassword.js",["736","737","738","739"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layouts/MetaData'\r\nimport Loader from '../layouts/Loader'\r\nimport Banner from '../../assets/banner.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { forgotPassword, clearErrors, resetPassword } from '../../actions/userActions'\r\n\r\nconst ResetPassword = ({history, match}) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword]=useState('')\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword)\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message)\r\n            history.push(\"/login\")\r\n        }\r\n\r\n    }, [dispatch, alert, error, message])\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Forgot Password'} />\r\n            <section className=\"account\">\r\n                <div className=\"container\">\r\n                            {\r\n                                loading ? (\r\n                                    <div style={{ marginTop: '25%' }}>\r\n                                        <Loader />\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"account-form\">\r\n                                        <div className=\"form-header\">\r\n                                            <div className=\"login\">\r\n                                                <span>Forgot Password</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <form onSubmit={submitHandler}>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email_field\">Mật khẩu mới</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    id=\"password_field\"\r\n                                                    className=\"form-control\"\r\n                                                    value={password}\r\n                                                    onChange={(e) => setPassword(e.target.value)}\r\n                                                />\r\n\r\n                                                <label htmlFor=\"email_field\">Xác nhận lại mật khẩu</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    id=\"password_field\"\r\n                                                    className=\"form-control\"\r\n                                                    value={confirmPassword}\r\n                                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <button\r\n                                                id=\"forgot_password_button\"\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-login\"\r\n                                                disabled={loading ? true : false} >\r\n                                                Đổi mật khẩu\r\n                                            </button>\r\n                                        </form>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                    </div>\r\n            </section>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\index.js",[],["740","741"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\store.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\cartReducers.js",["742"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\orderReducers.js",["743","744","745"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\categoryReducers.js",["746","747","748"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\brandReducers.js",["749","750","751"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\reducers\\receiptReducers.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Gallery.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Contact.js",["752","753"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Home.js",["754","755","756","757"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFeaturedProducts, getHotProducts, getLatestProducts } from '../actions/productActions'\nimport Product from './product/Product'\nimport Loader from './layouts/Loader'\nimport { useAlert } from 'react-alert'\nimport { Link } from 'react-router-dom'\nimport Banner from '../assets/banner.png'\nimport Panasonic from '../assets/logo-panasonic.jpg'\nimport Sony from '../assets/logo-sony.png'\nimport Hitachi from '../assets/hitachi.jpeg'\nimport Toshiba from '../assets/toshiba.png'\nimport Samsung from '../assets/samsung.jpg'\nimport Sunhouse from '../assets/sunhouse.jpg'\nimport MetaData from './layouts/MetaData'\nimport Services from './layouts/Services'\nimport Clients from './layouts/Clients'\nimport Carousel from 'react-material-ui-carousel'\nimport picture1 from '../assets/picture1.jpg'\nimport picture2 from '../assets/picture2.jpg'\nimport picture3 from '../assets/picture3.jpg'\nimport './Home.css'\nconst Home = ({ history }) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const { loading: loadingF, featuredProducts, error: errorF } = useSelector(state => state.featuredProducts)\n    const { loading: loadingH, hotProducts, error: errorH } = useSelector(state => state.hotProducts)\n    const { loading: loadingL, latestProducts, error: errorL } = useSelector(state => state.latestProducts)\n\n    useEffect(() => {\n        if (errorH) {\n            return alert.error(errorH)\n        }\n        dispatch(getHotProducts())\n        if (errorF) {\n            return alert.error(errorF)\n        }\n        dispatch(getFeaturedProducts())\n        if (errorL) {\n            return alert.error(errorF)\n        }\n        dispatch(getLatestProducts())\n\n    }, [dispatch, alert, errorF, errorL, errorH])\n\n    return (\n        <Fragment>\n            <MetaData title={'Mua tại'} />\n            {/* banner */}\n            <div className=\"container\" style={{ height: '320px', marginTop: '60px'}}>\n                <Carousel>\n                    <img src={picture1} className=\"bgImg\" />\n                    <img src={picture2} className=\"bgImg\" />\n                    <img src={picture3} className=\"bgImg\" />\n\n                </Carousel>\n            </div>\n            {/* categories collection */}\n            <div className=\"categories\">\n                <h2 class=\"title\">Nhà phân phối của các thương hiệu lớn</h2>\n                <div className=\"small-container\" style={{ height: '350px'}}>\n                    <div className=\"row\" >\n                        <div className=\"col-4 category\" >\n                            <Link to=\"/collections/brand/Panasonic\" className=\"category-wrap\">\n                                <img src={Panasonic} className=\"category-img\" alt=\"Panasonic\" />\n                                <div className=\"category-info\">\n                                    <h4>Panasonic</h4>\n                                    <div className=\"category-links\">\n                                        <Link to=\"/collections/brand/Panasonic\" title=\"More Details\"><i className=\"bx bx-search\" /></Link>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-4 category\">\n                            <Link to=\"/collections/brand/Sony\" className=\"category-wrap\">\n                                <img src={Sony} className=\"category-img\" alt=\"Sony\" />\n                                <div className=\"category-info\">\n                                    <h4>Sony</h4>\n                                    <div className=\"category-links\">\n                                        <Link to=\"/collections/brand/Sony\" title=\"More Details\"><i className=\"bx bx-search\" /></Link>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-4 category\">\n                            <Link to=\"/collections/brand/Hitachi\" className=\"category-wrap\">\n                                <img src={Hitachi} className=\"category-img\" alt=\"Hitachi\" />\n                                <div className=\"category-info\">\n                                    <h4>Hitachi</h4>\n                                    <div className=\"category-links\">\n                                        <Link to=\"/collections/brand/Hitachi\" title=\"More Details\"><i className=\"bx bx-search\" /></Link>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-4 category\">\n                            <Link to=\"/collections/brand/Toshiba\" className=\"category-wrap\">\n                                <img src={Toshiba} className=\"category-img\" alt=\"Toshiba\" />\n                                <div className=\"category-info\">\n                                    <h4>Toshiba</h4>\n                                    <div className=\"category-links\">\n                                        <Link to=\"/collections/brand/Toshiaba\" title=\"More Details\"><i className=\"bx bx-search\" /></Link>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-4 category\">\n                            <Link to=\"/collections/brand/Samsung\" className=\"category-wrap\">\n                                <img src={Samsung} className=\"category-img\" alt=\"Samsung\" />\n                                <div className=\"category-info\">\n                                    <h4>Samsung</h4>\n                                    <div className=\"category-links\">\n                                        <Link to=\"/collections/brand/Samsung\" title=\"More Details\"><i className=\"bx bx-search\" /></Link>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"col-4 category\">\n                            <Link to=\"/collections/brand/Sunhouse\" className=\"category-wrap\">\n                                <img src={Sunhouse} className=\"category-img\" alt=\"Sunhouse\" />\n                                <div className=\"category-info\">\n                                    <h4>Sunhouse</h4>\n                                    <div className=\"category-links\">\n                                        <Link to=\"/collections/brand/Sunhouse\" title=\"More Details\"><i className=\"bx bx-search\" /></Link>\n                                    </div>\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* hot collection */}\n            <div className=\"hot\">\n                <div className='container'>\n                    <div className=\"hot-title\">\n                        <h2>NỔI BẬT</h2>\n                        <p>cÁC SẢN PHẨM NỔI BẬT</p>\n                    </div>\n                    {\n                        loadingH ? <Loader /> : (\n                            <div className=\"row\">\n                                {\n                                    hotProducts && hotProducts.map(product => (\n                                        <Product product={product} col={3} key={product._id} history={history} />\n                                    ))\n                                }\n                            </div>\n                        )\n                    }\n\n                </div>\n            </div>\n            {/* featured collection */}\n            <section className=\"featured\">\n                <div className=\"container\">\n                    <div className=\"featured-title\">\n                        <h2>Đặc sắc</h2>\n                        <p>Sản phẩm CÓ RATINGS CAO</p>\n                    </div>\n                    {\n                        loadingF ? <Loader /> : (\n                            <div className=\"row\">\n                                {\n                                    featuredProducts && featuredProducts.map(product => (\n                                        <Product product={product} col={3} key={product._id} history={history} />\n                                    ))\n                                }\n                            </div>\n                        )\n                    }\n\n                </div>\n            </section>\n            {/* latest collection */}\n            <section className=\"latest\">\n                <div className=\"container\">\n                    <div className=\"latest-title\">\n                        <h2>Mới</h2>\n                        <p>Sản phẩm mới</p>\n                    </div>\n                    {\n                        loadingL ? <Loader /> : (\n                            <div className=\"row\">\n                                {\n                                    latestProducts && latestProducts.map(product => (\n                                        <Product product={product} col={3} key={product._id} history={history} />\n                                    ))\n                                }\n                            </div>\n                        )\n                    }\n\n                </div>\n            </section>\n\n            {/* services */}\n            <Services />\n\n            {/* clients */}\n            <Clients />\n        </Fragment>\n    )\n}\n\nexport default Home\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\Shop.js",["758","759","760","761"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from './layouts/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from '../actions/productActions'\nimport Product from './product/Product'\nimport Loader from './layouts/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from \"react-js-pagination\"\nimport { getBrands } from '../actions/brandActions'\nimport { getCategories } from '../actions/categoryActions'\n\nconst Shop = ({ match, history }) => {\n\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const [currentPage, setCurrentPage] = useState(1)\n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [rating, setRating] = useState(0)\n    const { brands, loading: loadingBrand, error: errorBrand } = useSelector(state => state.brands)\n    const { categories, loading: loadingCategories, error: errorCategories } = useSelector(state => state.categories)\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n        dispatch(getProducts(keyword, currentPage, category, brand))\n\n        if (errorBrand) {\n            return alert.error(errorBrand)\n        }\n        dispatch(getBrands())\n        if (errorCategories) {\n            return alert.error(errorCategories)\n        }\n        dispatch(getCategories())\n    }, [dispatch, alert, error, keyword, currentPage, category, brand, errorBrand, errorCategories])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount\n    if (filteredProductsCount <= productsCount && currentPage === 1) {\n        count = filteredProductsCount\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Shop'} />\n            {/* shop */}\n            <section className=\"shop\">\n                <div className=\"container\">\n                    <div className=\"shop-wrap\">\n                        <div className=\"shop-title\">\n                            <h2>Mua hàng</h2>\n                            <p>Sản phẩm gia dụng</p>\n                            <span>Tổng số: {filteredProductsCount} sản phẩm</span>\n                        </div>\n                        {/* <div className=\"sort\">\n                            <select >\n                                <option value=\"default\">Default</option>\n                                <option value=\"prices-asc\">Prices asc</option>\n                                <option value=\"prices-desc\">Prices desc</option>\n                                <option value=\"name-a-z\">Name A - Z</option>\n                                <option value=\"name-z-a\">Name Z - A</option>\n                            </select>\n\n                        </div> */}\n                    </div>\n\n                    <div className=\"row\">\n                        <Fragment>\n                            <div className=\"col-3 filter\">\n                                <h3>Loại gia dụng:</h3>\n                                <ul>\n                                    {categories && categories.map(category => (\n                                        <li\n                                            style={{\n                                                cursor: 'pointer',\n                                                listStyleType: 'none'\n                                            }}\n                                            key={category._id}\n                                            onClick={() => setCategory(category.name)}>\n                                            {category.name}\n                                        </li>\n                                    ))}\n                                    <li\n                                        style={{\n                                            cursor: 'pointer',\n                                            listStyleType: 'none'\n                                        }}\n                                        onClick={() => setCategory('')}>Clear</li>\n                                </ul>\n                                <hr className=\"my-5\" />\n                                <h3>Thương hiệu:</h3>\n                                <ul>\n                                    {brands && brands.map(brand => (\n                                        <li\n                                            style={{\n                                                cursor: 'pointer',\n                                                listStyleType: 'none'\n                                            }}\n                                            key={brand._id}\n                                            onClick={() => setBrand(brand.name)}>\n                                            {brand.name}\n                                        </li>\n                                    ))}\n                                    <li\n                                        style={{\n                                            cursor: 'pointer',\n                                            listStyleType: 'none'\n                                        }}\n                                        onClick={() => setBrand('')}>Clear</li>\n                                </ul>\n                            </div>\n                        </Fragment>\n                        {\n                            loading ? <Loader /> : (\n                                <Fragment>\n                                    <div className=\"col-9\">\n\n                                        {\n                                            brand && category ? <h4>Tags: {brand}, {category}</h4>\n                                                : brand ? <h4>Tags: {brand}</h4> : category ? <h4>Tags: {category}</h4> : null\n                                        }\n                                        <div className=\"row\">\n                                            {\n                                                filteredProductsCount === 0 ? (\n                                                    <div className=\"col-9\">\n                                                        <h3 className=\"empty\">Sản phẩm trống</h3>\n                                                    </div>\n                                                ) : (\n                                                    <>\n                                                        {\n                                                            products && products.map(product => (\n                                                                <Product product={product} col={4} key={product._id} history={history} />\n                                                            ))\n                                                        }\n                                                    </>\n                                                )\n                                            }\n\n                                        </div>\n                                        {\n                                            resPerPage <= count && (\n\n                                                <div className=\"product-pagination\">\n                                                    <Pagination\n                                                        activePage={currentPage}\n                                                        itemsCountPerPage={resPerPage}\n                                                        totalItemsCount={filteredProductsCount}\n                                                        onChange={setCurrentPageNo}\n                                                        nextPageText={'Next'}\n                                                        prevPageText={'Prev'}\n                                                        firstPageText={'First'}\n                                                        lastPageText={'Last'}\n                                                        itemClass=\"page-item\"\n                                                        linkClass=\"page-link\"\n                                                    />\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n\n                                </Fragment>\n\n                            )\n                        }\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default Shop\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Header.js",["762","763","764"],"import React, { Fragment, useEffect } from 'react'\nimport Search from './Search'\nimport { Route, Link, withRouter } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../../actions/userActions'\nimport { CART_RESET } from '../../constants/cartConstants'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport './Header.css'\nconst Header = ({ location }) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n    const { userLogin } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    console.log(userLogin)\n    const logoutHandler = () => {\n        dispatch(logout())\n        dispatch({ type: CART_RESET })\n        alert.success('Logged out successfully.')\n    }\n\n    useEffect(() => {\n\n        dispatch(getBrands())\n        dispatch(getCategories())\n\n    }, [dispatch, alert])\n\n    return location.pathname.split('/')[1] === 'admin' ? (\n        <>\n            <header id=\"admin-header\" className=\"bg-white shadow\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-2\">\n                        <Link to='/admin/dashboard' className=\"sidebar-brand d-flex align-items-center justify-content-center\">\n                            \n                            <div className=\"sidebar-brand-text mx-3\">\n                                <span>Trang Admin</span>\n                            </div>\n                        </Link>\n                    </div>\n                    <div className=\"col-12 col-md-10\">\n                        <nav className=\"navbar navbar-expand\">\n\n\n                            {/* Topbar Navbar */}\n                            <ul className=\"navbar-nav ml-auto\">\n\n                                {/* Nav Item - User Information */}\n                                <li className=\"nav-item dropdown no-arrow\">\n                                    <span className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">{userLogin && userLogin.name}</span>\n                                        <img className=\"img-profile rounded-circle\" src={userLogin.avatar && userLogin.avatar.url}\n                                            alt={userLogin && userLogin.name} />\n                                    </span>\n                                    {/* Dropdown - User Information */}\n                                    <div className=\"dropdown-menu shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                                        <Link className=\"dropdown-item\" to='/'>\n                                            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Cửa hàng\n                                        </Link>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Cài đặt\n                                        </a>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Activity Log\n                                        </a>\n                                        <div className=\"dropdown-divider\" />\n                                        <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                                            <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\n                                            Đăng xuất\n                                        </a>\n                                    </div>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n\n            </header>\n\n        </>\n    ) : (\n\n        <Fragment>\n\n            <header>\n                {/* mobile menu */}\n                <div className=\"mobile-menu bg-gray\">\n                    <Link to=\"/\" className=\"mb-logo\">GiaDungShop</Link>\n                    <span className=\"mb-menu-toggle\" id=\"mb-menu-toggle\">\n                        <i className=\"bx bx-menu\" />\n                    </span>\n                </div>\n                {/* end mobile menu */}\n                {/* main header */}\n                <div className=\"header-wrapper\" id=\"header-wrapper\">\n                    <span className=\"mb-menu-toggle mb-menu-close\" id=\"mb-menu-close\">\n                        <i className=\"bx bx-x\" />\n                    </span>\n                    {/* top header */}\n                    \n                    {/* end top header */}\n                    {/* mid header */}\n                    \n                    {/* end mid header */}\n                    {/* bottom header */}\n                    <div className=\"bg-gray\"style={{ paddingTop: '30px'}}>\n                        <div className=\"bottom-header container\">\n                            <ul className=\"main-menu\">\n                                <li><Link to=\"/\">Trang chủ</Link></li>\n                                {/* mega menu */}\n                                <li className=\"mega-dropdown\">\n                                    <Link to=\"/shop\">Mua hàng<i className=\"bx bxs-chevron-down\" /></Link>\n                                    <div className=\"mega-content\">\n                                        <div className=\"row\">\n                                            <div className=\"col-5\">\n                                                <div className=\"box\">\n                                                    <h3>Loại sản phẩm</h3>\n                                                    <ul>\n                                                        {\n                                                            categories && categories.map(category => (\n                                                                <li><Link to={`/collections/category/${category.name}`}>{category.name}</Link></li>\n                                                            ))\n                                                        }\n\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-5\">\n                                                <div className=\"box\">\n                                                    <h3>Thương hiệu</h3>\n                                                    <ul>\n                                                        {\n                                                            brands && brands.map(brand => (\n                                                                <li><Link to={`/collections/brand/${brand.name}`}>{brand.name}</Link></li>\n                                                            ))\n                                                        }\n                                                    </ul>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </li>\n                                {/* end mega menu */}\n                                <li><Link to=\"/gallery\">Chính sách</Link></li>\n                                <li><Link to=\"/contact\">Liên hệ</Link></li>\n                                <li><Link to=\"/about\">About</Link></li>\n\n                                <ul className=\"user-menu\">\n                                <li className=\"dropdown\">\n\n                                    {\n                                        userLogin ? (\n                                            <>\n                                                <Link to=\"/profile\">\n                                                    <figure className=\"avatar\">\n                                                        <img\n                                                            src={userLogin.avatar && userLogin.avatar.url}\n                                                            alt={userLogin && userLogin.name}\n                                                            className=\"rounded-circle\"\n                                                        />\n                                                    </figure>\n                                                    <span>{userLogin && userLogin.name}</span>\n                                                </Link>\n                                                <ul className=\"dropdown-content\">\n                                                    {userLogin && userLogin.role === 'admin' && (\n                                                        <li><Link to=\"/admin/dashboard\">Dashboard</Link></li>\n                                                    )}\n                                                    <li><Link to=\"/profile\">Profile</Link></li>\n                                                    <li><Link to=\"/profile/orders\">Order</Link></li>\n                                                    <li><Link to=\"/\" onClick={logoutHandler}>Logout</Link></li>\n                                                </ul>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <Link to=\"#\"><i className=\"bx bx-user-circle\" /></Link>\n                                                <ul className=\"dropdown-content\">\n                                                    <li><Link to='/login'>Login</Link></li>\n                                                    <li><Link to=\"/register\">Register</Link></li>\n                                                </ul>\n                                            </>\n                                        )\n                                    }\n\n                                </li>\n                                <li className=\"header-cart\">\n                                    <Link to=\"/cart\">\n                                        <i className=\"bx bx-cart\" />\n                                        {\n                                            cartItems ? <span>{cartItems.length}</span> : <span>0</span>\n                                        }\n\n                                    </Link>\n                                </li>\n                            </ul>\n\n\n                            </ul>\n                        </div>\n                        <div style={{marginLeft: '500px', paddingTop: '20px', paddingBottom: '30px'}}>\n                        <Route render={({ history }) => <Search history={history} />} />\n                        </div>\n                    </div>\n                    {/* end bottom header */}\n                </div>\n                {/* end main header */}\n            </header >\n        </Fragment >\n\n    )\n}\n\nexport default withRouter(Header)\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\Collections.js",["765","766","767"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\Login.js",["768"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layouts/Loader'\nimport MetaData from '../layouts/MetaData'\nimport Banner from '../../assets/banner.png'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\n\nconst Login = ({ history, location }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            alert.success('Login successfully!')\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, redirect, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n                    <div className=\"account\">\n                        <div className=\"container\">\n                                    <div className=\"account-form\">\n                                        <div className=\"form-header\">\n                                            <div className=\"login\">\n                                                <span>Đăng nhập</span>\n                                            </div>\n                                            <span><Link to=\"/register\">Đăng ký</Link></span>\n                                        </div>\n                                        <form onSubmit={submitHandler}>\n                                            <input\n                                                type=\"email\"\n                                                id=\"email_field\"\n                                                className=\"form-control\"\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                                placeholder=\"Email\" />\n                                            <input\n                                                type=\"password\"\n                                                id=\"password_field\"\n                                                className=\"form-control\"\n                                                value={password}\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                placeholder=\"Password\" />\n                                            <Link to=\"/password/forgot\"></Link>\n                                            <p>Bạn chưa có tài khoản. Hãy Đăng ký ngay.</p>\n                                            <button\n                                                id=\"login_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-login\">\n                                                Đăng nhập\n                                            </button>\n                                        </form>\n                                    </div>\n                                </div>\n                    </div>\n                </Fragment >\n            )\n            }\n        </Fragment >\n    )\n}\n\nexport default Login\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\UpdatePassword.js",["769"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport MenuProfile from './MenuProfile'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\nimport { logout } from '../../actions/userActions'\nimport { CART_RESET } from '../../constants/cartConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/profile')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updatePassword(oldPassword, password))\n        dispatch(logout())\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"container\">\n                <div class=\"row\">\n                    <div className=\"col-2\">\n                        <MenuProfile />\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"profile\">\n                            <div className=\"profile-header\">\n                                <h3>Thay đổi mật khẩu</h3>\n                            </div>\n                            <div className=\"user-info\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label for=\"old_password_field\">Mật khẩu cũ</label>\n                                        <input\n                                            type=\"password\"\n                                            id=\"old_password_field\"\n                                            className=\"form-control\"\n                                            value={oldPassword}\n                                            onChange={(e) => setOldPassword(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label for=\"new_password_field\">Mật khẩu mới</label>\n                                        <input\n                                            type=\"password\"\n                                            id=\"new_password_field\"\n                                            className=\"form-control\"\n                                            value={password}\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn btn-update btn-block\" disabled={loading ? true : false} >Thay đổi</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\Register.js",["770"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layouts/Loader'\nimport MetaData from '../layouts/MetaData'\nimport Banner from '../../assets/banner.png'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\nimport axios from 'axios'\n\nconst Register = ({ history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        dispatch(register(name, email, password, avatar))\n    }\n\n    const onChangeAvatar = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setAvatar(res.data)\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    const deleteImageHandler = async () => {\n        setAvatarPreview('/images/default_avatar.jpg')\n        setAvatar('')\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Register'} />\n                    <div className=\"account\">\n                        <div className=\"container\">\n                                    <div className=\"account-form\">\n                                        <div className=\"form-header\">\n                                            <span><Link to=\"/login\">Đăng nhập</Link></span>\n                                            <div className=\"register\">\n                                                <span>Đăng ký</span>\n                                            </div>\n                                        </div>\n                                        <form onSubmit={submitHandler}>\n\n                                            <label htmlFor=\"name_field\">Name</label>\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                name='name'\n                                                value={name}\n                                                onChange={(e) => setName(e.target.value)}\n                                                placeholder=\"Name\" />\n\n                                            <label htmlFor=\"email_field\">Email</label>\n                                            <input\n                                                type=\"email\"\n                                                id=\"email_field\"\n                                                className=\"form-control\"\n                                                name='email'\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                                placeholder=\"Email\" />\n\n                                            <label htmlFor=\"password_field\">Password</label>\n                                            <input\n                                                type=\"password\"\n                                                id=\"password_field\"\n                                                className=\"form-control\"\n                                                name='password'\n                                                value={password}\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                placeholder=\"Password\" />\n\n                                            <div className='form-group'>\n                                                <div className='avatar-upload align-items-center'>\n                                                    <div>\n                                                        <figure className='avatar mr-3 item-rtl'>\n                                                            <img\n                                                                src={avatarPreview}\n                                                                className='rounded-circle'\n                                                                alt='Avatar Preview' />\n                                                            <span onClick={deleteImageHandler}>X</span>\n                                                        </figure>\n                                                    </div>\n                                                    <div className='custom-file'>\n                                                        <input\n                                                            type='file'\n                                                            name='avatar'\n                                                            className='custom-file-input'\n                                                            id='customFile'\n                                                            accept=\"images/*\"\n                                                            onChange={onChangeAvatar}\n                                                        />\n                                                        <label className='custom-file-label' htmlFor='customFile'>\n                                                            Chọn ảnh đại diện\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <button\n                                                id=\"register_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-login\"\n                                                disabled={loading ? true : false}>\n                                                Đăng ký\n                                            </button>\n\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                </Fragment >\n            )\n            }\n        </Fragment >\n    )\n}\n\nexport default Register\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\ForgotPassword.js",["771","772"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\ResetPassword.js",["773","774","775","776"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\Cart.js",["777"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport MetaData from '../layouts/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateItemToCart, removeItemFromCart } from '../../actions/cartActions'\nimport swal from 'sweetalert'\nimport NumberFormat from 'react-number-format'\n\nconst Cart = ({ history }) => {\n    const dispatch = useDispatch()\n    const { userLogin } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n    const uid = userLogin ? userLogin._id : null\n\n    const increaseQty = (id, quantity, size, stock) => {\n        const newQty = quantity + 1;\n        if (newQty > stock) return\n        dispatch(updateItemToCart(id, newQty, size, uid))\n    }\n\n    const decreaseQty = (id, size, quantity) => {\n        const newQty = quantity - 1;\n        if (newQty <= 0) return\n        dispatch(updateItemToCart(id, newQty, size, uid))\n    }\n\n    const removeCartItemHandler = (id, size) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(removeItemFromCart(id, size, uid))\n                    swal(\"Poof! Your cart items has been deleted!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Haha Nope!\")\n                }\n            })\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=/order/shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'My Cart'} />\n            {\n                \n                    <>\n                        {\n                            cartItems ? (\n                                <>\n                                    {\n                                        cartItems.length === 0 ? <h3 className=\"container\" style={{ margin: \"50px auto 400px\" }}>Cart is empty</h3> : (\n                                            <Fragment>\n                                                <div className=\"container cart\" style={{ margin: \"50px auto 200px\" }}>\n                                                    <h3>Giỏ hàng của tôi</h3>\n                                                    <div class=\"row\">\n                                                        <div className=\"col-9\">\n                                                            <table>\n                                                                <tbody>\n                                                                    <tr className=\"table-header\">\n                                                                        <th><b>Sản phẩm</b></th>\n                                                                        <th><b>Size</b></th>\n                                                                        <th style={{ paddingLeft: \"20px\" }}><b>Số lượng</b></th>\n                                                                        <th style={{ textAlign: \"right\" }}><b>Tổng</b></th>\n                                                                    </tr>\n                                                                    {\n                                                                        cartItems.map(item => (\n                                                                            <tr key={item.product}>\n                                                                                <td>\n                                                                                    <div className=\"cart-info\">\n                                                                                        <Link to={`/product/${item.product}`}>\n                                                                                            <img src={item.image} alt=\"\" />\n                                                                                        </Link>\n                                                                                        <div style={{ maxWidth: \"240px\" }}>\n                                                                                            <Link to={`/product/${item.product}`}>\n                                                                                                <p className=\"cart-item-name\"><b>{item.name}</b></p>\n                                                                                            </Link>\n                                                                                            <p>\n                                                                                                <NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} prefix={'đ '} />\n                                                                                            </p>\n                                                                                            <span onClick={() => removeCartItemHandler(item.product, item.size)} >Xóa</span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </td>\n                                                                                <td>\n                                                                                    {item.size}\n                                                                                </td>\n                                                                                <td style={{ textAlign: \"center\" }}>\n                                                                                    <div className=\"product-quantity-wrapper\">\n                                                                                        <span className=\"product-quantity-btn\" onClick={() => decreaseQty(item.product, item.size, item.quantity)}>\n                                                                                            <i className=\"bx bx-minus\"></i>\n                                                                                        </span>\n                                                                                        <input type=\"number\" className=\"product-quantity\" value={item.quantity} readOnly />\n                                                                                        <span className=\"product-quantity-btn\" onClick={() => increaseQty(item.product, item.quantity, item.size, item.stock)}>\n                                                                                            <i className=\"bx bx-plus\"></i>\n                                                                                        </span>\n\n                                                                                    </div>\n                                                                                </td>\n                                                                                <td style={{ textAlign: \"right\" }}>\n                                                                                    <NumberFormat value={item.price * item.quantity} displayType={'text'} thousandSeparator={true} prefix={'đ '} />\n                                                                                </td>\n                                                                            </tr>\n                                                                        ))\n                                                                    }\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                        <div className=\"col-3 checkout-wrap\">\n\n                                                            <div className=\"total-price\">\n                                                                <table>\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td><h5>Tổng số: </h5></td>\n                                                                            <td><h5>{cartItems.length}</h5></td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <td><b>Tổng tiền</b></td>\n                                                                            <td>\n                                                                                <b>\n                                                                                    <NumberFormat value={cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0)} displayType={'text'} thousandSeparator={true} prefix={'đ '} />\n                                                                                </b>\n                                                                            </td>\n                                                                        </tr>\n                                                                    </tbody>\n                                                                </table>\n                                                                <button className=\"btn btn-checkout btn-block\" onClick={checkoutHandler}>Tiến hành kiểm tra</button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n\n                                            </Fragment>\n                                        )\n                                    }\n                                </>\n                            ) : (\n                                <h3 className=\"container\" style={{ margin: \"50px auto 400px\" }}>Giỏ hàng trống</h3>\n                            )\n                        }\n                    </>\n            }\n        </Fragment >\n    )\n}\n\nexport default Cart\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\PageNotFound.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\Payment.js",["778"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\NewProduct.js",["779"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\nimport axios from 'axios'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [brand, setBrand] = useState('')\n    const [images, setImages] = useState([])\n    const [image1, setImage1] = useState('')\n    const [image2, setImage2] = useState('')\n    const [image3, setImage3] = useState('')\n    const [image4, setImage4] = useState('')\n    const [imagesPreview1, setImagesPreview1] = useState('/images/no-image.png')\n    const [imagesPreview2, setImagesPreview2] = useState('/images/no-image.png')\n    const [imagesPreview3, setImagesPreview3] = useState('/images/no-image.png')\n    const [imagesPreview4, setImagesPreview4] = useState('/images/no-image.png')\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, success } = useSelector(state => state.newProduct)\n\n    useEffect(() => {\n        dispatch(getBrands())\n        dispatch(getCategories())\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully')\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (name === '') {\n            alert.error('Please enter a name!')\n            return\n        }\n        if (price === '') {\n            alert.error('Please enter the price greater than 0!')\n            return\n        }\n\n        if (description === '') {\n            alert.error('Please enter a description!')\n            return\n        }\n        if (images.length === 0) {\n            alert.error('Please add images!')\n            return\n        }\n\n        dispatch(newProduct(name, price, description, category, brand, images))\n    }\n\n    const onChange1 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage1(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview1(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange2 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage2(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview2(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange3 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage3(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview3(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const onChange4 = async e => {\n        const file = e.target.files[0]\n        if (!file) {\n            return alert.error('File not exist!')\n        }\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n            return alert.error('File format is incorrect!')\n        }\n        if (file.size > 1024 * 1024 * 5) {\n            return alert.error('File too large!')\n        }\n\n        let formData = new FormData()\n        formData.append('file', file)\n\n        const res = await axios.post('/api/upload', formData, {\n            headers: { 'content-type': 'multipart/form-data' }\n        })\n        setImages(oldArray => [...oldArray, res.data])\n        setImage4(res.data.public_id)\n\n        const reader = new FileReader()\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setImagesPreview4(reader.result)\n            }\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    const deleteImage1 = async () => {\n        setImagesPreview1('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image1))\n        setImage1('')\n\n    }\n    const deleteImage2 = async () => {\n        setImagesPreview2('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image2))\n        setImage2('')\n    }\n    const deleteImage3 = async () => {\n        setImagesPreview3('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image3))\n        setImage3('')\n    }\n    const deleteImage4 = async () => {\n        setImagesPreview4('/images/no-image.png')\n        setImages(images.filter(item => item.public_id !== image4))\n        setImage4('')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                <div >\n                    <Fragment>\n                        <div className=\"my-4\">\n                            <h3>Sản phẩm mới</h3>\n                        </div>\n                        <div className=\"wrapper\">\n                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Tên sản phẩm</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Giá</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Mô tả</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"6\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"category_field\">Loại</label>\n                                            <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                                {categories.map(category => (\n                                                    <option key={category._id} value={category._id} >{category.name}</option>\n                                                ))}\n\n                                            </select>\n                                            {category === '' && setCategory(categories[0]._id)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"brand_field\">Thương hiệu</label>\n                                            <select className=\"form-control\" id=\"brand_field\" value={brand} onChange={(e) => setBrand(e.target.value)}>\n                                                {brands.map(brand => (\n                                                    <option key={brand._id} value={brand._id} >{brand.name}</option>\n                                                ))}\n\n                                            </select>\n                                            {brand === '' && setBrand(brands[0]._id)}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button\n                                    id=\"create_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-update btn-block\">\n                                    Thêm mới\n                                </button>\n\n                            </form>\n                        </div>\n\n                    </Fragment>\n                </div>\n                <div >\n                    <div className=\"new-img\" >\n                        <div className=\"row\">\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview1} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange1}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage1}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview2} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange2}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage2}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview3} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange3}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage3}>X</span>\n                            </div>\n                            <div className=\"col-6 col-md-6 img-preview\">\n                                <img src={imagesPreview4} alt=\"\" />\n                                <input\n                                    type='file'\n                                    name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept='images/*'\n                                    onChange={onChange4}\n                                />\n                                <span className=\"delete-img\" onClick={deleteImage4}>X</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </div>\n            </div >\n\n        </Fragment >\n    )\n}\n\nexport default NewProduct\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\Dashboard.js",["780"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport NumberFormat from 'react-number-format'\nimport Sidebar from './Sidebar'\nimport { Bar } from \"react-chartjs-2\"\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getAdminProducts, getHotProductsByAdmin } from '../../actions/productActions'\nimport { allOrders } from '../../actions/orderActions'\nimport { allUsers } from '../../actions/userActions'\nimport { getBrands } from '../../actions/brandActions'\nimport { getCategories } from '../../actions/categoryActions'\nimport { allReceipts } from '../../actions/receiptAction'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n    const [dateFrom, setDateFrom] = useState('1-1-2022')\n    const [dateTo, setDateTo] = useState('9-9-2022')\n    const { products } = useSelector(state => state.products)\n    const { hotProductsByAdmin } = useSelector(state => state.hotProductsByAdmin)\n    const { users } = useSelector(state => state.allUsers)\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\n    const { brands } = useSelector(state => state.brands)\n    const { categories } = useSelector(state => state.categories)\n    const { receipts } = useSelector(state => state.allReceipts)\n    const { importReceiptItems } = useSelector(state => state.importReceipt)\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(getHotProductsByAdmin(dateFrom, dateTo))\n        dispatch(allOrders())\n        dispatch(allUsers())\n        dispatch(getBrands())\n        dispatch(getCategories())\n        dispatch(allReceipts())\n    }, [dispatch])\n    const names = hotProductsByAdmin && hotProductsByAdmin.map(product => product.name.slice(0, 20));\n    const solds = hotProductsByAdmin && hotProductsByAdmin.map(product => product.sold);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(getHotProductsByAdmin(dateFrom, dateTo))\n    }\n    return (\n        <Fragment>\n            <div className=\"row admin-dashboard\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\" style={{ paddingBottom: '40px'}}>\n                    <h4 className=\"my-4\">Dashboard</h4>\n\n                    {loading ? <Loader /> : (\n                        <Fragment>\n                            <MetaData title={'Admin Dashboard'} />\n\n                            <div className=\"row pr-4\">\n\n                                <Link to='/admin/products' className=\"col-xl-6 col-md-6 mb-4\" >\n                                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                                        Sản phẩm</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{products && products.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                   \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='#' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-success shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                                                        Tổng thu</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><NumberFormat value={totalAmount && totalAmount} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/users' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-warning shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                                                        Người dùng</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{users && users.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                   \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/orders' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-info shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Đơn hàng</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{orders && orders.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/brands' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-orange shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Thương hiệu</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{brands && brands.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                   \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/categories' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-purple shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Loại</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{categories && categories.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                   \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/receipts' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-purple shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Biên nhận</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{receipts && receipts.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                                <Link to='/admin/receipts/import' className=\"col-xl-6 col-md-6 mb-4\">\n                                    <div className=\"card border-left-purple shadow h-100 py-2\">\n                                        <div className=\"card-body\">\n                                            <div className=\"row no-gutters align-items-center\">\n                                                <div className=\"col mr-2\">\n                                                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                                                        Biên nhận nhập sản phẩm</div>\n                                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{importReceiptItems && importReceiptItems.length}</div>\n                                                </div>\n                                                <div className=\"col-auto\">\n                                                   \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <h4 className=\"my-4\">Top 10 Sản Phẩm Bán Chạy Nhất</h4>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div class=\"row my-4\">\n                                        <div className=\"col-2\">\n                                            <label htmlFor=\"name_field\">Date From</label>\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                value={dateFrom}\n                                                onChange={(e) => setDateFrom(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <label htmlFor=\"name_field\">Date To</label>\n\n                                        </div>\n                                        <div className=\"col-2\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"name_field\"\n                                                className=\"form-control\"\n                                                value={dateTo}\n                                                onChange={(e) => setDateTo(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <button\n                                                style={{ margin: '0' }}\n                                                id=\"create_button\"\n                                                type=\"submit\"\n                                                className=\"btn btn-update\"\n                                                onClick={submitHandler}>\n                                                Submit\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <Bar\n                                data={{\n                                    labels: names,\n                                    datasets: [\n                                        {\n                                            label: \"Sold\",\n                                            backgroundColor: [\n                                                \"#3e95cd\",\n                                                \"#8e5ea2\",\n                                                \"#3cba9f\",\n                                                \"#e8c3b9\",\n                                                \"#c45850\",\n                                                \"#FFCC99\",\n                                                \"#99CCCC\",\n                                                \"#FF99CC\",\n                                                \"#FF6600\",\n                                                \"#993399\",\n                                            ],\n                                            data: solds\n                                        }\n                                    ]\n                                }}\n                                options={{\n                                    legend: { display: false },\n                                    title: {\n                                        display: true,\n                                        text: \"Predicted world population (millions) in 2050\"\n                                    }\n                                }}\n                            />\n\n                        </Fragment>\n                    )}\n\n                </div>\n            </div>\n\n        </Fragment >\n    )\n}\n\nexport default Dashboard\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ProductReviews.js",["781"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateProduct.js",["782","783","784"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\OrdersList.js",["785"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateCategory.js",["786","787"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\BrandsList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\CategoriesList.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ProcessOrder.js",["788","789"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\NewBrand.js",["790"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\UpdateBrand.js",["791","792"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\NewCategory.js",["793"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ReceiptList.js",["794"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ReceiptDetails.js",["795","796","797","798","799","800"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ConfirmReceipt.js",["801"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport swal from 'sweetalert'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { createReceipt } from '../../actions/receiptAction'\nimport { RECEIPT_RESET } from '../../constants/receiptConstants'\n\nconst ConfirmReceipt = ({ history }) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { importReceiptItems, supplierInfo } = useSelector(state => state.importReceipt)\n\n    const totalImportPrice = importReceiptItems.reduce((acc, item) => acc + item.importPrice * item.quantity, 0)\n\n    const receipt = {\n        receiptItems: importReceiptItems,\n        totalImportPrice,\n        supplierInfo\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault()\n\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    try {\n\n                        dispatch(createReceipt(receipt))\n                        swal(\"Poof! Your imaginary file has been deleted!\", {\n                            icon: \"success\",\n                        })\n                        dispatch({ type: RECEIPT_RESET })\n                        history.push('/admin/receipts')\n\n                    } catch (error) {\n                        alert.error(error.response.data.message)\n                    }\n                } else {\n                    history.push('/admin/receipts/import')\n                }\n            })\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Confirm Order'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n\n                        <div class=\"row\" style={{ paddingTop: '60px' }}>\n                            <div className=\"col-8\">\n\n                                <h4 className=\"mb-3\" >Thông tin vận chuyển</h4>\n                                <p><b>Tên: </b> {supplierInfo.name}</p>\n                                <p><b>SĐT: </b> {supplierInfo.phone}</p>\n                                <p><b>Địa chỉ: </b> {supplierInfo.address}</p>\n                                <p><b>Quốc gia: </b> {supplierInfo.country}</p>\n                            </div>\n                            <div className=\"col-4\">\n                                <div id=\"order_summary\">\n                                    <h4>Tóm tắt Oder</h4>\n                                    <hr />\n                                    <p>Tổng:  <span className=\"order-summary-values\">{totalImportPrice}đ</span></p>\n\n                                    <button id=\"checkout_btn\" className=\"btn btn-block btn-order-summary\" onClick={submitHandler}>Thanh toán</button>\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                        <hr />\n                        <h4 className=\"mt-4\">Biên nhận nhập sản phẩm: </h4>\n\n                        {importReceiptItems.map(item => (\n                            <Fragment>\n                                <hr />\n                                <div className=\"cart-item\" key={item.product}>\n                                    <div className=\"row\">\n                                        <div className=\"col-4 col-lg-2\">\n                                            <img src={item.image} alt={item.name} height=\"80\" width=\"80\" />\n                                        </div>\n\n                                        <div className=\"col-6 col-lg-6\">\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            <p>Price: {item.price}</p>\n                                        </div>\n\n\n                                        <div className=\"col-2 col-lg-4 mt-4 mt-lg-0\">\n                                            <p>{item.quantity} x {item.importPrice}đ = <b>{(item.quantity * item.importPrice)}đ</b></p>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <hr />\n                            </Fragment>\n                        ))}\n\n                    </Fragment>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default ConfirmReceipt\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\orders\\OrderDetails.js",["802","803"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport MenuProfile from '../user/MenuProfile'\nimport NumberFormat from 'react-number-format'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateStatusOrder, undoStockProduct, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\nimport swal from 'sweetalert'\n\nconst OrderDetails = ({ match }) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n    const { userLogin } = useSelector(state => state.auth)\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus, paidAt, deliveredAt, receivedAt, createdAt } = order\n    const { error: errorUpdateOrder, isUpdated } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id))\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n    }, [dispatch, alert, isUpdated, error, match.params.id])\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}`\n    const isCancel = orderStatus && orderStatus === 'Processing' ? true : false\n    const isReceive = orderStatus && orderStatus === 'Delivering' ? true : false\n    const time = createdAt && String(createdAt).substring(0, 10)\n    const cancelOrder = () => {\n\n        for (let i = 0; i < orderItems.length; i++) {\n            let productId = orderItems[i].product\n            let stock = orderItems[i].quantity\n            dispatch(undoStockProduct(productId, stock))\n        }\n\n        let status = {\n            orderStatus: 'Cancelled'\n        }\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(updateStatusOrder(match.params.id, status))\n                    swal(\"Poof! Your order has been canceled!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Haha Nope!\")\n                }\n            })\n    }\n\n    const receivedOrder = () => {\n        let status = {\n            orderStatus: 'Received'\n        }\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dispatch(updateStatusOrder(match.params.id, status))\n                    swal(\"Poof! Your imaginary file has been deleted!\", {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal(\"Your imaginary file is safe!\")\n                }\n            })\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Order Details'} />\n            <div className=\"container\">\n                <div class=\"row\">\n                    <div className=\"col-2\">\n                        <MenuProfile />\n                    </div>\n                    <div className=\"col-10\">\n                        {\n                            loading ? (\n                                <>\n                                    <div style={{ paddingTop: '100px' }}></div>\n                                    <Loader />\n                                    <div style={{ paddingTop: '100px' }}></div>\n                                </>\n                            ) : (\n\n                                <Fragment>\n                                    <div className=\"my-orders\">\n                                        <div className=\"row\">\n                                            <div className=\"col-8\">\n                                                <h4 className=\"mb-4\">Order #{order._id}</h4>\n\n                                                <p><b>Tên: </b> {userLogin && userLogin.name}</p>\n                                                <p><b>SĐT: </b> {shippingInfo && shippingInfo.phone}</p>\n                                                <p><b>Địa chỉ: </b>{shippingDetails}</p>\n                                                <p><b>Số lượng:</b> <NumberFormat value={totalPrice} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></p>\n                                                <p><b>Thời gian:</b> {time}</p>\n\n                                                <h5 className=\"my-4\">Order Items:</h5>\n\n                                                <hr />\n                                                <div className=\"cart-item my-1\">\n                                                    {orderItems && orderItems.map(item => (\n                                                        <div key={item.product} className=\"row my-5\">\n                                                            <div className=\"col-4 col-lg-2\">\n                                                                <img src={item.image} alt={item.name} height=\"50\" width=\"50\" />\n                                                            </div>\n\n                                                            <div className=\"col-5 col-lg-5\">\n                                                                <Link to={`/product/${item.product}`}>\n                                                                    <p>{item.name}</p>\n                                                                </Link>\n                                                                <p>Size: {item.size}</p>\n                                                            </div>\n\n\n                                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                                <p><NumberFormat value={item.price} displayType={'text'} thousandSeparator={true} prefix={'đ '} /></p>\n                                                            </div>\n\n                                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                                <p>{item.quantity} Piece(s)</p>\n                                                            </div>\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <div id=\"order_summary\">\n                                                    <p>Phương thức thanh toán:\n                                                        <span className=\"order-summary-values\">{paymentInfo && paymentInfo.name}</span>\n                                                    </p>\n                                                    <p>Được giao:\n                                                        <span className={deliveredAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}>{deliveredAt ? `${String(deliveredAt).substring(0, 10)}` : \"Not Delivery\"}</span>\n                                                    </p>\n                                                    <p>Thanh toán tại:\n                                                        <span className={paidAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}><span>{paidAt ? `${String(paidAt).substring(0, 10)}` : \"Not Paid\"}</span></span>\n                                                    </p>\n                                                    <p>Đã nhận:\n                                                        <span className={receivedAt ? \"greenColor order-summary-values\" : \"redColor order-summary-values\"}>{receivedAt ? `${String(receivedAt).substring(0, 10)}` : \"Not Received\"}</span>\n                                                    </p>\n                                                    <p>Trạng thái đơn đặt hàng:\n                                                        <span\n                                                            className={\n                                                                order.orderStatus && String(order.orderStatus).includes('Delivering') ? \"blueColor order-summary-values\"\n                                                                    : order.orderStatus && String(order.orderStatus).includes('Received') ? \"greenColor order-summary-values\"\n                                                                        : order.orderStatus && String(order.orderStatus).includes('Cancelled') ? \"redColor order-summary-values\"\n                                                                            : \"yellowColor order-summary-values\"\n                                                            }>\n                                                            {orderStatus}\n                                                        </span>\n                                                    </p>\n                                                    <hr />\n                                                    <button className=\"btn btn-block btn-order-cancel\" onClick={cancelOrder} hidden={isCancel ? false : true}>Cancel Order</button>\n                                                    <button className=\"btn btn-block btn-order-receive\" onClick={receivedOrder} hidden={isReceive ? false : true}>Received Order</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Fragment>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default OrderDetails\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\ImportReceiptItems.js",["804","805","806","807"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\nimport swal from 'sweetalert'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateItem, removeItem, saveSupplierInfo } from '../../actions/receiptAction'\n\nconst ImportReceiptItems = ({ history }) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n    const { importReceiptItems, supplierInfo } = useSelector(state => state.importReceipt)\n\n    const [name, setName] = useState(supplierInfo.name)\n    const [address, setAddress] = useState(supplierInfo.address)\n    const [country, setCountry] = useState(supplierInfo.country)\n    const [phone, setPhone] = useState(supplierInfo.phone)\n\n    const increaseQty = (id, quantity, importPrice) => {\n        const newQty = quantity + 1;\n        dispatch(updateItem(id, newQty, importPrice))\n    }\n\n    const decreaseQty = (id, quantity, importPrice) => {\n        const newQty = quantity - 1;\n        if (newQty <= 0) return\n        dispatch(updateItem(id, newQty, importPrice))\n    }\n\n    const removeItemHandler = (id) => {\n        console.log(id);\n        dispatch(removeItem(id))\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveSupplierInfo({ name, address, phone, country }))\n        history.push('/admin/receipts/confirm')\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Admin - All Import Receipt Items'} />\n            <div className=\"row admin-products\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"users-list-header my-4\">\n                            <h3>Tổng biên nhận nhập sản phẩm (Tổng số: {importReceiptItems && importReceiptItems.length})</h3>\n                        </div>\n\n                        {\n                            importReceiptItems ? (\n                                <>\n                                    {\n                                        importReceiptItems.length === 0 ? null : (\n                                            <Fragment>\n                                                <div className=\"container cart\">\n\n                                                    <div class=\"row\">\n                                                        <div className=\"col-9\">\n                                                            <table>\n                                                                <tbody>\n                                                                    <tr className=\"table-header\">\n                                                                        <th><b>Sản phẩm</b></th>\n                                                                        <th><b>Stock</b></th>\n                                                                        <th style={{ paddingLeft: \"20px\" }}><b>Số lượng</b></th>\n                                                                        <th><b>Giá nhập hàng</b></th>\n                                                                        <th></th>\n                                                                    </tr>\n                                                                    {\n                                                                        importReceiptItems.map(item => (\n                                                                            <tr key={item.product}>\n                                                                                <td>\n                                                                                    <div className=\"cart-info\">\n                                                                                        <Link to={`/product/${item.product}`}>\n                                                                                            <img src={item.image} alt=\"\" />\n                                                                                        </Link>\n                                                                                        <div style={{ maxWidth: \"240px\" }}>\n                                                                                            <Link to={`/product/${item.product}`}>\n                                                                                                <p className=\"cart-item-name\"><b>{item.name}</b></p>\n                                                                                            </Link>\n                                                                                            <p>Giá: {item.price}đ</p>\n                                                                                            <span onClick={() => removeItemHandler(item.product)} >Xóa</span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </td>\n                                                                                <td>\n                                                                                    {item.stock}\n                                                                                </td>\n\n                                                                                <td style={{ textAlign: \"center\" }}>\n                                                                                    <div className=\"product-quantity-wrapper\">\n                                                                                        <span className=\"product-quantity-btn\" onClick={() => decreaseQty(item.product, item.quantity, item.importPrice)}>\n                                                                                            <i className=\"bx bx-minus\"></i>\n                                                                                        </span>\n                                                                                        <input type=\"number\" className=\"product-quantity\" value={item.quantity} readOnly />\n                                                                                        <span className=\"product-quantity-btn\" onClick={() => increaseQty(item.product, item.quantity, item.importPrice)}>\n                                                                                            <i className=\"bx bx-plus\"></i>\n                                                                                        </span>\n\n                                                                                    </div>\n                                                                                </td>\n                                                                                <td>\n                                                                                    <input\n                                                                                        type=\"number\"\n                                                                                        id=\"price_field\"\n                                                                                        className=\"form-control\"\n                                                                                        style={{ width: '25%' }}\n                                                                                        value={item.importPrice}\n                                                                                        onChange={(e) => dispatch(updateItem(item.product, item.quantity, e.target.value))}\n                                                                                    />\n                                                                                </td>\n                                                                            </tr>\n                                                                        ))\n                                                                    }\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                        <div className=\"col-3\">\n                                                            <h4>Nhà cung cấp</h4>\n                                                            <form className=\"\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Tên</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={name}\n                                                                        onChange={(e) => setName(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Địa chỉ</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={address}\n                                                                        onChange={(e) => setAddress(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">SĐT</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={phone}\n                                                                        onChange={(e) => setPhone(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group\">\n                                                                    <label htmlFor=\"name_field\">Quốc gia</label>\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        id=\"name_field\"\n                                                                        className=\"form-control\"\n                                                                        value={country}\n                                                                        onChange={(e) => setCountry(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                                <button\n                                                                    id=\"shipping_btn\"\n                                                                    type=\"submit\"\n                                                                    className=\"btn btn-block py-3\">\n                                                                    Tiếp tục\n                                                                </button>\n                                                            </form>\n\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n\n                                            </Fragment>\n                                        )\n                                    }\n                                </>\n                            ) : null\n                        }\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ImportReceiptItems\n","C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\orders\\MyListOrders.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\Product.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Loader.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\MetaData.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\user\\MenuProfile.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\receiptConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\brandConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\productActions.js",["808"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\receiptAction.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\categoryActions.js",["809","810","811","812","813","814"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\brandActions.js",["815","816","817","818","819","820"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\userActions.js",["821","822","823"],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\product\\review\\ListReviews.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Search.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Clients.js",[],"C:\\Users\\Admin\\Documents\\CHUNGKHOANNN\\new\\giadungshop\\frontend\\src\\components\\layouts\\Services.js",[],{"ruleId":"824","replacedBy":"825"},{"ruleId":"826","replacedBy":"827"},{"ruleId":"828","severity":1,"message":"829","line":11,"column":39,"nodeType":"830","messageId":"831","endLine":11,"endColumn":41},{"ruleId":"832","severity":1,"message":"833","line":15,"column":5,"nodeType":"834","messageId":"835","endLine":15,"endColumn":25},{"ruleId":"832","severity":1,"message":"836","line":16,"column":5,"nodeType":"834","messageId":"835","endLine":16,"endColumn":25},{"ruleId":"832","severity":1,"message":"837","line":17,"column":5,"nodeType":"834","messageId":"835","endLine":17,"endColumn":22},{"ruleId":"832","severity":1,"message":"838","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":28},{"ruleId":"832","severity":1,"message":"839","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":28},{"ruleId":"832","severity":1,"message":"840","line":28,"column":5,"nodeType":"834","messageId":"835","endLine":28,"endColumn":25},{"ruleId":"832","severity":1,"message":"841","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":31},{"ruleId":"832","severity":1,"message":"842","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":31},{"ruleId":"832","severity":1,"message":"843","line":28,"column":5,"nodeType":"834","messageId":"835","endLine":28,"endColumn":28},{"ruleId":"832","severity":1,"message":"844","line":8,"column":8,"nodeType":"834","messageId":"835","endLine":8,"endColumn":14},{"ruleId":"845","severity":1,"message":"846","line":52,"column":21,"nodeType":"847","endLine":52,"endColumn":61},{"ruleId":"845","severity":1,"message":"846","line":53,"column":21,"nodeType":"847","endLine":53,"endColumn":61},{"ruleId":"845","severity":1,"message":"846","line":54,"column":21,"nodeType":"847","endLine":54,"endColumn":61},{"ruleId":"832","severity":1,"message":"848","line":19,"column":12,"nodeType":"834","messageId":"835","endLine":19,"endColumn":18},{"ruleId":"832","severity":1,"message":"849","line":19,"column":20,"nodeType":"834","messageId":"835","endLine":19,"endColumn":29},{"ruleId":"832","severity":1,"message":"850","line":20,"column":30,"nodeType":"834","messageId":"835","endLine":20,"endColumn":42},{"ruleId":"832","severity":1,"message":"851","line":21,"column":34,"nodeType":"834","messageId":"835","endLine":21,"endColumn":51},{"ruleId":"852","severity":1,"message":"853","line":10,"column":21,"nodeType":"847","endLine":10,"endColumn":340},{"ruleId":"854","severity":1,"message":"855","line":33,"column":25,"nodeType":"847","endLine":33,"endColumn":111},{"ruleId":"856","severity":1,"message":"857","line":67,"column":41,"nodeType":"847","endLine":67,"endColumn":79},{"ruleId":"856","severity":1,"message":"857","line":71,"column":41,"nodeType":"847","endLine":71,"endColumn":79},{"ruleId":"856","severity":1,"message":"857","line":76,"column":41,"nodeType":"847","endLine":76,"endColumn":126},{"ruleId":"832","severity":1,"message":"844","line":6,"column":8,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"844","line":6,"column":8,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"858","line":3,"column":8,"nodeType":"834","messageId":"835","endLine":3,"endColumn":14},{"ruleId":"832","severity":1,"message":"848","line":16,"column":12,"nodeType":"834","messageId":"835","endLine":16,"endColumn":18},{"ruleId":"832","severity":1,"message":"849","line":16,"column":20,"nodeType":"834","messageId":"835","endLine":16,"endColumn":29},{"ruleId":"832","severity":1,"message":"844","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"859","line":6,"column":10,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"860","line":11,"column":10,"nodeType":"834","messageId":"835","endLine":11,"endColumn":20},{"ruleId":"832","severity":1,"message":"861","line":4,"column":10,"nodeType":"834","messageId":"835","endLine":4,"endColumn":18},{"ruleId":"832","severity":1,"message":"862","line":17,"column":13,"nodeType":"834","messageId":"835","endLine":17,"endColumn":22},{"ruleId":"832","severity":1,"message":"863","line":21,"column":52,"nodeType":"834","messageId":"835","endLine":21,"endColumn":56},{"ruleId":"832","severity":1,"message":"864","line":22,"column":20,"nodeType":"834","messageId":"835","endLine":22,"endColumn":36},{"ruleId":"865","severity":1,"message":"866","line":41,"column":8,"nodeType":"867","endLine":41,"endColumn":18,"suggestions":"868"},{"ruleId":"832","severity":1,"message":"869","line":36,"column":13,"nodeType":"834","messageId":"835","endLine":36,"endColumn":20},{"ruleId":"832","severity":1,"message":"870","line":10,"column":10,"nodeType":"834","messageId":"835","endLine":10,"endColumn":19},{"ruleId":"832","severity":1,"message":"871","line":11,"column":10,"nodeType":"834","messageId":"835","endLine":11,"endColumn":23},{"ruleId":"832","severity":1,"message":"869","line":40,"column":13,"nodeType":"834","messageId":"835","endLine":40,"endColumn":20},{"ruleId":"832","severity":1,"message":"872","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"873","line":39,"column":11,"nodeType":"834","messageId":"835","endLine":39,"endColumn":29},{"ruleId":"832","severity":1,"message":"874","line":17,"column":12,"nodeType":"834","messageId":"835","endLine":17,"endColumn":18},{"ruleId":"832","severity":1,"message":"875","line":17,"column":20,"nodeType":"834","messageId":"835","endLine":17,"endColumn":29},{"ruleId":"832","severity":1,"message":"869","line":19,"column":13,"nodeType":"834","messageId":"835","endLine":19,"endColumn":20},{"ruleId":"832","severity":1,"message":"876","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":13},{"ruleId":"832","severity":1,"message":"869","line":21,"column":13,"nodeType":"834","messageId":"835","endLine":21,"endColumn":20},{"ruleId":"832","severity":1,"message":"877","line":1,"column":27,"nodeType":"834","messageId":"835","endLine":1,"endColumn":35},{"ruleId":"832","severity":1,"message":"872","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"878","line":7,"column":8,"nodeType":"834","messageId":"835","endLine":7,"endColumn":12},{"ruleId":"832","severity":1,"message":"869","line":19,"column":13,"nodeType":"834","messageId":"835","endLine":19,"endColumn":20},{"ruleId":"832","severity":1,"message":"863","line":20,"column":41,"nodeType":"834","messageId":"835","endLine":20,"endColumn":45},{"ruleId":"832","severity":1,"message":"879","line":20,"column":61,"nodeType":"834","messageId":"835","endLine":20,"endColumn":70},{"ruleId":"832","severity":1,"message":"876","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":13},{"ruleId":"832","severity":1,"message":"869","line":21,"column":13,"nodeType":"834","messageId":"835","endLine":21,"endColumn":20},{"ruleId":"832","severity":1,"message":"869","line":19,"column":13,"nodeType":"834","messageId":"835","endLine":19,"endColumn":20},{"ruleId":"832","severity":1,"message":"880","line":19,"column":22,"nodeType":"834","messageId":"835","endLine":19,"endColumn":27},{"ruleId":"832","severity":1,"message":"881","line":1,"column":27,"nodeType":"834","messageId":"835","endLine":1,"endColumn":36},{"ruleId":"832","severity":1,"message":"881","line":1,"column":37,"nodeType":"834","messageId":"835","endLine":1,"endColumn":46},{"ruleId":"832","severity":1,"message":"872","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"878","line":7,"column":8,"nodeType":"834","messageId":"835","endLine":7,"endColumn":12},{"ruleId":"832","severity":1,"message":"882","line":15,"column":11,"nodeType":"834","messageId":"835","endLine":15,"endColumn":16},{"ruleId":"832","severity":1,"message":"883","line":12,"column":5,"nodeType":"834","messageId":"835","endLine":12,"endColumn":20},{"ruleId":"832","severity":1,"message":"884","line":17,"column":5,"nodeType":"834","messageId":"835","endLine":17,"endColumn":23},{"ruleId":"832","severity":1,"message":"885","line":22,"column":5,"nodeType":"834","messageId":"835","endLine":22,"endColumn":23},{"ruleId":"832","severity":1,"message":"838","line":25,"column":5,"nodeType":"834","messageId":"835","endLine":25,"endColumn":28},{"ruleId":"832","severity":1,"message":"839","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":28},{"ruleId":"832","severity":1,"message":"840","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":25},{"ruleId":"832","severity":1,"message":"886","line":41,"column":5,"nodeType":"834","messageId":"835","endLine":41,"endColumn":24},{"ruleId":"832","severity":1,"message":"887","line":12,"column":5,"nodeType":"834","messageId":"835","endLine":12,"endColumn":23},{"ruleId":"832","severity":1,"message":"888","line":17,"column":5,"nodeType":"834","messageId":"835","endLine":17,"endColumn":26},{"ruleId":"832","severity":1,"message":"889","line":22,"column":5,"nodeType":"834","messageId":"835","endLine":22,"endColumn":26},{"ruleId":"832","severity":1,"message":"841","line":25,"column":5,"nodeType":"834","messageId":"835","endLine":25,"endColumn":31},{"ruleId":"832","severity":1,"message":"842","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":31},{"ruleId":"832","severity":1,"message":"843","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":28},{"ruleId":"832","severity":1,"message":"890","line":9,"column":5,"nodeType":"834","messageId":"835","endLine":9,"endColumn":25},{"ruleId":"832","severity":1,"message":"891","line":9,"column":27,"nodeType":"834","messageId":"835","endLine":9,"endColumn":47},{"ruleId":"832","severity":1,"message":"892","line":9,"column":49,"nodeType":"834","messageId":"835","endLine":9,"endColumn":66},{"ruleId":"832","severity":1,"message":"844","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"859","line":6,"column":10,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"893","line":9,"column":10,"nodeType":"834","messageId":"835","endLine":9,"endColumn":24},{"ruleId":"865","severity":1,"message":"894","line":42,"column":8,"nodeType":"867","endLine":42,"endColumn":41,"suggestions":"895"},{"ruleId":"824","replacedBy":"896"},{"ruleId":"826","replacedBy":"897"},{"ruleId":"828","severity":1,"message":"829","line":11,"column":39,"nodeType":"830","messageId":"831","endLine":11,"endColumn":41},{"ruleId":"832","severity":1,"message":"833","line":15,"column":5,"nodeType":"834","messageId":"835","endLine":15,"endColumn":25},{"ruleId":"832","severity":1,"message":"836","line":16,"column":5,"nodeType":"834","messageId":"835","endLine":16,"endColumn":25},{"ruleId":"832","severity":1,"message":"837","line":17,"column":5,"nodeType":"834","messageId":"835","endLine":17,"endColumn":22},{"ruleId":"832","severity":1,"message":"841","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":31},{"ruleId":"832","severity":1,"message":"842","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":31},{"ruleId":"832","severity":1,"message":"843","line":28,"column":5,"nodeType":"834","messageId":"835","endLine":28,"endColumn":28},{"ruleId":"832","severity":1,"message":"838","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":28},{"ruleId":"832","severity":1,"message":"839","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":28},{"ruleId":"832","severity":1,"message":"840","line":28,"column":5,"nodeType":"834","messageId":"835","endLine":28,"endColumn":25},{"ruleId":"852","severity":1,"message":"853","line":10,"column":21,"nodeType":"847","endLine":10,"endColumn":340},{"ruleId":"854","severity":1,"message":"855","line":33,"column":25,"nodeType":"847","endLine":33,"endColumn":111},{"ruleId":"832","severity":1,"message":"844","line":8,"column":8,"nodeType":"834","messageId":"835","endLine":8,"endColumn":14},{"ruleId":"845","severity":1,"message":"846","line":52,"column":21,"nodeType":"847","endLine":52,"endColumn":61},{"ruleId":"845","severity":1,"message":"846","line":53,"column":21,"nodeType":"847","endLine":53,"endColumn":61},{"ruleId":"845","severity":1,"message":"846","line":54,"column":21,"nodeType":"847","endLine":54,"endColumn":61},{"ruleId":"832","severity":1,"message":"848","line":19,"column":12,"nodeType":"834","messageId":"835","endLine":19,"endColumn":18},{"ruleId":"832","severity":1,"message":"849","line":19,"column":20,"nodeType":"834","messageId":"835","endLine":19,"endColumn":29},{"ruleId":"832","severity":1,"message":"850","line":20,"column":30,"nodeType":"834","messageId":"835","endLine":20,"endColumn":42},{"ruleId":"832","severity":1,"message":"851","line":21,"column":34,"nodeType":"834","messageId":"835","endLine":21,"endColumn":51},{"ruleId":"856","severity":1,"message":"857","line":64,"column":41,"nodeType":"847","endLine":64,"endColumn":79},{"ruleId":"856","severity":1,"message":"857","line":68,"column":41,"nodeType":"847","endLine":68,"endColumn":79},{"ruleId":"856","severity":1,"message":"857","line":73,"column":41,"nodeType":"847","endLine":73,"endColumn":126},{"ruleId":"832","severity":1,"message":"858","line":3,"column":8,"nodeType":"834","messageId":"835","endLine":3,"endColumn":14},{"ruleId":"832","severity":1,"message":"848","line":16,"column":12,"nodeType":"834","messageId":"835","endLine":16,"endColumn":18},{"ruleId":"832","severity":1,"message":"849","line":16,"column":20,"nodeType":"834","messageId":"835","endLine":16,"endColumn":29},{"ruleId":"832","severity":1,"message":"844","line":6,"column":8,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"860","line":11,"column":10,"nodeType":"834","messageId":"835","endLine":11,"endColumn":20},{"ruleId":"832","severity":1,"message":"844","line":6,"column":8,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"844","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"859","line":6,"column":10,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"844","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"859","line":6,"column":10,"nodeType":"834","messageId":"835","endLine":6,"endColumn":14},{"ruleId":"832","severity":1,"message":"893","line":9,"column":10,"nodeType":"834","messageId":"835","endLine":9,"endColumn":24},{"ruleId":"865","severity":1,"message":"894","line":42,"column":8,"nodeType":"867","endLine":42,"endColumn":41,"suggestions":"898"},{"ruleId":"832","severity":1,"message":"861","line":4,"column":10,"nodeType":"834","messageId":"835","endLine":4,"endColumn":18},{"ruleId":"832","severity":1,"message":"862","line":17,"column":13,"nodeType":"834","messageId":"835","endLine":17,"endColumn":22},{"ruleId":"832","severity":1,"message":"869","line":36,"column":13,"nodeType":"834","messageId":"835","endLine":36,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":41,"column":8,"nodeType":"867","endLine":41,"endColumn":18,"suggestions":"899"},{"ruleId":"832","severity":1,"message":"872","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"870","line":10,"column":10,"nodeType":"834","messageId":"835","endLine":10,"endColumn":19},{"ruleId":"832","severity":1,"message":"871","line":11,"column":10,"nodeType":"834","messageId":"835","endLine":11,"endColumn":23},{"ruleId":"832","severity":1,"message":"869","line":40,"column":13,"nodeType":"834","messageId":"835","endLine":40,"endColumn":20},{"ruleId":"832","severity":1,"message":"873","line":39,"column":11,"nodeType":"834","messageId":"835","endLine":39,"endColumn":29},{"ruleId":"832","severity":1,"message":"876","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":13},{"ruleId":"832","severity":1,"message":"869","line":21,"column":13,"nodeType":"834","messageId":"835","endLine":21,"endColumn":20},{"ruleId":"832","severity":1,"message":"874","line":17,"column":12,"nodeType":"834","messageId":"835","endLine":17,"endColumn":18},{"ruleId":"832","severity":1,"message":"875","line":17,"column":20,"nodeType":"834","messageId":"835","endLine":17,"endColumn":29},{"ruleId":"832","severity":1,"message":"869","line":19,"column":13,"nodeType":"834","messageId":"835","endLine":19,"endColumn":20},{"ruleId":"832","severity":1,"message":"876","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":13},{"ruleId":"832","severity":1,"message":"869","line":21,"column":13,"nodeType":"834","messageId":"835","endLine":21,"endColumn":20},{"ruleId":"832","severity":1,"message":"869","line":19,"column":13,"nodeType":"834","messageId":"835","endLine":19,"endColumn":20},{"ruleId":"832","severity":1,"message":"880","line":19,"column":22,"nodeType":"834","messageId":"835","endLine":19,"endColumn":27},{"ruleId":"832","severity":1,"message":"877","line":1,"column":27,"nodeType":"834","messageId":"835","endLine":1,"endColumn":35},{"ruleId":"832","severity":1,"message":"872","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"878","line":7,"column":8,"nodeType":"834","messageId":"835","endLine":7,"endColumn":12},{"ruleId":"832","severity":1,"message":"869","line":19,"column":13,"nodeType":"834","messageId":"835","endLine":19,"endColumn":20},{"ruleId":"832","severity":1,"message":"863","line":20,"column":41,"nodeType":"834","messageId":"835","endLine":20,"endColumn":45},{"ruleId":"832","severity":1,"message":"879","line":20,"column":61,"nodeType":"834","messageId":"835","endLine":20,"endColumn":70},{"ruleId":"832","severity":1,"message":"881","line":1,"column":27,"nodeType":"834","messageId":"835","endLine":1,"endColumn":36},{"ruleId":"832","severity":1,"message":"863","line":21,"column":52,"nodeType":"834","messageId":"835","endLine":21,"endColumn":56},{"ruleId":"832","severity":1,"message":"864","line":22,"column":20,"nodeType":"834","messageId":"835","endLine":22,"endColumn":36},{"ruleId":"832","severity":1,"message":"881","line":1,"column":37,"nodeType":"834","messageId":"835","endLine":1,"endColumn":46},{"ruleId":"832","severity":1,"message":"872","line":5,"column":8,"nodeType":"834","messageId":"835","endLine":5,"endColumn":14},{"ruleId":"832","severity":1,"message":"878","line":7,"column":8,"nodeType":"834","messageId":"835","endLine":7,"endColumn":12},{"ruleId":"832","severity":1,"message":"882","line":15,"column":11,"nodeType":"834","messageId":"835","endLine":15,"endColumn":16},{"ruleId":"832","severity":1,"message":"886","line":41,"column":5,"nodeType":"834","messageId":"835","endLine":41,"endColumn":24},{"ruleId":"832","severity":1,"message":"887","line":12,"column":5,"nodeType":"834","messageId":"835","endLine":12,"endColumn":23},{"ruleId":"832","severity":1,"message":"888","line":17,"column":5,"nodeType":"834","messageId":"835","endLine":17,"endColumn":26},{"ruleId":"832","severity":1,"message":"889","line":22,"column":5,"nodeType":"834","messageId":"835","endLine":22,"endColumn":26},{"ruleId":"832","severity":1,"message":"841","line":25,"column":5,"nodeType":"834","messageId":"835","endLine":25,"endColumn":31},{"ruleId":"832","severity":1,"message":"842","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":31},{"ruleId":"832","severity":1,"message":"843","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":28},{"ruleId":"832","severity":1,"message":"883","line":12,"column":5,"nodeType":"834","messageId":"835","endLine":12,"endColumn":20},{"ruleId":"832","severity":1,"message":"884","line":17,"column":5,"nodeType":"834","messageId":"835","endLine":17,"endColumn":23},{"ruleId":"832","severity":1,"message":"885","line":22,"column":5,"nodeType":"834","messageId":"835","endLine":22,"endColumn":23},{"ruleId":"832","severity":1,"message":"838","line":25,"column":5,"nodeType":"834","messageId":"835","endLine":25,"endColumn":28},{"ruleId":"832","severity":1,"message":"839","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":28},{"ruleId":"832","severity":1,"message":"840","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":25},{"ruleId":"832","severity":1,"message":"890","line":9,"column":5,"nodeType":"834","messageId":"835","endLine":9,"endColumn":25},{"ruleId":"832","severity":1,"message":"891","line":9,"column":27,"nodeType":"834","messageId":"835","endLine":9,"endColumn":47},{"ruleId":"832","severity":1,"message":"892","line":9,"column":49,"nodeType":"834","messageId":"835","endLine":9,"endColumn":66},"no-native-reassign",["900"],"no-negated-in-lhs",["901"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'CANCEL_ORDER_REQUEST' is defined but never used.","Identifier","unusedVar","'CANCEL_ORDER_SUCCESS' is defined but never used.","'CANCEL_ORDER_FAIL' is defined but never used.","'GET_BRAND_BY_ID_REQUEST' is defined but never used.","'GET_BRAND_BY_ID_SUCCESS' is defined but never used.","'GET_BRAND_BY_ID_FAIL' is defined but never used.","'GET_CATEGORY_BY_ID_REQUEST' is defined but never used.","'GET_CATEGORY_BY_ID_SUCCESS' is defined but never used.","'GET_CATEGORY_BY_ID_FAIL' is defined but never used.","'Banner' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'rating' is assigned a value but never used.","'setRating' is assigned a value but never used.","'loadingBrand' is assigned a value but never used.","'loadingCategories' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Slider' is defined but never used.","'Link' is defined but never used.","'CART_RESET' is defined but never used.","'useAlert' is defined but never used.","'userLogin' is assigned a value but never used.","'user' is assigned a value but never used.","'errorUpdateOrder' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dateFrom' and 'dateTo'. Either include them or remove the dependency array.","ArrayExpression",["902"],"'loading' is assigned a value but never used.","'getBrands' is defined but never used.","'getCategories' is defined but never used.","'Loader' is defined but never used.","'deleteOrderHandler' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'swal' is defined but never used.","'createdAt' is assigned a value but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'alert' is assigned a value but never used.","'NEW_BRAND_RESET' is defined but never used.","'DELETE_BRAND_RESET' is defined but never used.","'UPDATE_BRAND_RESET' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'NEW_CATEGORY_RESET' is defined but never used.","'DELETE_CATEGORY_RESET' is defined but never used.","'UPDATE_CATEGORY_RESET' is defined but never used.","'NEW_PASSWORD_REQUEST' is defined but never used.","'NEW_PASSWORD_SUCCESS' is defined but never used.","'NEW_PASSWORD_FAIL' is defined but never used.","'forgotPassword' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["903"],["900"],["901"],["904"],["905"],"no-global-assign","no-unsafe-negation",{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"desc":"908","fix":"910"},{"desc":"906","fix":"911"},"Update the dependencies array to be: [dateFrom, dateTo, dispatch]",{"range":"912","text":"913"},"Update the dependencies array to be: [dispatch, alert, error, message, history]",{"range":"914","text":"915"},{"range":"916","text":"915"},{"range":"917","text":"913"},[1739,1749],"[dateFrom, dateTo, dispatch]",[1268,1301],"[dispatch, alert, error, message, history]",[1268,1301],[1735,1745]]